Sjasm Z80 Assembler v0.42b8 - www.xl2s.tk             [2019.02.25 - 23:09:27]

src\main128.asm
Errors: 0

       1   00:0000                      
       2   00:0000                      
       3   00:0000                      	incdir data_bin/
       4   00:0000                      
       5   00:0000                      	include parameters.asm
       1.  00:0000  (00:0040)           LvlWidth:  equ 64
       2.  00:0000  (00:004F)           LvlHeigh:  equ 79
       3.  00:0000  (00:0002)           CommonTiles:  equ 2
       4.  00:0000  (00:002D)           TileSize11:  equ 45
       5.  00:0000  (00:0046)           TileSize13:  equ 70
       6.  00:0000  (00:0049)           TileSize15:  equ 73
       7.  00:0000  (00:0045)           TileSize17:  equ 69
       8.  00:0000  (00:0042)           TileSize31:  equ 66
       9.  00:0000  (00:0071)           TileSize33:  equ 113
      10.  00:0000  (00:007C)           TileSize35:  equ 124
      11.  00:0000  (00:006E)           TileSize37:  equ 110
      12.  00:0000  (00:0040)           TileSize51:  equ 64
      13.  00:0000  (00:007E)           TileSize53:  equ 126
      14.  00:0000  (00:008D)           TileSize55:  equ 141
      15.  00:0000  (00:0079)           TileSize57:  equ 121
      16.  00:0000  (00:0047)           TileSize71:  equ 71
      17.  00:0000  (00:007A)           TileSize73:  equ 122
      18.  00:0000  (00:0085)           TileSize75:  equ 133
      19.  00:0000  (00:0077)           TileSize77:  equ 119
       6   00:0000                      	
       7   00:0000                      	output Scrll8way128.rom
       8   00:0000                      
       9   00:0000                      	defpage	0,0x4000, 0x2000		; page 0 contains main code + far call routines
      10   00:0000                      	defpage 1,0x6000, 0x2000		; static code 
      11   00:0000                      	defpage	2,0x8000, 0x2000		; static code
      12   00:0000                      	
      13   00:0000                      	defpage	3,0xA000, 0x2000		; 
      14   00:0000                      	defpage	4,0xA000, 0x2000		; 
      15   00:0000                      	defpage	5,0xA000, 0x2000		; sprites
      16   00:0000                      	
      17   00:0000                      	defpage	6,0xA000, 0x2000		; meta map
      18   00:0000                      	defpage	7,0xA000, 0x2000		; metavec 
      19   00:0000                      	
      20   00:0000                      	defpage	 8,0xA000, 0x2000		; patterns_base
      21   00:0000                      	defpage	 9,0xA000, 0x2000		; patterns_base
      22   00:0000                      	defpage	10,0xA000, 0x2000		; patterns_base
      23   00:0000                      	defpage	11,0xA000, 0x2000		; patterns_base
      24   00:0000                      	defpage	12,0xA000, 0x2000		; colors_base
      25   00:0000                      	defpage	13,0xA000, 0x2000		; colors_base
      26   00:0000                      	defpage	14,0xA000, 0x2000		; colors_base
      27   00:0000                      	defpage	15,0xA000, 0x2000		; colors_base
      28   00:0000                      
      29   00:0000  (06)                	page 6	
      30   06:A000                      metamap:
      31   06:A000  (13C0)              	incbin metamap.bin
      32   06:B3C0                      
      33   06:B3C0  (07)                	page 7
      34   07:A000                      metavec:
      35   07:A000  (1000)              	incbin metavec.bin
      36   07:B000                      
      37   07:B000  (08)                	page 8
      38   08:A000                      patterns_base:	
      39   08:A000                      patterns11_13_15_17:
      40   08:A000  (2000)              	incbin testpat.bin,00*2*1024,4*2*1024	
      41   08:C000  (09)                	page 9
      42   09:A000                      patterns31_33_35_37:
      43   09:A000  (2000)              	incbin testpat.bin,04*2*1024,8*1024	
      44   09:C000  (0A)                	page 10
      45   0A:A000                      patterns51_53_55_57:
      46   0A:A000  (2000)              	incbin testpat.bin,08*2*1024,8*1024	
      47   0A:C000  (0B)                	page 11
      48   0B:A000                      patterns71_73_75_77:
      49   0B:A000  (2000)              	incbin testpat.bin,12*2*1024,8*1024	
      50   0B:C000                      	
      51   0B:C000  (0C)                	page 12
      52   0C:A000                      colors_base:
      53   0C:A000                      colors11_13_15_17:
      54   0C:A000  (2000)              	incbin testcol.bin,00*2*1024,4*2*1024	
      55   0C:C000  (0D)                	page 13
      56   0D:A000                      colors31_33_35_37:
      57   0D:A000  (2000)              	incbin testcol.bin,04*2*1024,8*1024	
      58   0D:C000  (0E)                	page 14
      59   0E:A000                      colors51_53_55_57:
      60   0E:A000  (2000)              	incbin testcol.bin,08*2*1024,8*1024	
      61   0E:C000  (0F)                	page 15
      62   0F:A000                      colors71_73_75_77:
      63   0F:A000  (2000)              	incbin testcol.bin,12*2*1024,8*1024	
      64   0F:C000                      
      65   0F:C000                      
      66   0F:C000                      
      67   0F:C000                      
      68   0F:C000                      	macro setVdp register,value       ; macro definition
      69   0F:C000                    < 	di
      70   0F:C000                    < 	ld	a,value
      71   0F:C000                    < 	out	(0x99),a
      72   0F:C000                    < 	ld	a,register
      73   0F:C000                    < 	or	0x80
      74   0F:C000                    < 	out	(0x99),a
      75   0F:C000                    < 	ei
      76   0F:C000                    < 	endmacro
      77   0F:C000                        
      78   0F:C000                        	macro setvdpwvram value
      79   0F:C000                    <   	di			
      80   0F:C000                    < 	if (value & 0xFF)
      81   0F:C000                    < 		ld	a,value & 0xFF
      82   0F:C000                    < 	else
      83   0F:C000                    < 		xor	a
      84   0F:C000                    < 	endif
      85   0F:C000                    < 	out (0x99),a
      86   0F:C000                    < 	ld	a,0x40 + (value/256)
      87   0F:C000                    < 	out (0x99),a
      88   0F:C000                    < 	ei
      89   0F:C000                    < 	endmacro
      90   0F:C000                      ; -----------------------------
      91   0F:C000                      ; smooth scroller demo
      92   0F:C000                      ; Trilobyte 2014
      93   0F:C000                      ; ------------------------------
      94   0F:C000                      
      95   0F:C000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      96   0F:C000                      ;
      97   0F:C000                      ;   Mapper Konami 5 (mapper +  scc)
      98   0F:C000                      ;
      99   0F:C000                      ; Bank 1: 4000h - 5FFFh
     100   0F:C000                      ; Bank 2: 6000h - 7FFFh
     101   0F:C000                      ; Bank 3: 8000h - 9FFFh
     102   0F:C000                      ; Bank 4: A000h - BFFFh
     103   0F:C000                      
     104   0F:C000                      ; Bank 1: 5000h - 57FFh (5000h used)
     105   0F:C000                      ; Bank 2: 7000h - 77FFh (7000h used)
     106   0F:C000                      ; Bank 3: 9000h - 97FFh (9000h used)
     107   0F:C000                      ; Bank 4: B000h - B7FFh (B000h used)
     108   0F:C000                      
     109   0F:C000                      
     110   0F:C000                      ; *** CONSTANTS ***
     111   0F:C000  (0F:5000)           _bank1			equ	0x5000
     112   0F:C000  (0F:7000)           _bank2			equ	0x7000
     113   0F:C000  (0F:9000)           _bank3			equ	0x9000
     114   0F:C000  (0F:B000)           _bank4			equ	0xB000
     115   0F:C000                      
     116   0F:C000  (0F:0000)           _PCT:			equ	0x0000
     117   0F:C000  (0F:2000)           _PGT:			equ	0x2000
     118   0F:C000                      
     119   0F:C000                      
     120   0F:C000                      ; -----------------------------
     121   0F:C000                      ; parameters
     122   0F:C000                      ; 
     123   0F:C000                      ;	LvlWidth:	equ	373
     124   0F:C000                      ;	nphase:		equ	4 
     125   0F:C000                      ;	xstep:		equ	2 
     126   0F:C000                      ;
     127   0F:C000                      
     128   0F:C000                      ;		
     129   0F:C000  (0F:0080)           maxspeed:   	equ 8*16
     130   0F:C000  (0F:0001)           maxspeedstep:	equ	1
     131   0F:C000                      ;
     132   0F:C000                      ;minspeed:	equ	1		i.e. 	1/16
     133   0F:C000                      
     134   0F:C000                      ; ------------------------------
     135   0F:C000                      
     136   0F:C000                      ; *** RAM ***
     137   0F:C000                      
     138   0F:C000  (C000)              	map 0xc000
     139   0F:C000                      
     140   0F:C000  (0F:C000)           buffer:			#8*1024
     141   0F:C000                      
     142   0F:C000                      
     143   0F:C000  (0F:E000)           slotvar:		#1
     144   0F:C000  (0F:E001)           slotram:       	#1
     145   0F:C000                      
     146   0F:C000  (0F:E002)           msxtype			#1
     147   0F:C000  (0F:E003)           palette			#1
     148   0F:C000                      
     149   0F:C000  (0F:E004)           vsf:			#1
     150   0F:C000  (0F:E005)           cnt:			#1
     151   0F:C000  (0F:E006)           muteflag:		#1
     152   0F:C000                      
     153   0F:C000  (0F:E007)           SLOT            #1
     154   0F:C000  (0F:E008)           PAGE1RAM        #1
     155   0F:C000  (0F:E009)           RAMSLOT         #1
     156   0F:C000                      
     157   0F:C000  (0F:E00A)           SCC				#1
     158   0F:C000  (0F:E00B)           SUB             #1
     159   0F:C000                      
     160   0F:C000  (0F:E00C)           xmap			#2		; FP 8.8
     161   0F:C000  (0F:E00E)           ymap			#2		; FP 8.8
     162   0F:C000                      
     163   0F:C000  (0F:E010)           dxmap           #1		; FP 4.4
     164   0F:C000  (0F:E011)           dymap           #1		; FP 4.4
     165   0F:C000                      
     166   0F:C000  (0F:E012)           phase			#1
     167   0F:C000                      
     168   0F:C000                      
     169   0F:C000  (0000)              	endmap
     170   0F:C000                      
     171   0F:C000                      
     172   0F:C000                      	
     173   0F:C000                      	
     174   0F:C000                      ; *** tile set data in rom ***
     175   0F:C000                      
     176   0F:C000                      
     177   0F:C000  (05)                	page 5
     178   05:A000                      test_spt:
     179   05:A000  (0F50)              	incbin spt.bin
     180   05:AF50                      
     181   05:AF50                      ;	place 32 sprites
     182   05:AF50                      test_sat:
     183   05:AF50  (05:0000)           counter:=0
     184   05:AF50                      	repeat	8
     185   05:AF50                    < 	repeat	4
     186   05:AF50                    < 	db	@@# * 24
     187   05:AF50                    < 	db	48+@# * 32+@@#*8
     188   05:AF50                    < 	db	6*4+(counter and %00001100)
     189   05:AF50                    < 	db	15
     190   05:AF50                    < counter:=counter+4
     191   05:AF50                    < 	endrepeat
     192   05:AF50                    < 	endrepeat
     192   05:AF50  00 30 18 0F 00 50 1C 0F 00 70 20 0F 00 90 24 0F 
     192   05:AF60  18 38 18 0F 18 58 1C 0F 18 78 20 0F 18 98 24 0F 
     192   05:AF70  30 40 18 0F 30 60 1C 0F 30 80 20 0F 30 A0 24 0F 
     192   05:AF80  48 48 18 0F 48 68 1C 0F 48 88 20 0F 48 A8 24 0F 
     192   05:AF90  60 50 18 0F 60 70 1C 0F 60 90 20 0F 60 B0 24 0F 
     192   05:AFA0  78 58 18 0F 78 78 1C 0F 78 98 20 0F 78 B8 24 0F 
     192   05:AFB0  90 60 18 0F 90 80 1C 0F 90 A0 20 0F 90 C0 24 0F 
     192   05:AFC0  A8 68 18 0F A8 88 1C 0F A8 A8 20 0F A8 C8 24 0F 
     193   05:AFD0                      ; ------------
     194   05:AFD0                      ; megarom header
     195   05:AFD0                      
     196   05:AFD0  (00)                	page 0
     197   00:4000                      	code page 0
     198   00:4000                      	
     199   00:4000                      	org	04000h
     200   00:4000  41 42               	db	041h,042h
     201   00:4002  72 43               	dw	initmain
     202   00:4004                      	dz 	'TRI004'
     202   00:4004  54 52 49 30 30 34 00 
     203   00:400B  00 (5)              	ds	5
     204   00:4010                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     205   00:4010                      ;
     206   00:4010                      ; checkkbd: ckeck keyboard line
     207   00:4010                      ; in:  E = row
     208   00:4010                      ; out: L = bit pattern (1 = not pressed)
     209   00:4010                      ;
     210   00:4010                      ; row/bit|    7     6     5     4     3     2     1     0
     211   00:4010                      ; -------+--------------------------------------------------
     212   00:4010                      ;    0   |    7     6     5     4     3     2     1     0
     213   00:4010                      ;    1   |    ;     ]     [     \     =     -     9     8
     214   00:4010                      ;    2   |    B     A    ???    /     .     ,     '     `
     215   00:4010                      ;    3   |    J     I     H     G     F     E     D     C
     216   00:4010                      ;    4   |    R     Q     P     O     N     M     L     K
     217   00:4010                      ;    5   |    Z     Y     X     W     V     U     T     S
     218   00:4010                      ;    6   |   F3    F2    F1   CODE   CAP  GRAPH CTRL  SHIFT
     219   00:4010                      ;    7   |   RET   SEL   BS   STOP   TAB   ESC   F5    F4
     220   00:4010                      ;    8   |  RIGHT DOWN   UP   LEFT   DEL   INS  HOME  SPACE
     221   00:4010                      ;    9   |    4     3     2     1     0     /     +     *
     222   00:4010                      ;   10   |    .     ,     -     9     8     7     6     5
     223   00:4010                      ;   11   |                           NO          YES
     224   00:4010                      ;
     225   00:4010                      ;
     226   00:4010                      
     227   00:4010  (00:00A9)           i8255portb  equ 0a9h        ; keyboard column input
     228   00:4010  (00:00AA)           i8255portc  equ 0aah        ; leds, motor, cassette, kbd line
     229   00:4010                      
     230   00:4010                      checkkbd:
     231   00:4010  DB AA                   in  a,(i8255portc)
     232   00:4012  E6 F0                   and 011110000B          ; upper 4 bits contain info to preserve
     233   00:4014  B3                      or  e
     234   00:4015  D3 AA                   out (i8255portc),a
     235   00:4017  DB A9                   in  a,(i8255portb)
     236   00:4019  6F                      ld  l,a
     237   00:401A  C9                      ret
     238   00:401B                      
     239   00:401B                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     240   00:401B                      ; a = value
     241   00:401B                      ; e = register
     242   00:401B                      _setvdpreg:
     243   00:401B  F3                  	di
     244   00:401C  D3 99               	out (0x99),a
     245   00:401E  7B                  	ld	a,e
     246   00:401F  F6 80               	or	0x80
     247   00:4021  D3 99               	out (0x99),a
     248   00:4023  FB                  	ei
     249   00:4024  C9                  	ret
     250   00:4025                      
     251   00:4025                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     252   00:4025                      ; vdp access
     253   00:4025                      
     254   00:4025  (00:F3DF)           _vdpReg equ 0xF3DF
     255   00:4025  (00:F3AE)           LINL40	equ 0xF3AE
     256   00:4025                      
     257   00:4025                      ; e = screen mode
     258   00:4025                      _scr2:
     259   00:4025  3A E0 F3            	ld	a,(_vdpReg+1)
     260   00:4028  F6 02               	or 2
     261   00:402A  32 E0 F3            	ld	(_vdpReg+1),a
     262   00:402D                      	
     263   00:402D  3E 02               	ld	a,2
     264   00:402F  CD 5F 00            	call 0x005f
     265   00:4032                      	
     266   00:4032  C9                  	ret
     267   00:4033                      	
     268   00:4033                      ; set sprites
     269   00:4033                      
     270   00:4033                      set_sprites:
     271   00:4033  76                  	halt
     272   00:4034                      	setvdpwvram 0x3800
     272   00:4034  F3                >    di
     272   00:4035                    >  if (value & 0xFF)
     272   00:4035                    ~   ld a,value & 0xFF
     272   00:4035                    ~  else
     272   00:4035  AF                >   xor a
     272   00:4036                    >  endif
     272   00:4036  D3 99             >  out (0x99),a
     272   00:4038  3E 78             >  ld a,0x40 + (value/256)
     272   00:403A  D3 99             >  out (0x99),a
     272   00:403C  FB                >  ei
     273   00:403D  21 00 A0            	ld	hl,test_spt
     274   00:4040  3E 05               	ld	a,:test_spt
     275   00:4042  CD 5D 40            	call	write_256
     276   00:4045  76                  	halt
     277   00:4046                      	setvdpwvram 0x1B00
     277   00:4046  F3                >    di
     277   00:4047                    >  if (value & 0xFF)
     277   00:4047                    ~   ld a,value & 0xFF
     277   00:4047                    ~  else
     277   00:4047  AF                >   xor a
     277   00:4048                    >  endif
     277   00:4048  D3 99             >  out (0x99),a
     277   00:404A  3E 5B             >  ld a,0x40 + (value/256)
     277   00:404C  D3 99             >  out (0x99),a
     277   00:404E  FB                >  ei
     278   00:404F  21 50 AF            	ld	hl,test_sat
     279   00:4052  3E 05               	ld	a,:test_sat
     280   00:4054  32 00 B0            	ld	(_bank4),a	
     281   00:4057  01 98 80            	ld	bc,0x8098
     282   00:405A  ED B3               	otir
     283   00:405C  C9                  	ret
     284   00:405D                      
     285   00:405D                      write_256:
     286   00:405D  32 00 B0            	ld	(_bank4),a
     287   00:4060  01 98 00            	ld	bc,0x0098
     288   00:4063                      	repeat 8
     289   00:4063                    < 	otir
     290   00:4063                    < 	endrepeat
     290   00:4063  ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 
     291   00:4073  C9                  	ret
     292   00:4074                      
     293   00:4074                      cls:
     294   00:4074                      	setvdpwvram 0x1800
     294   00:4074  F3                >    di
     294   00:4075                    >  if (value & 0xFF)
     294   00:4075                    ~   ld a,value & 0xFF
     294   00:4075                    ~  else
     294   00:4075  AF                >   xor a
     294   00:4076                    >  endif
     294   00:4076  D3 99             >  out (0x99),a
     294   00:4078  3E 58             >  ld a,0x40 + (value/256)
     294   00:407A  D3 99             >  out (0x99),a
     294   00:407C  FB                >  ei
     295   00:407D  06 00               	ld	b,0
     296   00:407F  3E FF               	ld	a,255
     297   00:4081  D3 98               1:	out	(0x98),a
     298   00:4083  05                  	dec	b
     299   00:4084  20 FB               	jr	nz,1b
     300   00:4086                      	
     301   00:4086                      	setvdpwvram 0x2000
     301   00:4086  F3                >    di
     301   00:4087                    >  if (value & 0xFF)
     301   00:4087                    ~   ld a,value & 0xFF
     301   00:4087                    ~  else
     301   00:4087  AF                >   xor a
     301   00:4088                    >  endif
     301   00:4088  D3 99             >  out (0x99),a
     301   00:408A  3E 60             >  ld a,0x40 + (value/256)
     301   00:408C  D3 99             >  out (0x99),a
     301   00:408E  FB                >  ei
     302   00:408F  06 00               	ld	b,0
     303   00:4091  AF                  	xor	a
     304   00:4092                      [8]	call	1f
     304   00:4092  CD CF 40 CD CF 40 CD CF 40 CD CF 40 CD CF 40 CD 
     304   00:40A2  CF 40 CD CF 40 CD CF 40 
     305   00:40AA                      	setvdpwvram 0x0000
     305   00:40AA  F3                >    di
     305   00:40AB                    >  if (value & 0xFF)
     305   00:40AB                    ~   ld a,value & 0xFF
     305   00:40AB                    ~  else
     305   00:40AB  AF                >   xor a
     305   00:40AC                    >  endif
     305   00:40AC  D3 99             >  out (0x99),a
     305   00:40AE  3E 40             >  ld a,0x40 + (value/256)
     305   00:40B0  D3 99             >  out (0x99),a
     305   00:40B2  FB                >  ei
     306   00:40B3  06 00               	ld	b,0
     307   00:40B5  AF                  	xor	a
     308   00:40B6                      [8]	call	1f
     308   00:40B6  CD CF 40 CD CF 40 CD AA 41 CD AA 41 CD AA 41 CD 
     308   00:40C6  AA 41 CD AA 41 CD AA 41 
     309   00:40CE  C9                  	ret
     310   00:40CF                      
     311   00:40CF  D3 98               1:	out	(0x98),a
     312   00:40D1  05                  	dec	b
     313   00:40D2  20 FB               	jr	nz,1b
     314   00:40D4  C9                  	ret
     315   00:40D5                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     316   00:40D5                      ;
     317   00:40D5                      ;	load tile sets
     318   00:40D5                      setvramp1:
     319   00:40D5  CD 3B 41            	call getbank	;->a 
     320   00:40D8  32 00 B0            	ld (_bank4),a
     321   00:40DB  CD 47 41            	call getaddr	;->hl
     322   00:40DE  CD 55 41            	call getsize	;->a
     323   00:40E1  11 00 08            	ld	de,0x0800
     324   00:40E4  CD 93 41            	call write_2k
     325   00:40E7                      	
     326   00:40E7  CD 47 41            	call getaddr	;->hl
     327   00:40EA  CD 55 41            	call getsize	;->a
     328   00:40ED  11 00 10            	ld	de,0x1000
     329   00:40F0  CD 93 41            	call write_2k
     330   00:40F3                      
     331   00:40F3  CD 3B 41            	call getbank	;->a 
     332   00:40F6  C6 04               	add	a,4			; colorbank = tilebank+4
     333   00:40F8  32 00 B0            	ld (_bank4),a
     334   00:40FB  CD 47 41            	call getaddr	;->hl
     335   00:40FE  CD 55 41            	call getsize	;->a
     336   00:4101  11 00 20            	ld	de,0x2000
     337   00:4104  CD 93 41            	call write_2k
     338   00:4107  C9                  	ret
     339   00:4108                      	
     340   00:4108                      setvramp0:
     341   00:4108  CD 3B 41            	call getbank	;->a 
     342   00:410B  32 00 B0            	ld (_bank4),a
     343   00:410E  CD 47 41            	call getaddr	;->hl
     344   00:4111  CD 55 41            	call getsize	;->a
     345   00:4114  11 00 28            	ld	de,0x2800
     346   00:4117  CD 93 41            	call write_2k
     347   00:411A                      	
     348   00:411A  CD 47 41            	call getaddr	;->hl
     349   00:411D  CD 55 41            	call getsize	;->a
     350   00:4120  11 00 30            	ld	de,0x3000
     351   00:4123  CD 93 41            	call write_2k
     352   00:4126                      
     353   00:4126  CD 3B 41            	call getbank	;->a 
     354   00:4129  C6 04               	add	a,4			; colorbank = tilebank+4
     355   00:412B  32 00 B0            	ld (_bank4),a
     356   00:412E  CD 47 41            	call getaddr	;->hl
     357   00:4131  CD 55 41            	call getsize	;->a
     358   00:4134  11 00 00            	ld	de,0x0000
     359   00:4137  CD 93 41            	call write_2k
     360   00:413A  C9                  	ret
     361   00:413B                      	
     362   00:413B                      getbank:
     363   00:413B  ED 5B 12 E0         	ld	de,(phase)
     364   00:413F  21 63 41            	ld	hl,tilebank
     365   00:4142  16 00               	ld	d,0
     366   00:4144  19                  	add	hl,de
     367   00:4145  7E                  	ld	a,(hl)
     368   00:4146  C9                  	ret
     369   00:4147                      getaddr:
     370   00:4147  ED 5B 12 E0         	ld	de,(phase)
     371   00:414B  21 83 41            	ld	hl,tileaddress
     372   00:414E  16 00               	ld	d,0
     373   00:4150  19                  	add	hl,de
     374   00:4151  66                  	ld	h,(hl)
     375   00:4152  2E 00               	ld	l,0
     376   00:4154  C9                  	ret
     377   00:4155                      getsize:
     378   00:4155  E5                  	push	hl
     379   00:4156  ED 5B 12 E0         	ld	de,(phase)
     380   00:415A  21 73 41            	ld	hl,tilesize
     381   00:415D  16 00               	ld	d,0
     382   00:415F  19                  	add	hl,de
     383   00:4160  7E                  	ld	a,(hl)
     384   00:4161  E1                  	pop	hl
     385   00:4162  C9                  	ret
     386   00:4163                      
     387   00:4163                      	
     388   00:4163                      	;	patternsxy
     389   00:4163                      tilebank:
     390   00:4163  08 08 08 08         	db	:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17
     391   00:4167  09 09 09 09         	db	:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37
     392   00:416B  0A 0A 0A 0A         	db	:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57
     393   00:416F  0B 0B 0B 0B         	db	:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77
     394   00:4173                      tilesize:	
     395   00:4173  2D 46 49 45         	db	TileSize11,TileSize13,TileSize15,TileSize17
     396   00:4177  42 71 7C 6E         	db	TileSize31,TileSize33,TileSize35,TileSize37
     397   00:417B  40 7E 8D 79         	db	TileSize51,TileSize53,TileSize55,TileSize57
     398   00:417F  47 7A 85 77         	db	TileSize71,TileSize73,TileSize75,TileSize77
     399   00:4183                      tileaddress:	
     400   00:4183  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     401   00:4187  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     402   00:418B  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     403   00:418F  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     404   00:4193                      	
     405   00:4193                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     406   00:4193                      ; write 2K while ints are active from hl to de
     407   00:4193                      ; in: de vram address
     408   00:4193                      ;     hl ram address
     409   00:4193                      ;	   a counter of 8 bytes chunks	
     410   00:4193                      write_2k:
     411   00:4193  E5                  	push hl
     412   00:4194  EB                  	ex	de,hl
     413   00:4195  CB F4               	set	6,h
     414   00:4197  0E 99               	ld	c,0x99
     415   00:4199  11 08 00            	ld	de,8
     416   00:419C  D9                  	exx
     417   00:419D  E1                  	pop	hl		; ram source in HL'
     418   00:419E  0E 98               	ld	c,0x98	; data port in c'
     419   00:41A0  F3                  2:	di
     420   00:41A1  D9                  	exx
     421   00:41A2  ED 69               	out (c),l
     422   00:41A4  ED 61               	out (c),h	;c = 0x99, HL with write setup bit set
     423   00:41A6  19                  	add hl,de	;de = 8
     424   00:41A7  D9                  	exx
     425   00:41A8  06 08               	ld b,8
     426   00:41AA  ED A3               1:	outi		;c' = 0x98
     427   00:41AC  C2 AA 41            	jp nz,1b
     428   00:41AF  FB                  	ei
     429   00:41B0  3D                  	dec a
     430   00:41B1  C2 A0 41            	jp nz,2b
     431   00:41B4  C9                  	ret
     432   00:41B5                      	
     433   00:41B5                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     434   00:41B5                      ;	in xmap,ymap
     435   00:41B5                      ;
     436   00:41B5                      _plot_pnt:
     437   00:41B5  3E 07               	ld	a,:metavec
     438   00:41B7  32 00 B0            	ld	(_bank4),a
     439   00:41BA                      
     440   00:41BA  3A 12 E0            	ld	a,(phase)
     441   00:41BD  C6 A0               	add	a,metavec/256
     442   00:41BF  32 12 E0            	ld	(phase),a
     443   00:41C2                      	
     444   00:41C2  21 00 C0            	ld	hl,buffer	; meta map in ram
     445   00:41C5                      	
     446   00:41C5                      	
     447   00:41C5  3A 0F E0            	ld	a,(ymap+1)	; ymap 8.8	
     448   00:41C8  A7                  	and	a
     449   00:41C9  28 07               	jr	z,1f
     450   00:41CB  01 40 00            	ld	bc,LvlWidth
     451   00:41CE  09                  2:	add	hl,bc
     452   00:41CF  3D                  	dec a
     453   00:41D0  20 FC               	jr	nz,2b
     454   00:41D2                      1:
     455   00:41D2  3A 0D E0            	ld	a,(xmap+1)	; xmap 8.8	
     456   00:41D5  5F                  	ld	e,a
     457   00:41D6  16 00               	ld	d,0
     458   00:41D8  19                  	add	hl,de
     459   00:41D9  EB                  	ex	de,hl
     460   00:41DA                      	
     461   00:41DA                      	setvdpwvram 0x1900
     461   00:41DA  F3                >    di
     461   00:41DB                    >  if (value & 0xFF)
     461   00:41DB                    ~   ld a,value & 0xFF
     461   00:41DB                    ~  else
     461   00:41DB  AF                >   xor a
     461   00:41DC                    >  endif
     461   00:41DC  D3 99             >  out (0x99),a
     461   00:41DE  3E 59             >  ld a,0x40 + (value/256)
     461   00:41E0  D3 99             >  out (0x99),a
     461   00:41E2  FB                >  ei
     462   00:41E3  01 98 10            	ld	bc,0x1098
     463   00:41E6  C5                  1:	push	bc
     464   00:41E7                      	repeat 32
     465   00:41E7                    < 	ld	a,(de)
     466   00:41E7                    < 	ld	l,a
     467   00:41E7                    < 	ld	a,(phase)
     468   00:41E7                    < 	ld	h,a
     469   00:41E7                    < 	outi         ; Send data pointed by HL to VDP port (reg.C preloaded 
     470   00:41E7                    < 	inc	de
     471   00:41E7                    < 	endrepeat
     471   00:41E7  1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED 
     471   00:41F7  A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 
     471   00:4207  67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 
     471   00:4217  12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 
     471   00:4227  6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 
     471   00:4237  13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 
     471   00:4247  ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 
     471   00:4257  E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 
     471   00:4267  3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 
     471   00:4277  1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED 
     471   00:4287  A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 
     471   00:4297  67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 
     471   00:42A7  12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 
     471   00:42B7  6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 
     471   00:42C7  13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 
     471   00:42D7  ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 
     471   00:42E7  E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 
     471   00:42F7  3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 
     472   00:4307                      	
     473   00:4307  21 20 00            	ld	hl,LvlWidth-32
     474   00:430A  19                  	add	hl,de
     475   00:430B  EB                  	ex	de,hl
     476   00:430C                      	
     477   00:430C  C1                  	pop	bc
     478   00:430D  05                  	dec b
     479   00:430E  C2 E6 41            	jp nz,1b
     480   00:4311                      
     481   00:4311  C9                  	ret
     482   00:4312                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     483   00:4312                      
     484   00:4312                      ;          defb 0x02 ; Reg# 0 000000[M3][EV]
     485   00:4312                      ;          defb 0x62 ; Reg# 1 [4/16k][BLANK][IE][M1][M2]0[SIZE][MAG]
     486   00:4312                      ;          defb 0x06 ; Reg# 2 0000[NAME TABLE BASE ADDRESS]          = 1800h
     487   00:4312                      
     488   00:4312                      ;          defb 0x9F ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; hybrid mode for colors
     489   00:4312                      ;          defb 0xFF ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; regular mode for colors	
     490   00:4312                      
     491   00:4312                      ;          defb 0x1F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; hybrid mode for colors
     492   00:4312                      ;          defb 0x7F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; regular mode for colors	
     493   00:4312                      	  
     494   00:4312                      ;          defb 0x00 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; hybrid mode for patterns
     495   00:4312                      ;          defb 0x03 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; regular mode for patterns
     496   00:4312                      
     497   00:4312                      ;          defb 0x04 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; hybrid mode for patterns
     498   00:4312                      ;          defb 0x07 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; regular mode for patterns
     499   00:4312                                
     500   00:4312                      ;          defb 0x36 ; Reg# 5 0[SPRITE ATTRIBUTE TABLE BASE ADDRESS] = 1b00h
     501   00:4312                      ;          defb 0x07 ; Reg# 6 00000[SPRITE PTRN GNRTR BASE ADDRESS]  = 3800h
     502   00:4312                      ;          defb 0x01 ; Reg# 7 [TEXT COLOR 4bts][BACKDROP COLOR 4bts]
     503   00:4312                      
     504   00:4312                      
     505   00:4312                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     506   00:4312                      disp_page1:			; page 1 active
     507   00:4312                      	setVdp 3,0x9F	; 	colours at 0x2000	(hybrid)
     507   00:4312  F3                >  di
     507   00:4313  3E 9F             >  ld a,value
     507   00:4315  D3 99             >  out (0x99),a
     507   00:4317  3E 03             >  ld a,register
     507   00:4319  F6 80             >  or 0x80
     507   00:431B  D3 99             >  out (0x99),a
     507   00:431D  FB                >  ei
     508   00:431E                      	setVdp 4,0x03	;	patterns at 0x0000	(regular: used 0x0800 0x1000)
     508   00:431E  F3                >  di
     508   00:431F  3E 03             >  ld a,value
     508   00:4321  D3 99             >  out (0x99),a
     508   00:4323  3E 04             >  ld a,register
     508   00:4325  F6 80             >  or 0x80
     508   00:4327  D3 99             >  out (0x99),a
     508   00:4329  FB                >  ei
     509   00:432A  C9                  	ret
     510   00:432B                      
     511   00:432B                      disp_page0:			; page 0 active
     512   00:432B                      	setVdp 3,0x1F	; 	colours at 0x0000	(hybrid)
     512   00:432B  F3                >  di
     512   00:432C  3E 1F             >  ld a,value
     512   00:432E  D3 99             >  out (0x99),a
     512   00:4330  3E 03             >  ld a,register
     512   00:4332  F6 80             >  or 0x80
     512   00:4334  D3 99             >  out (0x99),a
     512   00:4336  FB                >  ei
     513   00:4337                      	setVdp 4,0x07	;	patterns at 0x2000	(regular: used 0x2800 0x3000)
     513   00:4337  F3                >  di
     513   00:4338  3E 07             >  ld a,value
     513   00:433A  D3 99             >  out (0x99),a
     513   00:433C  3E 04             >  ld a,register
     513   00:433E  F6 80             >  or 0x80
     513   00:4340  D3 99             >  out (0x99),a
     513   00:4342  FB                >  ei
     514   00:4343  C9                  	ret	
     515   00:4344                      
     516   00:4344                      
     517   00:4344                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     518   00:4344                      ; set pages and subslot
     519   00:4344                      ;
     520   00:4344                      rominit:
     521   00:4344  CD 38 01            	call    0x138
     522   00:4347  0F                  	rrca
     523   00:4348  0F                  	rrca
     524   00:4349  E6 03               	and     0x03
     525   00:434B  4F                  	ld      c,a
     526   00:434C  06 00               	ld      b,0
     527   00:434E  21 C1 FC            	ld      hl,0xfcc1
     528   00:4351  09                  	add     hl,bc
     529   00:4352  B6                  	or      (hl)
     530   00:4353  47                  	ld      b,a
     531   00:4354  23                  	inc     hl
     532   00:4355  23                  	inc     hl
     533   00:4356  23                  	inc     hl
     534   00:4357  23                  	inc     hl
     535   00:4358  7E                  	ld      a,(hl)
     536   00:4359  E6 0C               	and     0x0c
     537   00:435B  B0                  	or      b
     538   00:435C                          
     539   00:435C  26 80               	ld      h,0x80
     540   00:435E  CD 24 00            	call    0x24  
     541   00:4361                      	
     542   00:4361                      	; now we have:
     543   00:4361                      	; page 0 	- bios
     544   00:4361                      	; page 1,2	- megarom mapper
     545   00:4361                      	; page 3	- RAM
     546   00:4361                      	
     547   00:4361                      	; init megarom mapper
     548   00:4361  AF                  	xor	a
     549   00:4362  32 00 50            	ld	(_bank1),a
     550   00:4365  3C                  	inc	a
     551   00:4366  32 00 70            	ld	(_bank2),a
     552   00:4369  3C                  	inc	a
     553   00:436A  32 00 90            	ld	(_bank3),a
     554   00:436D  3C                  	inc	a
     555   00:436E  32 00 B0            	ld	(_bank4),a
     556   00:4371                      
     557   00:4371  C9                  	ret
     558   00:4372                      	
     559   00:4372                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     560   00:4372                      ; ROM initialisation
     561   00:4372                      
     562   00:4372                      initmain:
     563   00:4372                      
     564   00:4372  FB                  	ei
     565   00:4373  76                  	halt
     566   00:4374  F3                  	di
     567   00:4375  CD 44 43            	call 	rominit
     568   00:4378                      	
     569   00:4378                      	; now the first 32KB of the megarom are active
     570   00:4378                      
     571   00:4378                      	;clear 8K RAM
     572   00:4378  01 FF 1F            	ld	bc,1024*8-1
     573   00:437B  21 00 C0            	ld	hl,0xc000
     574   00:437E  11 01 C0            	ld	de,0xc001
     575   00:4381                      
     576   00:4381  36 00               	ld	(hl),0
     577   00:4383  ED B0               	ldir	
     578   00:4385                      
     579   00:4385                      	; screen 2
     580   00:4385  CD 25 40            	call _scr2
     581   00:4388                      	
     582   00:4388  3E 00               	ld	a,0
     583   00:438A  1E 07               	ld	e,7
     584   00:438C  CD 1B 40            	call	_setvdpreg
     585   00:438F                      	
     586   00:438F  76                  	halt
     587   00:4390  CD 74 40            	call	cls
     588   00:4393  CD 33 40            	call	set_sprites
     589   00:4396                      
     590   00:4396                      	; move meta map in ram
     591   00:4396  3E 06               	ld	a,:metamap
     592   00:4398  32 00 B0            	ld	(_bank4),a
     593   00:439B  01 C0 13            	ld	bc,LvlWidth*LvlHeigh
     594   00:439E  21 00 A0            	ld	hl,metamap
     595   00:43A1  11 00 C0            	ld	de,buffer
     596   00:43A4  ED B0               	ldir	
     597   00:43A6                      	
     598   00:43A6  21 00 00            	ld	hl,0
     599   00:43A9  22 0C E0            	ld	(xmap),hl
     600   00:43AC  21 00 00            	ld	hl,0
     601   00:43AF  22 0E E0            	ld	(ymap),hl
     602   00:43B2  AF                  	xor a
     603   00:43B3  32 10 E0            	ld	(dxmap),a
     604   00:43B6  32 11 E0            	ld	(dymap),a
     605   00:43B9                      
     606   00:43B9                      
     607   00:43B9                      mainloop:	
     608   00:43B9                      	
     609   00:43B9  76                  	halt 
     610   00:43BA  CD 2B 43            	call 	disp_page0
     611   00:43BD  CD B5 41            	call	_plot_pnt
     612   00:43C0                      
     613   00:43C0  CD 2B 44            	call	sub_main
     614   00:43C3  CD D5 40            	call	setvramp1
     615   00:43C6                      
     616   00:43C6  76                  	halt 
     617   00:43C7  CD 12 43            	call 	disp_page1
     618   00:43CA  CD B5 41            	call	_plot_pnt
     619   00:43CD                      
     620   00:43CD  CD 2B 44            	call	sub_main
     621   00:43D0  CD 08 41            	call	setvramp0
     622   00:43D3                      	
     623   00:43D3  C3 B9 43            	jp mainloop
     624   00:43D6                      	
     625   00:43D6                      dxdycontrol:	
     626   00:43D6  7D                      ld  a,l
     627   00:43D7  E6 80                   and 0x80    ; right
     628   00:43D9  20 0C                   jr  nz,1f
     629   00:43DB  3A 10 E0                ld  a,(dxmap)
     630   00:43DE  FE 80                   cp  maxspeed        ; MAX SPEED
     631   00:43E0  28 05                   jr  z,1f
     632   00:43E2  C6 01                   add a,maxspeedstep
     633   00:43E4  32 10 E0                ld  (dxmap),a
     634   00:43E7                      1:
     635   00:43E7  7D                      ld  a,l
     636   00:43E8  E6 10                   and 0x10    ; left
     637   00:43EA  20 0C                   jr  nz,1f
     638   00:43EC  3A 10 E0                ld  a,(dxmap)
     639   00:43EF  FE 80                   cp  -maxspeed       ; MAX SPEED
     640   00:43F1  28 05                   jr  z,1f
     641   00:43F3  C6 FF                   add a,-maxspeedstep
     642   00:43F5  32 10 E0                ld  (dxmap),a
     643   00:43F8                      1:
     644   00:43F8                          ; y position
     645   00:43F8  7D                      ld  a,l
     646   00:43F9  E6 20                   and 0x20    ; up
     647   00:43FB  20 0C                   jr  nz,1f
     648   00:43FD  3A 11 E0                ld  a,(dymap)
     649   00:4400  FE 80                   cp  -maxspeed        ; MAX SPEED
     650   00:4402  28 05                   jr  z,1f
     651   00:4404  C6 FF                   add a,-maxspeedstep
     652   00:4406  32 11 E0                ld  (dymap),a
     653   00:4409                      1:
     654   00:4409  7D                      ld  a,l
     655   00:440A  E6 40                   and 0x40    ; down
     656   00:440C  20 0C                   jr  nz,1f
     657   00:440E  3A 11 E0                ld  a,(dymap)
     658   00:4411  FE 80                   cp  maxspeed       ; MAX SPEED
     659   00:4413  28 05                   jr  z,1f
     660   00:4415  C6 01                   add a,maxspeedstep
     661   00:4417  32 11 E0                ld  (dymap),a
     662   00:441A                      1:
     663   00:441A  C9                  	ret
     664   00:441B                      stopxrigth:	
     665   00:441B                      stopxleft:	
     666   00:441B  AF                  	xor	a
     667   00:441C  32 10 E0            	ld  (dxmap),a
     668   00:441F  21 00 00            	ld	hl,0
     669   00:4422  C9                  	ret	
     670   00:4423                      stopydown:
     671   00:4423                      stopytop:	
     672   00:4423  AF                  	xor	a
     673   00:4424  32 11 E0            	ld  (dymap),a
     674   00:4427  21 00 00            	ld	hl,0
     675   00:442A  C9                  	ret	
     676   00:442B                      sub_main:
     677   00:442B                          ; x speed control
     678   00:442B  1E 08                   ld  e,8
     679   00:442D  CD 10 40                call    checkkbd
     680   00:4430  CD D6 43            	call	dxdycontrol
     681   00:4433                      
     682   00:4433  ED 5B 0C E0             ld  de,(xmap)		; FP 4.4
     683   00:4437  3A 10 E0                ld  a,(dxmap)
     684   00:443A  6F                      ld  l,a
     685   00:443B  87                      add a,a
     686   00:443C  9F                      sbc a,a
     687   00:443D  67                      ld  h,a
     688   00:443E  29 29 29 29         [4]	add	hl,hl	
     689   00:4442  A7                  	and a
     690   00:4443  ED 5A                   adc hl,de
     691   00:4445  FC 1B 44            	call	m,stopxleft
     692   00:4448  11 C0 1F            	ld	de,(LvlWidth-32)*256-64
     693   00:444B  A7                  	and a	
     694   00:444C  ED 52               	sbc	hl,de
     695   00:444E  F4 1B 44            	call	p,stopxrigth
     696   00:4451  19                  	add	hl,de
     697   00:4452  22 0C E0                ld  (xmap),hl
     698   00:4455                      
     699   00:4455  ED 5B 0E E0             ld  de,(ymap)		; FP 4.4
     700   00:4459  3A 11 E0                ld  a,(dymap)
     701   00:445C  6F                      ld  l,a
     702   00:445D  87                      add a,a
     703   00:445E  9F                      sbc a,a
     704   00:445F  67                      ld  h,a
     705   00:4460  29 29 29 29         [4]	add	hl,hl
     706   00:4464  A7                  	and	a
     707   00:4465  ED 5A                   adc hl,de
     708   00:4467  FC 23 44            	call	m,stopytop
     709   00:446A  11 C0 3E            	ld	de,(LvlHeigh-16)*256-64
     710   00:446D  A7                  	and a	
     711   00:446E  ED 52               	sbc	hl,de
     712   00:4470  F4 23 44            	call	p,stopydown
     713   00:4473  19                  	add	hl,de
     714   00:4474  22 0E E0                ld  (ymap),hl
     715   00:4477                      
     716   00:4477                      
     717   00:4477  3A 0C E0            	ld	a,(xmap)	; xmap 8.8	
     718   00:447A  07 07               [2]	rlca
     719   00:447C  E6 03               	and		%00000011
     720   00:447E  47                  	ld	b,a
     721   00:447F  3A 0E E0            	ld	a,(ymap)	; ymap 8.8	
     722   00:4482  07 07 07 07         [4]	rlca
     723   00:4486  E6 0C               	and		%00001100
     724   00:4488  B0                  	or	b
     725   00:4489  32 12 E0            	ld	(phase),a
     726   00:448C  C9                  	ret
     727   00:448D                      	
     728   00:448D                      
     729   00:448D                      
     730   00:448D                      
     731   00:448D                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     732   00:448D                      ;	convert a VRAM position pointed by HL 
     733   00:448D                      ;	in a VRAM address with offset in DE
     734   00:448D                      ;	sets the VDP for write
     735   00:448D                      ;	in:
     736   00:448D                      ;		HL -> VRAM Position
     737   00:448D                      ;		DE = VRAM Offset
     738   00:448D                      ;	out:
     739   00:448D                      ;		HL++
     740   00:448D                      
     741   00:448D                      setvramaddr:
     742   00:448D  7E                  	ld	a,(hl)
     743   00:448E  E5                  	push hl
     744   00:448F  6F                  	ld	l,a
     745   00:4490  26 00               	ld	h,0
     746   00:4492  29                  	add	hl,hl
     747   00:4493  29                  	add	hl,hl
     748   00:4494  29                  	add	hl,hl
     749   00:4495  19                  	add	hl,de
     750   00:4496  7D                  	ld	a,l
     751   00:4497  F3                  	di
     752   00:4498  D3 99               	out	(0x99),a
     753   00:449A  7C                  	ld	a,h
     754   00:449B  F6 40               	or	0x40
     755   00:449D  D3 99               	out	(0x99),a
     756   00:449F  FB                  	ei
     757   00:44A0  E1                  	pop	hl
     758   00:44A1  23                  	inc	hl
     759   00:44A2  C9                  	ret
     760   00:44A3                      	
     761   00:44A3                      
     762   00:44A3                      		
     763   00:44A3                      	

    LABELS
-------------------------------------------------
00:00000040   LvlWidth
00:0000004F   LvlHeigh
00:00000002 X CommonTiles
00:0000002D   TileSize11
00:00000046   TileSize13
00:00000049   TileSize15
00:00000045   TileSize17
00:00000042   TileSize31
00:00000071   TileSize33
00:0000007C   TileSize35
00:0000006E   TileSize37
00:00000040   TileSize51
00:0000007E   TileSize53
00:0000008D   TileSize55
00:00000079   TileSize57
00:00000047   TileSize71
00:0000007A   TileSize73
00:00000085   TileSize75
00:00000077   TileSize77
06:0000A000   metamap
07:0000A000   metavec
08:0000A000   patterns_base
08:0000A000   patterns11_13_15_17
09:0000A000   patterns31_33_35_37
0A:0000A000   patterns51_53_55_57
0B:0000A000   patterns71_73_75_77
0C:0000A000 X colors_base
0C:0000A000 X colors11_13_15_17
0D:0000A000 X colors31_33_35_37
0E:0000A000 X colors51_53_55_57
0F:0000A000 X colors71_73_75_77
0F:00005000   _bank1
0F:00007000   _bank2
0F:00009000   _bank3
0F:0000B000   _bank4
0F:00000000 X _PCT
0F:00002000 X _PGT
0F:00000080   maxspeed
0F:00000001   maxspeedstep
0F:0000C000   buffer
0F:0000E000 X slotvar
0F:0000E001 X slotram
0F:0000E002 X msxtype
0F:0000E003 X palette
0F:0000E004 X vsf
0F:0000E005 X cnt
0F:0000E006 X muteflag
0F:0000E007 X SLOT
0F:0000E008 X PAGE1RAM
0F:0000E009 X RAMSLOT
0F:0000E00A X SCC
0F:0000E00B X SUB
0F:0000E00C   xmap
0F:0000E00E   ymap
0F:0000E010   dxmap
0F:0000E011   dymap
0F:0000E012   phase
05:0000A000   test_spt
05:0000AF50   test_sat
05:00000080 S counter
00:000000A9   i8255portb
00:000000AA   i8255portc
00:00004010   checkkbd
00:0000401B   _setvdpreg
00:0000F3DF   _vdpReg
00:0000F3AE X LINL40
00:00004025   _scr2
00:00004033   set_sprites
00:0000405D   write_256
00:00004074   cls
00:000040D5   setvramp1
00:00004108   setvramp0
00:0000413B   getbank
00:00004147   getaddr
00:00004155   getsize
00:00004163   tilebank
00:00004173   tilesize
00:00004183   tileaddress
00:00004193   write_2k
00:000041B5   _plot_pnt
00:00004312   disp_page1
00:0000432B   disp_page0
00:00004344   rominit
00:00004372   initmain
00:000043B9   mainloop
00:000043D6   dxdycontrol
00:0000441B   stopxrigth
00:0000441B   stopxleft
00:00004423   stopydown
00:00004423   stopytop
00:0000442B   sub_main
00:0000448D X setvramaddr


 Output: src\main128.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: Scrll8way128.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00002000  Used: 000004A3

   Address   Length Align   Label
   00004000    1187         checkkbd
   000044A3    7005       <empty>

 Page: 01
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 02
  Org: 00008000  Size: 00002000  Used: 00000000

   00008000    8192       <empty>

 Page: 03
  Org: 0000A000  Size: 00002000  Used: 00000000

   0000A000    8192       <empty>

 Page: 04
  Org: 0000A000  Size: 00002000  Used: 00000000

   0000A000    8192       <empty>

 Page: 05
  Org: 0000A000  Size: 00002000  Used: 00000FD0

   Address   Length Align   Label
   0000A000    4048         test_spt
   0000AFD0    4144       <empty>

 Page: 06
  Org: 0000A000  Size: 00002000  Used: 000013C0

   Address   Length Align   Label
   0000A000    5056         metamap
   0000B3C0    3136       <empty>

 Page: 07
  Org: 0000A000  Size: 00002000  Used: 00001000

   Address   Length Align   Label
   0000A000    4096         metavec
   0000B000    4096       <empty>

 Page: 08
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         patterns_base

 Page: 09
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         patterns31_33_35_37

 Page: 0A
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         patterns51_53_55_57

 Page: 0B
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         patterns71_73_75_77

 Page: 0C
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         colors_base

 Page: 0D
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         colors31_33_35_37

 Page: 0E
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         colors51_53_55_57

 Page: 0F
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         colors71_73_75_77
