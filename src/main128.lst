Sjasm Z80 Assembler v0.42b8 - www.xl2s.tk             [2019.03.04 - 22:39:23]

src\main128.asm
Errors: 0

       1   00:0000                      
       2   00:0000                      
       3   00:0000                      	incdir data_bin/
       4   00:0000                      
       5   00:0000                      	include parameters.asm
       1.  00:0000  (00:0040)           LvlWidth:  equ 64
       2.  00:0000  (00:004F)           LvlHeigh:  equ 79
       3.  00:0000  (00:009F)           CommonTiles:  equ 159
       4.  00:0000  (00:00BE)           TileSize11:  equ 190
       5.  00:0000  (00:00D2)           TileSize13:  equ 210
       6.  00:0000  (00:00D6)           TileSize15:  equ 214
       7.  00:0000  (00:00D2)           TileSize17:  equ 210
       8.  00:0000  (00:00CE)           TileSize31:  equ 206
       9.  00:0000  (00:00FF)           TileSize33:  equ 255
      10.  00:0000  (00:00FF)           TileSize35:  equ 255
      11.  00:0000  (00:00FD)           TileSize37:  equ 253
      12.  00:0000  (00:00CC)           TileSize51:  equ 204
      13.  00:0000  (00:00FF)           TileSize53:  equ 255
      14.  00:0000  (00:0100)           TileSize55:  equ 256
      15.  00:0000  (00:0100)           TileSize57:  equ 256
      16.  00:0000  (00:00D2)           TileSize71:  equ 210
      17.  00:0000  (00:00FF)           TileSize73:  equ 255
      18.  00:0000  (00:0100)           TileSize75:  equ 256
      19.  00:0000  (00:00FF)           TileSize77:  equ 255
       6   00:0000                      
       7   00:0000                      	output Scrll8way128.rom
       8   00:0000                      
       9   00:0000                      	defpage	0,0x4000, 0x2000		; page 0 contains main code + far call routines
      10   00:0000                      	defpage 1,0x6000, 0x2000		; static code
      11   00:0000                      	defpage	2,0x8000, 0x2000		; static code - ISR code
      12   00:0000                      	
      13   00:0000                      	defpage	3,0xA000, 0x2000		; 
      14   00:0000                      	defpage	4,0xA000, 0x2000		; common patterns and colors
      15   00:0000                      	
      16   00:0000                      	defpage	5,0xA000, 0x2000		; sprites
      17   00:0000                      	defpage	6,0xA000, 0x2000		; meta map
      18   00:0000                      	defpage	7,0xA000, 0x2000		; metavec
      19   00:0000                      
      20   00:0000                      	defpage	 8,0xA000, 0x2000		; patterns_base
      21   00:0000                      	defpage	 9,0xA000, 0x2000		; patterns_base
      22   00:0000                      	defpage	10,0xA000, 0x2000		; patterns_base
      23   00:0000                      	defpage	11,0xA000, 0x2000		; patterns_base
      24   00:0000                      	defpage	12,0xA000, 0x2000		; colors_base
      25   00:0000                      	defpage	13,0xA000, 0x2000		; colors_base
      26   00:0000                      	defpage	14,0xA000, 0x2000		; colors_base
      27   00:0000                      	defpage	15,0xA000, 0x2000		; colors_base
      28   00:0000                      
      29   00:0000                      
      30   00:0000                      
      31   00:0000                      ; *** tile set data in rom ***
      32   00:0000  (03)                	page 3
      33   03:A000                      tileset:
      34   03:A000  (0400)              	incbin tileset.bin
      35   03:A400                      	
      36   03:A400                      	; place sprites in the score bar
      37   03:A400                      scorebar_sat:
      38   03:A400                      	repeat  4
      39   03:A400                    < 	db  5*8
      40   03:A400                    < 	db  @# * 16
      41   03:A400                    < 	db  32*4
      42   03:A400                    < 	db  0
      43   03:A400                    < 	endrepeat
      43   03:A400  28 00 80 00 28 10 80 00 28 20 80 00 28 30 80 00 
      44   03:A410  36                  	db  5*8+14
      45   03:A411  40                  	db  4*16
      46   03:A412  80                  	db  32*4
      47   03:A413  00                  	db  0
      48   03:A414  D0                  	db	0xd0
      49   03:A415                      	
      50   03:A415  (04)                	page 4
      51   04:A000                      common_pattern:
      52   04:A000  (04F8)              	incbin testpat.bin,0,CommonTiles*8
      53   04:A4F8                      common_color:
      54   04:A4F8  (04F8)              	incbin testcol.bin,0,CommonTiles*8
      55   04:A9F0                      
      56   04:A9F0  (05)                	page 5
      57   05:A000                      test_spt:
      58   05:A000  (0F50)              	incbin spt.bin
      59   05:AF50                      ;	place 32 sprites
      60   05:AF50                      test_sat:
      61   05:AF50  (05:0000)           counter:=0
      62   05:AF50                      	repeat	8
      63   05:AF50                    < 	repeat	4
      64   05:AF50                    < 	db	64 + @@# * 16
      65   05:AF50                    < 	db	48 +  @# * 32 + @@#*8
      66   05:AF50                    < 	db	6*4+(counter and %00001100)
      67   05:AF50                    < 	db	15
      68   05:AF50                    < counter:=counter+4
      69   05:AF50                    < 	endrepeat
      70   05:AF50                    < 	endrepeat
      70   05:AF50  40 30 18 0F 40 50 1C 0F 40 70 20 0F 40 90 24 0F 
      70   05:AF60  50 38 18 0F 50 58 1C 0F 50 78 20 0F 50 98 24 0F 
      70   05:AF70  60 40 18 0F 60 60 1C 0F 60 80 20 0F 60 A0 24 0F 
      70   05:AF80  70 48 18 0F 70 68 1C 0F 70 88 20 0F 70 A8 24 0F 
      70   05:AF90  80 50 18 0F 80 70 1C 0F 80 90 20 0F 80 B0 24 0F 
      70   05:AFA0  90 58 18 0F 90 78 1C 0F 90 98 20 0F 90 B8 24 0F 
      70   05:AFB0  A0 60 18 0F A0 80 1C 0F A0 A0 20 0F A0 C0 24 0F 
      70   05:AFC0  B0 68 18 0F B0 88 1C 0F B0 A8 20 0F B0 C8 24 0F 
      71   05:AFD0                      
      72   05:AFD0  (06)                	page 6
      73   06:A000                      metamap:
      74   06:A000  (13C0)              	incbin metamap.bin
      75   06:B3C0                      
      76   06:B3C0  (07)                	page 7
      77   07:A000                      metavec:
      78   07:A000  (1000)              	incbin metavec.bin
      79   07:B000                      
      80   07:B000  (08)                	page 8
      81   08:A000                      patterns_base:
      82   08:A000                      patterns11_13_15_17:
      83   08:A000  (1B08)              	incbin testpat.bin,00*2*1024+CommonTiles*8,4*2*1024-CommonTiles*8
      84   08:BB08  (09)                	page 9
      85   09:A000                      patterns31_33_35_37:
      86   09:A000  (1B08)              	incbin testpat.bin,04*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      87   09:BB08  (0A)                	page 10
      88   0A:A000                      patterns51_53_55_57:
      89   0A:A000  (1B08)              	incbin testpat.bin,08*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      90   0A:BB08  (0B)                	page 11
      91   0B:A000                      patterns71_73_75_77:
      92   0B:A000  (1B08)              	incbin testpat.bin,12*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      93   0B:BB08                      
      94   0B:BB08  (0C)                	page 12
      95   0C:A000                      colors_base:
      96   0C:A000                      colors11_13_15_17:
      97   0C:A000  (1B08)              	incbin testcol.bin,00*2*1024+CommonTiles*8,4*2*1024-CommonTiles*8
      98   0C:BB08  (0D)                	page 13
      99   0D:A000                      colors31_33_35_37:
     100   0D:A000  (1B08)              	incbin testcol.bin,04*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     101   0D:BB08  (0E)                	page 14
     102   0E:A000                      colors51_53_55_57:
     103   0E:A000  (1B08)              	incbin testcol.bin,08*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     104   0E:BB08  (0F)                	page 15
     105   0F:A000                      colors71_73_75_77:
     106   0F:A000  (1B08)              	incbin testcol.bin,12*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     107   0F:BB08                      
     108   0F:BB08                      
     109   0F:BB08                      
     110   0F:BB08                      
     111   0F:BB08                          macro _setVdp register,value       ; without DI/EI
     112   0F:BB08                    <     ld  a,value
     113   0F:BB08                    <     out (0x99),a
     114   0F:BB08                    <     ld  a,register + 0x80
     115   0F:BB08                    <     out (0x99),a
     116   0F:BB08                    <     endmacro
     117   0F:BB08                      
     118   0F:BB08                          macro setVdp register,value       ; macro definition
     119   0F:BB08                    <     di
     120   0F:BB08                    <     _setVdp register,value
     121   0F:BB08                    <     ei
     122   0F:BB08                    <     endmacro
     123   0F:BB08                      
     124   0F:BB08                          macro _setvdpwvram value
     125   0F:BB08                    <     if (value & 0xFF)
     126   0F:BB08                    <         ld  a,value & 0xFF
     127   0F:BB08                    <     else
     128   0F:BB08                    <         xor a
     129   0F:BB08                    <     endif
     130   0F:BB08                    <     out (0x99),a
     131   0F:BB08                    <     ld  a,0x40 + (value/256)
     132   0F:BB08                    <     out (0x99),a
     133   0F:BB08                    <     endmacro
     134   0F:BB08                      
     135   0F:BB08                          macro setvdpwvram value
     136   0F:BB08                    <     di
     137   0F:BB08                    <     _setvdpwvram value
     138   0F:BB08                    <     ei
     139   0F:BB08                    <     endmacro
     140   0F:BB08                      	
     141   0F:BB08                      ; -----------------------------
     142   0F:BB08                      ; smooth scroller demo
     143   0F:BB08                      ; Trilobyte 2014
     144   0F:BB08                      ; ------------------------------
     145   0F:BB08                      
     146   0F:BB08                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     147   0F:BB08                      ;
     148   0F:BB08                      ;   Mapper Konami 5 (mapper +  scc)
     149   0F:BB08                      ;
     150   0F:BB08                      ; Bank 1: 4000h - 5FFFh
     151   0F:BB08                      ; Bank 2: 6000h - 7FFFh
     152   0F:BB08                      ; Bank 3: 8000h - 9FFFh
     153   0F:BB08                      ; Bank 4: A000h - BFFFh
     154   0F:BB08                      
     155   0F:BB08                      ; Bank 1: 5000h - 57FFh (5000h used)
     156   0F:BB08                      ; Bank 2: 7000h - 77FFh (7000h used)
     157   0F:BB08                      ; Bank 3: 9000h - 97FFh (9000h used)
     158   0F:BB08                      ; Bank 4: B000h - B7FFh (B000h used)
     159   0F:BB08                      
     160   0F:BB08                      
     161   0F:BB08                      ; *** CONSTANTS ***
     162   0F:BB08  (0F:5000)           _bank1			equ	0x5000
     163   0F:BB08  (0F:7000)           _bank2			equ	0x7000
     164   0F:BB08  (0F:9000)           _bank3			equ	0x9000
     165   0F:BB08  (0F:B000)           _bank4			equ	0xB000
     166   0F:BB08                      
     167   0F:BB08                      ; -----------------------------
     168   0F:BB08                      ; parameters
     169   0F:BB08                      ;
     170   0F:BB08                      
     171   0F:BB08                      ;
     172   0F:BB08  (0F:0080)           maxspeed:   	equ 8*16
     173   0F:BB08  (0F:0001)           maxspeedstep:	equ	1
     174   0F:BB08                      ;
     175   0F:BB08                      ;minspeed:	equ	1		i.e. 	1/16
     176   0F:BB08                      
     177   0F:BB08                      ; ------------------------------
     178   0F:BB08                      
     179   0F:BB08                      ; *** RAM ***
     180   0F:BB08                      
     181   0F:BB08  (C000)              	map 0xc000
     182   0F:BB08                      
     183   0F:BB08  (0F:C000)           buffer:			#8*1024
     184   0F:BB08                      
     185   0F:BB08                      
     186   0F:BB08  (0F:E000)           slotvar:		#1
     187   0F:BB08  (0F:E001)           slotram:		#1
     188   0F:BB08                      
     189   0F:BB08  (0F:E002)           xmap:			#2		; FP 8.8
     190   0F:BB08  (0F:E004)           ymap:			#2		; FP 8.8
     191   0F:BB08  (0F:E006)           dxmap:			#1		; FP 4.4
     192   0F:BB08  (0F:E007)           dymap:			#1		; FP 4.4
     193   0F:BB08                      
     194   0F:BB08  (0F:E008)           phase:			#1
     195   0F:BB08  (0F:E009)           vpage:			#1
     196   0F:BB08                      
     197   0F:BB08  (0000)              	endmap
     198   0F:BB08                      
     199   0F:BB08                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     200   0F:BB08                      ; Interrupt service routine
     201   0F:BB08                      ;
     202   0F:BB08                      
     203   0F:BB08                      ; remove any processing from the ISR
     204   0F:BB08                      
     205   0F:BB08  (02)                	page 2
     206   02:8000                      myisr:
     207   02:8000  F1                   	pop	af		; 	remove return address
     208   02:8001  DB 99               	in  a,(0x99)	; 	s0 reset
     209   02:8003  DD E1                	pop    ix
     210   02:8005  FD E1               	pop    iy
     211   02:8007  F1                  	pop    af
     212   02:8008  C1                  	pop    bc
     213   02:8009  D1                  	pop    de
     214   02:800A  E1                  	pop    hl
     215   02:800B  08                  	ex     af,af'
     216   02:800C  D9                  	exx
     217   02:800D  F1                  	pop    af
     218   02:800E  C1                  	pop    bc
     219   02:800F  D1                  	pop    de
     220   02:8010  E1                  	pop    hl
     221   02:8011  FB                  	ei
     222   02:8012  C9                  	ret
     223   02:8013                      	
     224   02:8013                      ;	push   hl
     225   02:8013                      ;	push   de
     226   02:8013                      ;	push   bc
     227   02:8013                      ;	push   af
     228   02:8013                      ;	exx
     229   02:8013                      ;	ex     af,af'
     230   02:8013                      ;	push   hl
     231   02:8013                      ;	push   de
     232   02:8013                      ;	push   bc
     233   02:8013                      ;	push   af
     234   02:8013                      ;	push   iy
     235   02:8013                      ;	push   ix
     236   02:8013                      
     237   02:8013                      ;	disabled code for future developments
     238   02:8013                      
     239   02:8013                      ;	pop		af		; 	remove return address
     240   02:8013                      
     241   02:8013                      ;	_setVdp 0,0x00  ; 	screen 1
     242   02:8013                      
     243   02:8013                      ;	_setVdp 4,0x03  ; 	PGT at 1800h (used from 0x1C00 to 0x1FFF, only 128 characters)
     244   02:8013                      ;	_setVdp 3,0x6F  ; 	PCT at 1BC0h (used from 0x1BD0 to 0x1BDF, only 16 bytes)
     245   02:8013                      
     246   02:8013                      ;	_setVdp 5,0x37  ;   SAT at 1B80
     247   02:8013                      ;	_setVdp 6,0x03  ;   SPT at 1800   (used from 0x1C00 to 0x1FFF  only 32 sprites 16x16)
     248   02:8013                      
     249   02:8013                      ;	in  a,(0x99)	; 	s0 reset
     250   02:8013                      
     251   02:8013                      	; _setVdp 7,8  	; 	
     252   02:8013                      	; call    _plot_pnt
     253   02:8013                      	; _setVdp 7,0  	; 	
     254   02:8013                      
     255   02:8013                      ;1:  in  a,(0x99)	; 	wait raster line
     256   02:8013                      ;	and %01011111
     257   02:8013                      ;	cp  %01000100	; 	plane 4 =0x44
     258   02:8013                      ;	jp  nz,1b
     259   02:8013                      
     260   02:8013                      ;	_setVdp 0,0x02  ;	screen 2
     261   02:8013                      
     262   02:8013                      ;	ld  a,(vpage)	
     263   02:8013                      ;	and a
     264   02:8013                      ;	jp  z,page0
     265   02:8013                      ;page1:				; 	page 1 active
     266   02:8013                      ;	_setVdp 3,0x9F	; 	colours at 0x2000	(hybrid)
     267   02:8013                      ;	_setVdp 4,0x03	;	patterns at 0x0000	(regular: used 0x0800 0x1000)
     268   02:8013                      ;	jp  1f
     269   02:8013                      ;page0:				; 	page 0 active
     270   02:8013                      ;	_setVdp 3,0x1F	; 	colours at 0x0000	(hybrid)
     271   02:8013                      ;	_setVdp 4,0x07	;	patterns at 0x2000	(regular: used 0x2800 0x3000)
     272   02:8013                      ;1:
     273   02:8013                      ;	_setVdp 5,0x36  ;   SAT at 0x1b00
     274   02:8013                      ;	_setVdp 6,0x07  ;   SPT at 0x3800   (64 sprites 16x16)
     275   02:8013                      
     276   02:8013                      ;	pop    ix
     277   02:8013                      ;	pop    iy
     278   02:8013                      ;	pop    af
     279   02:8013                      ;	pop    bc
     280   02:8013                      ;	pop    de
     281   02:8013                      ;	pop    hl
     282   02:8013                      ;	ex     af,af'
     283   02:8013                      ;	exx
     284   02:8013                      ;	pop    af
     285   02:8013                      ;	pop    bc
     286   02:8013                      ;	pop    de
     287   02:8013                      ;	pop    hl
     288   02:8013                      ;	ei
     289   02:8013                      ;	ret
     290   02:8013                      
     291   02:8013                      
     292   02:8013                      ; ------------
     293   02:8013                      ; megarom header
     294   02:8013                      
     295   02:8013  (00)                	page 0
     296   00:4000                      	code page 0
     297   00:4000                      
     298   00:4000                      	org	04000h
     299   00:4000  41 42               	db	041h,042h
     300   00:4002  0B 44               	dw	initmain
     301   00:4004                      	dz 	'TRI004'
     301   00:4004  54 52 49 30 30 34 00 
     302   00:400B  00 (5)              	ds	5
     303   00:4010                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     304   00:4010                      ;
     305   00:4010                      ; checkkbd: ckeck keyboard line
     306   00:4010                      ; in:  E = row
     307   00:4010                      ; out: L = bit pattern (1 = not pressed)
     308   00:4010                      ;
     309   00:4010                      ; row/bit|    7     6     5     4     3     2     1     0
     310   00:4010                      ; -------+--------------------------------------------------
     311   00:4010                      ;    0   |    7     6     5     4     3     2     1     0
     312   00:4010                      ;    1   |    ;     ]     [     \     =     -     9     8
     313   00:4010                      ;    2   |    B     A    ???    /     .     ,     '     `
     314   00:4010                      ;    3   |    J     I     H     G     F     E     D     C
     315   00:4010                      ;    4   |    R     Q     P     O     N     M     L     K
     316   00:4010                      ;    5   |    Z     Y     X     W     V     U     T     S
     317   00:4010                      ;    6   |   F3    F2    F1   CODE   CAP  GRAPH CTRL  SHIFT
     318   00:4010                      ;    7   |   RET   SEL   BS   STOP   TAB   ESC   F5    F4
     319   00:4010                      ;    8   |  RIGHT DOWN   UP   LEFT   DEL   INS  HOME  SPACE
     320   00:4010                      ;    9   |    4     3     2     1     0     /     +     *
     321   00:4010                      ;   10   |    .     ,     -     9     8     7     6     5
     322   00:4010                      ;   11   |                           NO          YES
     323   00:4010                      ;
     324   00:4010                      ;
     325   00:4010                      
     326   00:4010  (00:00A9)           i8255portb  equ 0a9h        ; keyboard column input
     327   00:4010  (00:00AA)           i8255portc  equ 0aah        ; leds, motor, cassette, kbd line
     328   00:4010                      
     329   00:4010                      checkkbd:
     330   00:4010  DB AA               	in  a,(i8255portc)
     331   00:4012  E6 F0               	and 011110000B          ; upper 4 bits contain info to preserve
     332   00:4014  B3                  	or  e
     333   00:4015  D3 AA               	out (i8255portc),a
     334   00:4017  DB A9               	in  a,(i8255portb)
     335   00:4019  6F                  	ld  l,a
     336   00:401A  C9                  	ret
     337   00:401B                      
     338   00:401B                      
     339   00:401B                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     340   00:401B                      ; vdp access
     341   00:401B                      
     342   00:401B  (00:F3DF)           _vdpReg equ 0xF3DF
     343   00:401B  (00:F3AE)           LINL40	equ 0xF3AE
     344   00:401B                      
     345   00:401B                      ; e = screen mode
     346   00:401B                      _scr2:
     347   00:401B  3A E0 F3            	ld	a,(_vdpReg+1)
     348   00:401E  F6 02               	or 2
     349   00:4020  32 E0 F3            	ld	(_vdpReg+1),a
     350   00:4023                      
     351   00:4023  3E 02               	ld	a,2
     352   00:4025  CD 5F 00            	call 0x005f
     353   00:4028                      
     354   00:4028  C9                  	ret
     355   00:4029                      
     356   00:4029                      ; set sprites
     357   00:4029                      
     358   00:4029                      set_sprites:
     359   00:4029                      	setvdpwvram 0x3800
     359   00:4029  F3                >     di
     359   00:402A                    >     _setvdpwvram value
     359   00:402A                    >     if (value & 0xFF)
     359   00:402A                    ~         ld  a,value & 0xFF
     359   00:402A                    ~     else
     359   00:402A  AF                >         xor a
     359   00:402B                    >     endif
     359   00:402B  D3 99             >     out (0x99),a
     359   00:402D  3E 78             >     ld  a,0x40 + (value/256)
     359   00:402F  D3 99             >     out (0x99),a
     359   00:4031  FB                >     ei
     360   00:4032  21 00 A0            	ld	hl,test_spt
     361   00:4035  3E 05               	ld	a,:test_spt
     362   00:4037  CD 52 40            	call	write_256
     363   00:403A  76                  	halt
     364   00:403B                      	setvdpwvram 0x1B00
     364   00:403B  F3                >     di
     364   00:403C                    >     _setvdpwvram value
     364   00:403C                    >     if (value & 0xFF)
     364   00:403C                    ~         ld  a,value & 0xFF
     364   00:403C                    ~     else
     364   00:403C  AF                >         xor a
     364   00:403D                    >     endif
     364   00:403D  D3 99             >     out (0x99),a
     364   00:403F  3E 5B             >     ld  a,0x40 + (value/256)
     364   00:4041  D3 99             >     out (0x99),a
     364   00:4043  FB                >     ei
     365   00:4044  21 50 AF            	ld	hl,test_sat
     366   00:4047  3E 05               	ld	a,:test_sat
     367   00:4049  32 00 B0            	ld	(_bank4),a
     368   00:404C  01 98 80            	ld	bc,0x8098
     369   00:404F  ED B3               	otir
     370   00:4051  C9                  	ret
     371   00:4052                      
     372   00:4052                      write_256:
     373   00:4052  32 00 B0            	ld	(_bank4),a
     374   00:4055  01 98 00            	ld	bc,0x0098
     375   00:4058  3E 08               	ld	a,8
     376   00:405A  ED A3               1:	outi
     377   00:405C  C2 5A 40            	jp nz,1b
     378   00:405F  3D                  	dec	a
     379   00:4060  C2 5A 40            	jp nz,1b
     380   00:4063  C9                  	ret
     381   00:4064                      
     382   00:4064                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     383   00:4064                      ;	Initialise the tiles common to all banks
     384   00:4064                      ;	Common tiles are stored only once in a separate bank
     385   00:4064                      ;
     386   00:4064                      initcommontiles:
     387   00:4064  3E 04               	ld	a,:common_pattern
     388   00:4066  32 00 B0            	ld (_bank4),a
     389   00:4069  21 00 A0            	ld	hl,common_pattern
     390   00:406C  3E 9F               	ld	a,CommonTiles
     391   00:406E  11 00 48            	ld	de,0x0800 + 4000h
     392   00:4071  CD 77 41            	call write_2k
     393   00:4074                      
     394   00:4074  21 00 A0            	ld	hl,common_pattern
     395   00:4077  3E 9F               	ld	a,CommonTiles
     396   00:4079  11 00 50            	ld	de,0x1000 + 4000h
     397   00:407C  CD 77 41            	call write_2k
     398   00:407F                      
     399   00:407F  21 00 A0            	ld	hl,common_pattern
     400   00:4082  3E 9F               	ld	a,CommonTiles
     401   00:4084  11 00 68            	ld	de,0x2800 + 4000h
     402   00:4087  CD 77 41            	call write_2k
     403   00:408A                      
     404   00:408A  21 00 A0            	ld	hl,common_pattern
     405   00:408D  3E 9F               	ld	a,CommonTiles
     406   00:408F  11 00 70            	ld	de,0x3000 + 4000h
     407   00:4092  CD 77 41            	call write_2k
     408   00:4095                      
     409   00:4095  3E 04               	ld	a,:common_color
     410   00:4097  32 00 B0            	ld (_bank4),a
     411   00:409A  21 F8 A4            	ld	hl,common_color
     412   00:409D  3E 9F               	ld	a,CommonTiles
     413   00:409F  11 00 60            	ld	de,0x2000 + 4000h
     414   00:40A2  CD 77 41            	call write_2k
     415   00:40A5  21 F8 A4            	ld	hl,common_color
     416   00:40A8  3E 9F               	ld	a,CommonTiles
     417   00:40AA  11 00 40            	ld	de,0x0000 + 4000h
     418   00:40AD  CD 77 41            	call write_2k
     419   00:40B0  C9                  	ret
     420   00:40B1                      
     421   00:40B1                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     422   00:40B1                      ;	load tile sets: only differences are loaded
     423   00:40B1                      
     424   00:40B1                      setvramp:
     425   00:40B1  3A 09 E0            	ld	a,(vpage)
     426   00:40B4  A7                  	and	a
     427   00:40B5  CA BB 40            	jp	z,setvramp1	;	PGT at	0x0800/0x1000,	PCT at 0x0800
     428   00:40B8  C3 EE 40            	jp	setvramp0	;	PGT at	0x2800/0x3000,	PCT at 0x0000
     429   00:40BB                      
     430   00:40BB                      setvramp1:			;	PGT at	0x0800/0x1000,	PGT at 0x2000
     431   00:40BB  CD 21 41            	call getbank	;->a
     432   00:40BE  32 00 B0            	ld (_bank4),a
     433   00:40C1  CD 3B 41            	call getsize	;->a
     434   00:40C4  CD 2D 41            	call getaddr	;->hl
     435   00:40C7  11 F8 4C            	ld	de,0x0800 + 8*CommonTiles + 4000h
     436   00:40CA  CD 77 41            	call write_2k
     437   00:40CD                      
     438   00:40CD  CD 3B 41            	call getsize	;->a
     439   00:40D0  CD 2D 41            	call getaddr	;->hl
     440   00:40D3  11 F8 54            	ld	de,0x1000 + 8*CommonTiles + 4000h
     441   00:40D6  CD 77 41            	call write_2k
     442   00:40D9                      
     443   00:40D9  CD 21 41            	call getbank	;->a
     444   00:40DC  C6 04               	add	a,4			; colorbank = tilebank+4
     445   00:40DE  32 00 B0            	ld (_bank4),a
     446   00:40E1  CD 3B 41            	call getsize	;->a
     447   00:40E4  CD 2D 41            	call getaddr	;->hl
     448   00:40E7  11 F8 64            	ld	de,0x2000 + 8*CommonTiles + 4000h
     449   00:40EA  CD 77 41            	call write_2k
     450   00:40ED  C9                  	ret
     451   00:40EE                      
     452   00:40EE                      setvramp0:			;	PGT at	0x2800/0x3000,	PGT at 0x0000
     453   00:40EE  CD 21 41            	call getbank	;->a
     454   00:40F1  32 00 B0            	ld (_bank4),a
     455   00:40F4  CD 3B 41            	call getsize	;->a
     456   00:40F7  CD 2D 41            	call getaddr	;->hl
     457   00:40FA  11 F8 6C            	ld	de,0x2800 + 8*CommonTiles + 4000h
     458   00:40FD  CD 77 41            	call write_2k
     459   00:4100                      
     460   00:4100  CD 3B 41            	call getsize	;->a
     461   00:4103  CD 2D 41            	call getaddr	;->hl
     462   00:4106  11 F8 74            	ld	de,0x3000 + 8*CommonTiles + 4000h
     463   00:4109  CD 77 41            	call write_2k
     464   00:410C                      
     465   00:410C  CD 21 41            	call getbank	;->a
     466   00:410F  C6 04               	add	a,4			; colorbank = tilebank+4
     467   00:4111  32 00 B0            	ld (_bank4),a
     468   00:4114  CD 3B 41            	call getsize	;->a
     469   00:4117  CD 2D 41            	call getaddr	;->hl
     470   00:411A  11 F8 44            	ld	de,0x0000 + 8*CommonTiles + 4000h
     471   00:411D  CD 77 41            	call write_2k
     472   00:4120  C9                  	ret
     473   00:4121                      
     474   00:4121                      getbank:
     475   00:4121  ED 5B 08 E0         	ld	de,(phase)
     476   00:4125  21 47 41            	ld	hl,tilebank
     477   00:4128  16 00               	ld	d,0
     478   00:412A  19                  	add	hl,de
     479   00:412B  7E                  	ld	a,(hl)
     480   00:412C  C9                  	ret
     481   00:412D                      getaddr:
     482   00:412D  ED 5B 08 E0         	ld	de,(phase)
     483   00:4131  21 67 41            	ld	hl,tileaddress
     484   00:4134  16 00               	ld	d,0
     485   00:4136  19                  	add	hl,de
     486   00:4137  66                  	ld	h,(hl)
     487   00:4138  2E 00               	ld	l,0
     488   00:413A  C9                  	ret
     489   00:413B                      getsize:
     490   00:413B  ED 5B 08 E0         	ld	de,(phase)
     491   00:413F  21 57 41            	ld	hl,tilesize
     492   00:4142  16 00               	ld	d,0
     493   00:4144  19                  	add	hl,de
     494   00:4145  7E                  	ld	a,(hl)
     495   00:4146  C9                  	ret
     496   00:4147                      
     497   00:4147                      
     498   00:4147                      	;	patternsxy
     499   00:4147                      tilebank:
     500   00:4147  08 08 08 08         	db	:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17
     501   00:414B  09 09 09 09         	db	:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37
     502   00:414F  0A 0A 0A 0A         	db	:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57
     503   00:4153  0B 0B 0B 0B         	db	:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77
     504   00:4157                      tilesize:
     505   00:4157  1F 33 37 33         	db	TileSize11-CommonTiles,TileSize13-CommonTiles,TileSize15-CommonTiles,TileSize17-CommonTiles
     506   00:415B  2F 60 60 5E         	db	TileSize31-CommonTiles,TileSize33-CommonTiles,TileSize35-CommonTiles,TileSize37-CommonTiles
     507   00:415F  2D 60 61 61         	db	TileSize51-CommonTiles,TileSize53-CommonTiles,TileSize55-CommonTiles,TileSize57-CommonTiles
     508   00:4163  33 60 61 60         	db	TileSize71-CommonTiles,TileSize73-CommonTiles,TileSize75-CommonTiles,TileSize77-CommonTiles
     509   00:4167                      tileaddress:
     510   00:4167  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     511   00:416B  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     512   00:416F  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     513   00:4173  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     514   00:4177                      
     515   00:4177                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     516   00:4177                      ; write 2K while ints are active from hl to de
     517   00:4177                      ; in: de vram address
     518   00:4177                      ;     hl ram address
     519   00:4177                      ;	   a counter of 8 chunks of bytes 
     520   00:4177                      ;
     521   00:4177                      ; N outi per frame in vblank (NTSC) = 3579545 * ((27+24.5+3+3+13)/262.5*1/59.94)/18
     522   00:4177                      
     523   00:4177                      write_2k:
     524   00:4177  F3                  	di
     525   00:4178  0E 99               	ld	c,0x99
     526   00:417A  ED 59               	out (c),e
     527   00:417C  ED 51               	out (c),d	;c = 0x99, HL with write setup bit set
     528   00:417E                      
     529   00:417E  5F                  	ld	e,a
     530   00:417F  16 00               	ld	d,0
     531   00:4181  EB                  	ex	de,hl
     532   00:4182  29 29 29            [3]	add hl,hl
     533   00:4185  EB                  	ex	de,hl
     534   00:4186                      	
     535   00:4186  0D                  	dec	c
     536   00:4187                      	
     537   00:4187  7B                  	ld	a,e
     538   00:4188  A7                  	and	a
     539   00:4189  CA 8D 41            	jp	z,1f
     540   00:418C  14                  	inc	d
     541   00:418D                      1:	
     542   00:418D  43                  	ld	b,e
     543   00:418E  ED A3               2:	outi
     544   00:4190  C2 8E 41            	jp	nz,2b
     545   00:4193  15                  	dec	d
     546   00:4194  C2 8E 41            	jp nz,2b	
     547   00:4197  FB                  	ei
     548   00:4198  C9                  	ret
     549   00:4199                      
     550   00:4199                      	
     551   00:4199                      	; ld	a,d
     552   00:4199                      	; and	a
     553   00:4199                      	; call	nz,3f
     554   00:4199                      	; ld	a,e
     555   00:4199                      	; and	a
     556   00:4199                      	; jp	z,4f
     557   00:4199                      	; ld	b,e
     558   00:4199                      ; 2:	outi
     559   00:4199                      	; jp	nz,2b
     560   00:4199                      ; 4:	ei
     561   00:4199                      	; ret
     562   00:4199                      	
     563   00:4199                      ; 3:	ld	b,0
     564   00:4199                      ; 2:	outi
     565   00:4199                      	; jp	nz,2b
     566   00:4199                      	; dec	d
     567   00:4199                      	; jp nz,2b	
     568   00:4199                      	; ret
     569   00:4199                      
     570   00:4199                      
     571   00:4199                      		
     572   00:4199                      ; write_2k:
     573   00:4199                      	; push hl
     574   00:4199                      	; ex	de,hl
     575   00:4199                      	; set	6,h
     576   00:4199                      	; ld	c,0x99
     577   00:4199                      	; ld	de,8
     578   00:4199                      	; exx
     579   00:4199                      	; pop	hl		; ram source in HL'
     580   00:4199                      	; ld	c,0x98	; data port in c'
     581   00:4199                      ; 2:	di
     582   00:4199                      	; exx
     583   00:4199                      	; out (c),l
     584   00:4199                      	; out (c),h	;c = 0x99, HL with write setup bit set
     585   00:4199                      	; add hl,de	;de = 8
     586   00:4199                      	; exx
     587   00:4199                      	; ld b,8
     588   00:4199                      ; 1:	outi		;c' = 0x98
     589   00:4199                      	; jp nz,1b
     590   00:4199                      	; ei
     591   00:4199                      	; dec a
     592   00:4199                      	; jp nz,2b
     593   00:4199                      	; ret
     594   00:4199                      
     595   00:4199                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     596   00:4199                      ;	in xmap,ymap,phase
     597   00:4199                      ;
     598   00:4199                      plot_pnt:
     599   00:4199  3E 07               	ld	a,:metavec
     600   00:419B  32 00 B0            	ld	(_bank4),a
     601   00:419E                      
     602   00:419E  21 00 C0            	ld	hl,buffer	; meta map in ram
     603   00:41A1                      
     604   00:41A1  3A 05 E0            	ld	a,(ymap+1)	; ymap 8.8
     605   00:41A4  A7                  	and	a
     606   00:41A5  28 07               	jr	z,1f
     607   00:41A7  01 40 00            	ld	bc,LvlWidth
     608   00:41AA  09                  2:	add	hl,bc
     609   00:41AB  3D                  	dec a
     610   00:41AC  20 FC               	jr	nz,2b
     611   00:41AE                      1:
     612   00:41AE  3A 03 E0            	ld	a,(xmap+1)	; xmap 8.8
     613   00:41B1  5F                  	ld	e,a
     614   00:41B2  16 00               	ld	d,0
     615   00:41B4  19                  	add	hl,de
     616   00:41B5  EB                  	ex	de,hl		; DE = buffer + round(ymap)*LvlWidth+round(xmap)
     617   00:41B6                      
     618   00:41B6                      	setvdpwvram 0x1900
     618   00:41B6  F3                >     di
     618   00:41B7                    >     _setvdpwvram value
     618   00:41B7                    >     if (value & 0xFF)
     618   00:41B7                    ~         ld  a,value & 0xFF
     618   00:41B7                    ~     else
     618   00:41B7  AF                >         xor a
     618   00:41B8                    >     endif
     618   00:41B8  D3 99             >     out (0x99),a
     618   00:41BA  3E 59             >     ld  a,0x40 + (value/256)
     618   00:41BC  D3 99             >     out (0x99),a
     618   00:41BE  FB                >     ei
     619   00:41BF                      	
     620   00:41BF  0E 98               	ld  c,0x98
     621   00:41C1  DD 26 10            	ld  ixh,16
     622   00:41C4                      
     623   00:41C4  3A 08 E0            	ld	a,(phase)
     624   00:41C7  C6 A0               	add	a,metavec/256
     625   00:41C9                      	
     626   00:41C9                      1:	
     627   00:41C9  67                  	ld	h,a
     628   00:41CA  08                  	ex	af',af
     629   00:41CB                      	
     630   00:41CB  7B                  	ld  a,e
     631   00:41CC  C6 20               	add a,32
     632   00:41CE  D2 7D 42            	jp  nc,.fast_loop
     633   00:41D1                      
     634   00:41D1                      	
     635   00:41D1                      	repeat 32
     636   00:41D1                    < 	ld	a,(de)
     637   00:41D1                    < 	ld	l,a
     638   00:41D1                    < 	outi         	; Send data pointed by HL to VDP port (reg.C preloaded)
     639   00:41D1                    < 	inc	de
     640   00:41D1                    < 	endrepeat
     640   00:41D1  1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 
     640   00:41E1  6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F 
     640   00:41F1  ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED 
     640   00:4201  A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 
     640   00:4211  13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 
     640   00:4221  1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 
     640   00:4231  6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F 
     640   00:4241  ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED 
     640   00:4251  A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 
     640   00:4261  13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 
     641   00:4271                      	
     642   00:4271  08                  	ex	af',af
     643   00:4272                      	
     644   00:4272  21 20 00            	ld	hl,LvlWidth-32
     645   00:4275  19                  	add	hl,de
     646   00:4276  EB                  	ex	de,hl
     647   00:4277                      
     648   00:4277  DD 25               	dec ixh
     649   00:4279  C2 C9 41            	jp nz,1b
     650   00:427C                      
     651   00:427C  C9                  	ret
     652   00:427D                      
     653   00:427D                      .fast_loop
     654   00:427D                      
     655   00:427D                      	repeat 32
     656   00:427D                    < 	ld	a,(de)
     657   00:427D                    < 	ld	l,a
     658   00:427D                    < 	outi         	; Send data pointed by HL to VDP port (reg.C preloaded)
     659   00:427D                    < 	inc	e			; save 32 INC DE 
     660   00:427D                    < 	endrepeat
     660   00:427D  1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 
     660   00:428D  6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F 
     660   00:429D  ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED 
     660   00:42AD  A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 
     660   00:42BD  1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 
     660   00:42CD  1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 
     660   00:42DD  6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F 
     660   00:42ED  ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED 
     660   00:42FD  A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 
     660   00:430D  1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 
     661   00:431D                      	
     662   00:431D  08                  	ex	af',af
     663   00:431E                      	
     664   00:431E  21 20 00            	ld	hl,LvlWidth-32
     665   00:4321  19                  	add	hl,de
     666   00:4322  EB                  	ex	de,hl
     667   00:4323                      
     668   00:4323  DD 25               	dec ixh
     669   00:4325  C2 C9 41            	jp nz,1b
     670   00:4328                      
     671   00:4328  C9                  	ret
     672   00:4329                      	
     673   00:4329                      	
     674   00:4329                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     675   00:4329                      
     676   00:4329                      ;          defb 0x02 ; Reg# 0 000000[M3][EV]
     677   00:4329                      ;          defb 0x62 ; Reg# 1 [4/16k][BLANK][IE][M1][M2]0[SIZE][MAG]
     678   00:4329                      ;          defb 0x06 ; Reg# 2 0000[NAME TABLE BASE ADDRESS]          = 1800h
     679   00:4329                      
     680   00:4329                      ;          defb 0x9F ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; hybrid mode for colors
     681   00:4329                      ;          defb 0xFF ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; regular mode for colors
     682   00:4329                      
     683   00:4329                      ;          defb 0x1F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; hybrid mode for colors
     684   00:4329                      ;          defb 0x7F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; regular mode for colors
     685   00:4329                      
     686   00:4329                      ;          defb 0x00 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; hybrid mode for patterns
     687   00:4329                      ;          defb 0x03 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; regular mode for patterns
     688   00:4329                      
     689   00:4329                      ;          defb 0x04 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; hybrid mode for patterns
     690   00:4329                      ;          defb 0x07 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; regular mode for patterns
     691   00:4329                      
     692   00:4329                      ;          defb 0x36 ; Reg# 5 0[SPRITE ATTRIBUTE TABLE BASE ADDRESS] = 1b00h
     693   00:4329                      ;          defb 0x07 ; Reg# 6 00000[SPRITE PTRN GNRTR BASE ADDRESS]  = 3800h
     694   00:4329                      ;          defb 0x01 ; Reg# 7 [TEXT COLOR 4bts][BACKDROP COLOR 4bts]
     695   00:4329                      
     696   00:4329                      
     697   00:4329                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     698   00:4329                      disp_page1:			; page 1 active
     699   00:4329                      	_setVdp 3,0x9F	; 	colours at 0x2000	(hybrid)
     699   00:4329  3E 9F             >     ld  a,value
     699   00:432B  D3 99             >     out (0x99),a
     699   00:432D  3E 83             >     ld  a,register + 0x80
     699   00:432F  D3 99             >     out (0x99),a
     700   00:4331                      	_setVdp 4,0x03	;	patterns at 0x0000	(regular: used 0x0800 0x1000)
     700   00:4331  3E 03             >     ld  a,value
     700   00:4333  D3 99             >     out (0x99),a
     700   00:4335  3E 84             >     ld  a,register + 0x80
     700   00:4337  D3 99             >     out (0x99),a
     701   00:4339  C9                  	ret
     702   00:433A                      
     703   00:433A                      disp_page0:			; page 0 active
     704   00:433A                      	_setVdp 3,0x1F	; 	colours at 0x0000	(hybrid)
     704   00:433A  3E 1F             >     ld  a,value
     704   00:433C  D3 99             >     out (0x99),a
     704   00:433E  3E 83             >     ld  a,register + 0x80
     704   00:4340  D3 99             >     out (0x99),a
     705   00:4342                      	_setVdp 4,0x07	;	patterns at 0x2000	(regular: used 0x2800 0x3000)
     705   00:4342  3E 07             >     ld  a,value
     705   00:4344  D3 99             >     out (0x99),a
     705   00:4346  3E 84             >     ld  a,register + 0x80
     705   00:4348  D3 99             >     out (0x99),a
     706   00:434A  C9                  	ret
     707   00:434B                      
     708   00:434B                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     709   00:434B                      ; set pages and subslot
     710   00:434B                      ;
     711   00:434B                      
     712   00:434B                      
     713   00:434B  (00:0024)           ENASLT:         equ     024h
     714   00:434B  (00:0138)           RSLREG:         equ     0138h
     715   00:434B  (00:FCC1)           EXPTBL:         equ     0FCC1h  ; Bios Slot / Expansion Slot
     716   00:434B                      
     717   00:434B                      ; -----------------------
     718   00:434B                      ; SEARCH_SLOTSET
     719   00:434B                      ; Posiciona en pagina 2
     720   00:434B                      ; Nuestro ROM.
     721   00:434B                      ; -----------------------
     722   00:434B                      
     723   00:434B                      search_slotset:
     724   00:434B  F3                  	di
     725   00:434C  CD 63 43            	call    search_slot
     726   00:434F  CD 24 00            	call	ENASLT
     727   00:4352                      	
     728   00:4352                      	; now we have:
     729   00:4352                      	; page 0 	- bios
     730   00:4352                      	; page 1,2	- megarom mapper
     731   00:4352                      	; page 3	- RAM
     732   00:4352                      
     733   00:4352                      	; init megarom mapper
     734   00:4352  AF                  	xor	a
     735   00:4353  32 00 50            	ld	(_bank1),a
     736   00:4356  3C                  	inc	a
     737   00:4357  32 00 70            	ld	(_bank2),a
     738   00:435A  3C                  	inc	a
     739   00:435B  32 00 90            	ld	(_bank3),a
     740   00:435E  3C                  	inc	a
     741   00:435F  32 00 B0            	ld	(_bank4),a
     742   00:4362                      
     743   00:4362  C9                  	ret
     744   00:4363                      
     745   00:4363                      
     746   00:4363                      ; -----------------------
     747   00:4363                      ; SEARCH_SLOT
     748   00:4363                      ; Busca slot de nuestro rom
     749   00:4363                      ; -----------------------
     750   00:4363                      
     751   00:4363                      search_slot:
     752   00:4363  CD 38 01            	call    RSLREG
     753   00:4366  0F                  	rrca
     754   00:4367  0F                  	rrca
     755   00:4368  E6 03               	and     3
     756   00:436A  4F                  	ld      c,a
     757   00:436B  06 00               	ld      b,0
     758   00:436D  21 C1 FC            	ld      hl,EXPTBL
     759   00:4370  09                  	add     hl,bc
     760   00:4371  7E                  	ld      a,(hl)
     761   00:4372  E6 80               	and     080h
     762   00:4374  B1                  	or      c
     763   00:4375  4F                  	ld      c,a
     764   00:4376  23                  	inc     hl
     765   00:4377  23                  	inc     hl
     766   00:4378  23                  	inc     hl
     767   00:4379  23                  	inc     hl
     768   00:437A  7E                  	ld      a,(hl)
     769   00:437B  E6 0C               	and     0Ch
     770   00:437D  B1                  	or      c;
     771   00:437E  26 80               	ld      h,080h
     772   00:4380  32 00 E0            	ld      (slotvar),a
     773   00:4383  C9                  	ret
     774   00:4384                      
     775   00:4384                      ; ------------------------------
     776   00:4384                      ; SETROMPAGE0
     777   00:4384                      ; Posiciona nuestro cartucho en
     778   00:4384                      ; Pagina 0
     779   00:4384                      ; -----------------------------
     780   00:4384                      
     781   00:4384                      setrompage0:
     782   00:4384  3A 00 E0            	ld      a,(slotvar)
     783   00:4387  18 03               	jr      setslotpage0
     784   00:4389                      
     785   00:4389                      ; ------------------------------
     786   00:4389                      ; RECBIOS
     787   00:4389                      ; Posiciona la bios ROM
     788   00:4389                      ; -------------------------------
     789   00:4389                      recbios:
     790   00:4389  3A C1 FC            	ld      a,(EXPTBL)
     791   00:438C                      
     792   00:438C                      ; ---------------------------
     793   00:438C                      ; SETSLOTPAGE0
     794   00:438C                      ; Posiciona el slot pasado
     795   00:438C                      ; en pagina 0 del Z80
     796   00:438C                      ; A: Formato FxxxSSPP
     797   00:438C                      ; ----------------------------
     798   00:438C                      
     799   00:438C                      setslotpage0:
     800   00:438C  F3                  	di
     801   00:438D  47                  	ld      b,a                 ; B = Slot param in FxxxSSPP format
     802   00:438E                      
     803   00:438E  DB A8               	in      a,(0A8h)
     804   00:4390  E6 FC               	and     0xFC
     805   00:4392  57                  	ld      d,a                 ; D = Primary slot value
     806   00:4393                      
     807   00:4393  78                  	ld      a,b
     808   00:4394                      
     809   00:4394  E6 03               	and     3
     810   00:4396  B2                  	or      d
     811   00:4397  57                  	ld      d,a                 ; D = Final Value for primary slot
     812   00:4398                      
     813   00:4398                      	; Check if expanded
     814   00:4398  78                  	ld      a,b
     815   00:4399  CB 7F               	bit     7,a
     816   00:439B  28 21               	jr      z,1f    ; Not Expanded
     817   00:439D                      
     818   00:439D  E6 03               	and     3
     819   00:439F  0F                  	rrca
     820   00:43A0  0F                  	rrca
     821   00:43A1  E6 C0               	and     0xC0
     822   00:43A3  4F                  	ld      c,a
     823   00:43A4  7A                  	ld      a,d
     824   00:43A5  E6 3F               	and     0x3F
     825   00:43A7  B1                  	or      c
     826   00:43A8  4F                  	ld      c,a                 ; Primary slot value with main slot in page 3
     827   00:43A9                      
     828   00:43A9  78                  	ld      a,b
     829   00:43AA  E6 0C               	and     0x0C
     830   00:43AC  0F                  	rrca
     831   00:43AD  0F                  	rrca
     832   00:43AE  E6 03               	and     3
     833   00:43B0  47                  	ld      b,a                 ; B = Expanded slot in page 3
     834   00:43B1  79                  	ld      a,c
     835   00:43B2  D3 A8               	out     (0A8h),a            ; Slot : Main Slot, xx, xx, Main slot
     836   00:43B4  3A FF FF            	ld      a,(0FFFFh)
     837   00:43B7  2F                  	cpl
     838   00:43B8  E6 FC               	and     0xFC
     839   00:43BA  B0                  	or      b
     840   00:43BB  32 FF FF            	ld      (0FFFFh),a          ; Expanded slot selected
     841   00:43BE                      
     842   00:43BE                      1:
     843   00:43BE  7A                  	ld      a,d             ; A = Final value
     844   00:43BF  D3 A8               	out     (0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     845   00:43C1  C9                  	ret
     846   00:43C2                      	
     847   00:43C2                      
     848   00:43C2                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     849   00:43C2                      ;
     850   00:43C2                      ;   load tile sets and sprites
     851   00:43C2                      vram_init:
     852   00:43C2                      	setvdpwvram 0x1B80              ; sprites in the scorebar
     852   00:43C2  F3                >     di
     852   00:43C3                    >     _setvdpwvram value
     852   00:43C3                    >     if (value & 0xFF)
     852   00:43C3  3E 80             >         ld  a,value & 0xFF
     852   00:43C5                    >     else
     852   00:43C5                    ~         xor a
     852   00:43C5                    ~     endif
     852   00:43C5  D3 99             >     out (0x99),a
     852   00:43C7  3E 5B             >     ld  a,0x40 + (value/256)
     852   00:43C9  D3 99             >     out (0x99),a
     852   00:43CB  FB                >     ei
     853   00:43CC  21 00 A4            	ld  hl,scorebar_sat
     854   00:43CF  3E 03               	ld	a,:scorebar_sat
     855   00:43D1  CD 52 40            	call    write_256
     856   00:43D4                      
     857   00:43D4                      	setvdpwvram 0x1C00
     857   00:43D4  F3                >     di
     857   00:43D5                    >     _setvdpwvram value
     857   00:43D5                    >     if (value & 0xFF)
     857   00:43D5                    ~         ld  a,value & 0xFF
     857   00:43D5                    ~     else
     857   00:43D5  AF                >         xor a
     857   00:43D6                    >     endif
     857   00:43D6  D3 99             >     out (0x99),a
     857   00:43D8  3E 5C             >     ld  a,0x40 + (value/256)
     857   00:43DA  D3 99             >     out (0x99),a
     857   00:43DC  FB                >     ei
     858   00:43DD  21 00 A0            	ld  hl,tileset					; dummy tile set from basic rom
     859   00:43E0  3E 03               	ld	a,:tileset
     860   00:43E2  CD 52 40            	call    write_256
     861   00:43E5                      
     862   00:43E5                      	setvdpwvram 0x1800				;   dummy PNT
     862   00:43E5  F3                >     di
     862   00:43E6                    >     _setvdpwvram value
     862   00:43E6                    >     if (value & 0xFF)
     862   00:43E6                    ~         ld  a,value & 0xFF
     862   00:43E6                    ~     else
     862   00:43E6  AF                >         xor a
     862   00:43E7                    >     endif
     862   00:43E7  D3 99             >     out (0x99),a
     862   00:43E9  3E 58             >     ld  a,0x40 + (value/256)
     862   00:43EB  D3 99             >     out (0x99),a
     862   00:43ED  FB                >     ei
     863   00:43EE  06 00               	ld	b,0
     864   00:43F0  3E 00               	ld	a,0
     865   00:43F2  D3 98               1:	out (0x98),a
     866   00:43F4  04                  	inc	b
     867   00:43F5  20 FB               	jr	nz,1b
     868   00:43F7                      
     869   00:43F7                      	setvdpwvram 0x1BD0
     869   00:43F7  F3                >     di
     869   00:43F8                    >     _setvdpwvram value
     869   00:43F8                    >     if (value & 0xFF)
     869   00:43F8  3E D0             >         ld  a,value & 0xFF
     869   00:43FA                    >     else
     869   00:43FA                    ~         xor a
     869   00:43FA                    ~     endif
     869   00:43FA  D3 99             >     out (0x99),a
     869   00:43FC  3E 5B             >     ld  a,0x40 + (value/256)
     869   00:43FE  D3 99             >     out (0x99),a
     869   00:4400  FB                >     ei
     870   00:4401  06 10               	ld	b,16				; 	dummy colors
     871   00:4403  3E 11               	ld	a,11h
     872   00:4405  D3 98               1:	out (0x98),a
     873   00:4407  05                  	dec	b
     874   00:4408  20 FB               	jr	nz,1b
     875   00:440A  C9                  	ret
     876   00:440B                      
     877   00:440B                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     878   00:440B                      ; ROM initialisation
     879   00:440B                      
     880   00:440B                      initmain:
     881   00:440B                      	
     882   00:440B  CD 1B 40            	call _scr2				; screen 2
     883   00:440E                      	
     884   00:440E  CD 4B 43            	call 	search_slotset	; now the first 32KB of the megarom are active
     885   00:4411                      			
     886   00:4411                      	;call	setrompage0		; 48K of rom are active - bios is excluded
     887   00:4411                      	
     888   00:4411                      	_setVdp 7,0
     888   00:4411  3E 00             >     ld  a,value
     888   00:4413  D3 99             >     out (0x99),a
     888   00:4415  3E 87             >     ld  a,register + 0x80
     888   00:4417  D3 99             >     out (0x99),a
     889   00:4419  FB                  	ei
     890   00:441A  CD 29 40            	call	set_sprites
     891   00:441D  CD C2 43            	call 	vram_init		; set data in the top 3d of the screen
     892   00:4420                      	
     893   00:4420  CD 64 40            	call	initcommontiles		;	load common tiles
     894   00:4423                      	
     895   00:4423                      	; move meta map in ram
     896   00:4423  3E 06               	ld	a,:metamap
     897   00:4425  32 00 B0            	ld	(_bank4),a
     898   00:4428  01 C0 13            	ld	bc,LvlWidth*LvlHeigh
     899   00:442B  21 00 A0            	ld	hl,metamap
     900   00:442E  11 00 C0            	ld	de,buffer
     901   00:4431  ED B0               	ldir
     902   00:4433                      
     903   00:4433  21 00 80            	ld	hl,myisr
     904   00:4436  22 9B FD            	ld	(0xFD9A+1),hl
     905   00:4439  3E C3               	ld	a,0xC3
     906   00:443B  32 9A FD            	ld	(0xFD9A),a
     907   00:443E                      
     908   00:443E  21 00 00            	ld	hl,0
     909   00:4441  22 02 E0            	ld	(xmap),hl
     910   00:4444  22 04 E0            	ld	(ymap),hl
     911   00:4447  AF                  	xor a
     912   00:4448  32 06 E0            	ld	(dxmap),a
     913   00:444B  32 07 E0            	ld	(dymap),a
     914   00:444E  32 08 E0            	ld	(phase),a
     915   00:4451  3C                  	inc	a
     916   00:4452  32 09 E0            	ld	(vpage),a
     917   00:4455                      	
     918   00:4455                      
     919   00:4455                      mainloop:
     920   00:4455                      
     921   00:4455                      	; setVdp 7,2	
     922   00:4455  76                  	halt
     923   00:4456                      	; setVdp 7,8
     924   00:4456  CD 82 44            	call	show_activepage
     925   00:4459  CD 99 41            	call    plot_pnt		;	use phase to plot the correct PNT
     926   00:445C                      	; setVdp 7,0
     927   00:445C                      	
     928   00:445C  CD 04 45            	call	sub_main		; 	compute new "phase"
     929   00:445F                      
     930   00:445F                      	; setVdp 7,2	
     931   00:445F  76                  	halt
     932   00:4460                      	setVdp 7,10
     932   00:4460  F3                >     di
     932   00:4461                    >     _setVdp register,value
     932   00:4461  3E 0A             >     ld  a,value
     932   00:4463  D3 99             >     out (0x99),a
     932   00:4465  3E 87             >     ld  a,register + 0x80
     932   00:4467  D3 99             >     out (0x99),a
     932   00:4469  FB                >     ei
     933   00:446A  CD B1 40            	call	setvramp		;	use phase to select the tileset loaded to page 1/0
     934   00:446D                      	setVdp 7,0
     934   00:446D  F3                >     di
     934   00:446E                    >     _setVdp register,value
     934   00:446E  3E 00             >     ld  a,value
     934   00:4470  D3 99             >     out (0x99),a
     934   00:4472  3E 87             >     ld  a,register + 0x80
     934   00:4474  D3 99             >     out (0x99),a
     934   00:4476  FB                >     ei
     935   00:4477                      		
     936   00:4477  3A 09 E0            	ld	a,(vpage)
     937   00:447A  EE 01               	xor 1				; 	swap page
     938   00:447C  32 09 E0            	ld	(vpage),a			
     939   00:447F                      		
     940   00:447F  C3 55 44            	jp 	mainloop
     941   00:4482                      	
     942   00:4482                      	
     943   00:4482                      show_activepage:	
     944   00:4482  3A 09 E0            	ld  a,(vpage)	
     945   00:4485  A7                  	and a
     946   00:4486  CA 9C 44            	jp  z,.page0
     947   00:4489                      .page1:				; 	page 1 active
     948   00:4489  F3                  	di
     949   00:448A                      	_setVdp 3,0x9F	; 	PCT at 0x2000	(hybrid)
     949   00:448A  3E 9F             >     ld  a,value
     949   00:448C  D3 99             >     out (0x99),a
     949   00:448E  3E 83             >     ld  a,register + 0x80
     949   00:4490  D3 99             >     out (0x99),a
     950   00:4492                      	_setVdp 4,0x03	;	PGT at 0x0000	(regular: used 0x0800 0x1000)
     950   00:4492  3E 03             >     ld  a,value
     950   00:4494  D3 99             >     out (0x99),a
     950   00:4496  3E 84             >     ld  a,register + 0x80
     950   00:4498  D3 99             >     out (0x99),a
     951   00:449A  FB                  	ei
     952   00:449B  C9                  	ret
     953   00:449C                      .page0:				; 	page 0 active
     954   00:449C  F3                  	di
     955   00:449D                      	_setVdp 3,0x1F	; 	PCT at 0x0000	(hybrid)
     955   00:449D  3E 1F             >     ld  a,value
     955   00:449F  D3 99             >     out (0x99),a
     955   00:44A1  3E 83             >     ld  a,register + 0x80
     955   00:44A3  D3 99             >     out (0x99),a
     956   00:44A5                      	_setVdp 4,0x07	;	PGT at 0x2000	(regular: used 0x2800 0x3000)
     956   00:44A5  3E 07             >     ld  a,value
     956   00:44A7  D3 99             >     out (0x99),a
     956   00:44A9  3E 84             >     ld  a,register + 0x80
     956   00:44AB  D3 99             >     out (0x99),a
     957   00:44AD  FB                  	ei
     958   00:44AE  C9                  	ret
     959   00:44AF                      	
     960   00:44AF                      dxdycontrol:
     961   00:44AF  7D                  	ld  a,l
     962   00:44B0  E6 80               	and 0x80    ; right
     963   00:44B2  20 0C               	jr  nz,1f
     964   00:44B4  3A 06 E0            	ld  a,(dxmap)
     965   00:44B7  FE 80               	cp  maxspeed        ; MAX SPEED
     966   00:44B9  28 05               	jr  z,1f
     967   00:44BB  C6 01               	add a,maxspeedstep
     968   00:44BD  32 06 E0            	ld  (dxmap),a
     969   00:44C0                      1:
     970   00:44C0  7D                  	ld  a,l
     971   00:44C1  E6 10               	and 0x10    ; left
     972   00:44C3  20 0C               	jr  nz,1f
     973   00:44C5  3A 06 E0            	ld  a,(dxmap)
     974   00:44C8  FE 80               	cp  -maxspeed       ; MAX SPEED
     975   00:44CA  28 05               	jr  z,1f
     976   00:44CC  C6 FF               	add a,-maxspeedstep
     977   00:44CE  32 06 E0            	ld  (dxmap),a
     978   00:44D1                      1:
     979   00:44D1                      	; y position
     980   00:44D1  7D                  	ld  a,l
     981   00:44D2  E6 20               	and 0x20    ; up
     982   00:44D4  20 0C               	jr  nz,1f
     983   00:44D6  3A 07 E0            	ld  a,(dymap)
     984   00:44D9  FE 80               	cp  -maxspeed        ; MAX SPEED
     985   00:44DB  28 05               	jr  z,1f
     986   00:44DD  C6 FF               	add a,-maxspeedstep
     987   00:44DF  32 07 E0            	ld  (dymap),a
     988   00:44E2                      1:
     989   00:44E2  7D                  	ld  a,l
     990   00:44E3  E6 40               	and 0x40    ; down
     991   00:44E5  20 0C               	jr  nz,1f
     992   00:44E7  3A 07 E0            	ld  a,(dymap)
     993   00:44EA  FE 80               	cp  maxspeed       ; MAX SPEED
     994   00:44EC  28 05               	jr  z,1f
     995   00:44EE  C6 01               	add a,maxspeedstep
     996   00:44F0  32 07 E0            	ld  (dymap),a
     997   00:44F3                      1:
     998   00:44F3  C9                  	ret
     999   00:44F4                      
    1000   00:44F4                      stopx:
    1001   00:44F4  AF                  	xor	a
    1002   00:44F5  32 06 E0            	ld  (dxmap),a
    1003   00:44F8  21 00 00            	ld	hl,0
    1004   00:44FB  C9                  	ret
    1005   00:44FC                      stopy:
    1006   00:44FC  AF                  	xor	a
    1007   00:44FD  32 07 E0            	ld  (dymap),a
    1008   00:4500  21 00 00            	ld	hl,0
    1009   00:4503  C9                  	ret
    1010   00:4504                      
    1011   00:4504                      sub_main:
    1012   00:4504                      	; x speed control
    1013   00:4504  1E 08               	ld  e,8
    1014   00:4506  CD 10 40            	call    checkkbd
    1015   00:4509  CD AF 44            	call	dxdycontrol
    1016   00:450C                      
    1017   00:450C  ED 5B 02 E0         	ld  de,(xmap)		; FP 4.4
    1018   00:4510  3A 06 E0            	ld  a,(dxmap)
    1019   00:4513  6F                  	ld  l,a
    1020   00:4514  87                  	add a,a
    1021   00:4515  9F                  	sbc a,a
    1022   00:4516  67                  	ld  h,a
    1023   00:4517  29 29 29 29         [4]	add	hl,hl
    1024   00:451B  A7                  	and a
    1025   00:451C  ED 5A               	adc hl,de
    1026   00:451E  FC F4 44            	call	m,stopx
    1027   00:4521  11 C0 1F            	ld	de,(LvlWidth-32)*256-64
    1028   00:4524  A7                  	and a
    1029   00:4525  ED 52               	sbc	hl,de
    1030   00:4527  F4 F4 44            	call	p,stopx
    1031   00:452A  19                  	add	hl,de
    1032   00:452B  22 02 E0            	ld  (xmap),hl
    1033   00:452E                      
    1034   00:452E  ED 5B 04 E0         	ld  de,(ymap)		; FP 4.4
    1035   00:4532  3A 07 E0            	ld  a,(dymap)
    1036   00:4535  6F                  	ld  l,a
    1037   00:4536  87                  	add a,a
    1038   00:4537  9F                  	sbc a,a
    1039   00:4538  67                  	ld  h,a
    1040   00:4539  29 29 29 29         [4]	add	hl,hl
    1041   00:453D  A7                  	and	a
    1042   00:453E  ED 5A               	adc hl,de
    1043   00:4540  FC FC 44            	call	m,stopy
    1044   00:4543  11 C0 3E            	ld	de,(LvlHeigh-16)*256-64
    1045   00:4546  A7                  	and a
    1046   00:4547  ED 52               	sbc	hl,de
    1047   00:4549  F4 FC 44            	call	p,stopy
    1048   00:454C  19                  	add	hl,de
    1049   00:454D  22 04 E0            	ld  (ymap),hl
    1050   00:4550                      
    1051   00:4550                      
    1052   00:4550  3A 02 E0            	ld	a,(xmap)	; xmap 8.8
    1053   00:4553  07 07               [2]	rlca
    1054   00:4555  E6 03               	and		%00000011
    1055   00:4557  47                  	ld	b,a
    1056   00:4558  3A 04 E0            	ld	a,(ymap)	; ymap 8.8
    1057   00:455B  07 07 07 07         [4]	rlca
    1058   00:455F  E6 0C               	and		%00001100
    1059   00:4561  B0                  	or	b
    1060   00:4562  32 08 E0            	ld	(phase),a
    1061   00:4565  C9                  	ret
    1062   00:4566                      
    1063   00:4566                      
    1064   00:4566                      
    1065   00:4566                      

    LABELS
-------------------------------------------------
00:00000040   LvlWidth
00:0000004F   LvlHeigh
00:0000009F   CommonTiles
00:000000BE   TileSize11
00:000000D2   TileSize13
00:000000D6   TileSize15
00:000000D2   TileSize17
00:000000CE   TileSize31
00:000000FF   TileSize33
00:000000FF   TileSize35
00:000000FD   TileSize37
00:000000CC   TileSize51
00:000000FF   TileSize53
00:00000100   TileSize55
00:00000100   TileSize57
00:000000D2   TileSize71
00:000000FF   TileSize73
00:00000100   TileSize75
00:000000FF   TileSize77
03:0000A000   tileset
03:0000A400   scorebar_sat
04:0000A000   common_pattern
04:0000A4F8   common_color
05:0000A000   test_spt
05:0000AF50   test_sat
05:00000080 S counter
06:0000A000   metamap
07:0000A000   metavec
08:0000A000   patterns_base
08:0000A000   patterns11_13_15_17
09:0000A000   patterns31_33_35_37
0A:0000A000   patterns51_53_55_57
0B:0000A000   patterns71_73_75_77
0C:0000A000 X colors_base
0C:0000A000 X colors11_13_15_17
0D:0000A000 X colors31_33_35_37
0E:0000A000 X colors51_53_55_57
0F:0000A000 X colors71_73_75_77
0F:00005000   _bank1
0F:00007000   _bank2
0F:00009000   _bank3
0F:0000B000   _bank4
0F:00000080   maxspeed
0F:00000001   maxspeedstep
0F:0000C000   buffer
0F:0000E000   slotvar
0F:0000E001 X slotram
0F:0000E002   xmap
0F:0000E004   ymap
0F:0000E006   dxmap
0F:0000E007   dymap
0F:0000E008   phase
0F:0000E009   vpage
02:00008000   myisr
00:000000A9   i8255portb
00:000000AA   i8255portc
00:00004010   checkkbd
00:0000F3DF   _vdpReg
00:0000F3AE X LINL40
00:0000401B   _scr2
00:00004029   set_sprites
00:00004052   write_256
00:00004064   initcommontiles
00:000040B1   setvramp
00:000040BB   setvramp1
00:000040EE   setvramp0
00:00004121   getbank
00:0000412D   getaddr
00:0000413B   getsize
00:00004147   tilebank
00:00004157   tilesize
00:00004167   tileaddress
00:00004177   write_2k
00:00004199   plot_pnt
00:0000427D   plot_pnt.fast_loop
00:00004329 X disp_page1
00:0000433A X disp_page0
00:00000024   ENASLT
00:00000138   RSLREG
00:0000FCC1   EXPTBL
00:0000434B   search_slotset
00:00004363   search_slot
00:00004384 X setrompage0
00:00004389 X recbios
00:0000438C   setslotpage0
00:000043C2   vram_init
00:0000440B   initmain
00:00004455   mainloop
00:00004482   show_activepage
00:00004489 X show_activepage.page1
00:0000449C   show_activepage.page0
00:000044AF   dxdycontrol
00:000044F4   stopx
00:000044FC   stopy
00:00004504   sub_main


 Output: src\main128.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: Scrll8way128.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00002000  Used: 00000566

   Address   Length Align   Label
   00004000    1382         checkkbd
   00004566    6810       <empty>

 Page: 01
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 02
  Org: 00008000  Size: 00002000  Used: 00000013

   Address   Length Align   Label
   00008000      19         myisr
   00008013    8173       <empty>

 Page: 03
  Org: 0000A000  Size: 00002000  Used: 00000415

   Address   Length Align   Label
   0000A000    1045         tileset
   0000A415    7147       <empty>

 Page: 04
  Org: 0000A000  Size: 00002000  Used: 000009F0

   Address   Length Align   Label
   0000A000    2544         common_pattern
   0000A9F0    5648       <empty>

 Page: 05
  Org: 0000A000  Size: 00002000  Used: 00000FD0

   Address   Length Align   Label
   0000A000    4048         test_spt
   0000AFD0    4144       <empty>

 Page: 06
  Org: 0000A000  Size: 00002000  Used: 000013C0

   Address   Length Align   Label
   0000A000    5056         metamap
   0000B3C0    3136       <empty>

 Page: 07
  Org: 0000A000  Size: 00002000  Used: 00001000

   Address   Length Align   Label
   0000A000    4096         metavec
   0000B000    4096       <empty>

 Page: 08
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         patterns_base
   0000BB08    1272       <empty>

 Page: 09
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         patterns31_33_35_37
   0000BB08    1272       <empty>

 Page: 0A
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         patterns51_53_55_57
   0000BB08    1272       <empty>

 Page: 0B
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         patterns71_73_75_77
   0000BB08    1272       <empty>

 Page: 0C
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         colors_base
   0000BB08    1272       <empty>

 Page: 0D
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         colors31_33_35_37
   0000BB08    1272       <empty>

 Page: 0E
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         colors51_53_55_57
   0000BB08    1272       <empty>

 Page: 0F
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         colors71_73_75_77
   0000BB08    1272       <empty>
