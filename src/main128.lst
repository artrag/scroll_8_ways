Sjasm Z80 Assembler v0.42b8 - www.xl2s.tk             [2019.03.07 - 23:05:04]

src\main128.asm
Errors: 0

       1   00:0000                      
       2   00:0000                      
       3   00:0000                      
       4   00:0000                          macro _setVdp register,value       ; without DI/EI
       5   00:0000                    <     ld  a,value
       6   00:0000                    <     out (0x99),a
       7   00:0000                    <     ld  a,register + 0x80
       8   00:0000                    <     out (0x99),a
       9   00:0000                    <     endmacro
      10   00:0000                      
      11   00:0000                          macro setVdp register,value       ; macro definition
      12   00:0000                    <     di
      13   00:0000                    <     _setVdp register,value
      14   00:0000                    <     ei
      15   00:0000                    <     endmacro
      16   00:0000                      
      17   00:0000                          macro _setvdpwvram value
      18   00:0000                    <     if (value & 0xFF)
      19   00:0000                    <         ld  a,value & 0xFF
      20   00:0000                    <     else
      21   00:0000                    <         xor a
      22   00:0000                    <     endif
      23   00:0000                    <     out (0x99),a
      24   00:0000                    <     ld  a,0x40 + (value/256)
      25   00:0000                    <     out (0x99),a
      26   00:0000                    <     endmacro
      27   00:0000                      
      28   00:0000                          macro setvdpwvram value
      29   00:0000                    <     di
      30   00:0000                    <     _setvdpwvram value
      31   00:0000                    <     ei
      32   00:0000                    <     endmacro
      33   00:0000                      	
      34   00:0000                      
      35   00:0000                      	incdir data_bin/
      36   00:0000                      
      37   00:0000                      	include parameters.asm
       1.  00:0000  (00:0040)           LvlWidth:  equ 64
       2.  00:0000  (00:004F)           LvlHeigh:  equ 79
       3.  00:0000  (00:009F)           CommonTiles:  equ 159
       4.  00:0000  (00:00BE)           TileSize11:  equ 190
       5.  00:0000  (00:00D2)           TileSize13:  equ 210
       6.  00:0000  (00:00D6)           TileSize15:  equ 214
       7.  00:0000  (00:00D2)           TileSize17:  equ 210
       8.  00:0000  (00:00CE)           TileSize31:  equ 206
       9.  00:0000  (00:00FF)           TileSize33:  equ 255
      10.  00:0000  (00:00FF)           TileSize35:  equ 255
      11.  00:0000  (00:00FD)           TileSize37:  equ 253
      12.  00:0000  (00:00CC)           TileSize51:  equ 204
      13.  00:0000  (00:00FF)           TileSize53:  equ 255
      14.  00:0000  (00:0100)           TileSize55:  equ 256
      15.  00:0000  (00:0100)           TileSize57:  equ 256
      16.  00:0000  (00:00D2)           TileSize71:  equ 210
      17.  00:0000  (00:00FF)           TileSize73:  equ 255
      18.  00:0000  (00:0100)           TileSize75:  equ 256
      19.  00:0000  (00:00FF)           TileSize77:  equ 255
      38   00:0000                      
      39   00:0000                      	output Scrll8way128.rom
      40   00:0000                      
      41   00:0000                      	defpage	 0,0x4000, 0x2000		; page 0 contains main code + far call routines
      42   00:0000                      	defpage  1,0x6000, 0x2000		; static code
      43   00:0000                      	defpage	 2,0x8000, 0x2000		; static code - ISR code
      44   00:0000                      	
      45   00:0000                      	defpage	 3,0xA000, 0x2000		; scorebar data 
      46   00:0000                      	defpage	 4,0xA000, 0x2000		; common patterns and colors
      47   00:0000                      	
      48   00:0000                      	defpage	 5,0xA000, 0x2000		; sprites
      49   00:0000                      	defpage	 6,0xA000, 0x2000		; meta map
      50   00:0000                      	defpage	 7,0xA000, 0x2000		; metavec
      51   00:0000                      
      52   00:0000                      	defpage	 8,0xA000, 0x2000		; patterns_base
      53   00:0000                      	defpage	 9,0xA000, 0x2000		; patterns_base
      54   00:0000                      	defpage	10,0xA000, 0x2000		; patterns_base
      55   00:0000                      	defpage	11,0xA000, 0x2000		; patterns_base
      56   00:0000                      	defpage	12,0xA000, 0x2000		; colors_base
      57   00:0000                      	defpage	13,0xA000, 0x2000		; colors_base
      58   00:0000                      	defpage	14,0xA000, 0x2000		; colors_base
      59   00:0000                      	defpage	15,0xA000, 0x2000		; colors_base
      60   00:0000                      
      61   00:0000                      
      62   00:0000                      
      63   00:0000                      ; *** tile set data in rom ***
      64   00:0000  (03)                	page 3
      65   03:A000                      tileset:
      66   03:A000  (0400)              	incbin tileset.bin
      67   03:A400                      	
      68   03:A400                      	; place sprites in the score bar
      69   03:A400                      scorebar_sat:
      70   03:A400                      	repeat  4
      71   03:A400                    < 	db  6*8-1
      72   03:A400                    < 	db  255
      73   03:A400                    < 	db  32*4
      74   03:A400                    < 	db  0
      75   03:A400                    < 	endrepeat
      75   03:A400  2F FF 80 00 2F FF 80 00 2F FF 80 00 2F FF 80 00 
      76   03:A410  3E                  	db  6*8-1+15
      77   03:A411  FF                  	db  255
      78   03:A412  80                  	db  32*4
      79   03:A413  00                  	db  0
      80   03:A414  D0                  	db	0xd0
      81   03:A415                      	
      82   03:A415  (04)                	page 4
      83   04:A000                      common_pattern:
      84   04:A000  (04F8)              	incbin testpat.bin,0,CommonTiles*8
      85   04:A4F8                      common_color:
      86   04:A4F8  (04F8)              	incbin testcol.bin,0,CommonTiles*8
      87   04:A9F0                      
      88   04:A9F0  (05)                	page 5
      89   05:A000                      test_spt:
      90   05:A000  (0F50)              	incbin spt.bin
      91   05:AF50                      ;	place 32 sprites
      92   05:AF50                      test_sat:
      93   05:AF50  (05:0000)           counter:=0
      94   05:AF50                      	repeat	8
      95   05:AF50                    < 	repeat	4
      96   05:AF50                    < 	db	64 + @@# * 16
      97   05:AF50                    < 	db	48 +  @# * 32 + @@#*8
      98   05:AF50                    < 	db	6*4+(counter and %00001100)
      99   05:AF50                    < 	db	15
     100   05:AF50                    < counter:=counter+4
     101   05:AF50                    < 	endrepeat
     102   05:AF50                    < 	endrepeat
     102   05:AF50  40 30 18 0F 40 50 1C 0F 40 70 20 0F 40 90 24 0F 
     102   05:AF60  50 38 18 0F 50 58 1C 0F 50 78 20 0F 50 98 24 0F 
     102   05:AF70  60 40 18 0F 60 60 1C 0F 60 80 20 0F 60 A0 24 0F 
     102   05:AF80  70 48 18 0F 70 68 1C 0F 70 88 20 0F 70 A8 24 0F 
     102   05:AF90  80 50 18 0F 80 70 1C 0F 80 90 20 0F 80 B0 24 0F 
     102   05:AFA0  90 58 18 0F 90 78 1C 0F 90 98 20 0F 90 B8 24 0F 
     102   05:AFB0  A0 60 18 0F A0 80 1C 0F A0 A0 20 0F A0 C0 24 0F 
     102   05:AFC0  B0 68 18 0F B0 88 1C 0F B0 A8 20 0F B0 C8 24 0F 
     103   05:AFD0                      
     104   05:AFD0  (06)                	page 6
     105   06:A000                      metamap:
     106   06:A000  (13C0)              	incbin metamap.bin
     107   06:B3C0                      
     108   06:B3C0  (07)                	page 7
     109   07:A000                      metavec:
     110   07:A000  (1000)              	incbin metavec.bin
     111   07:B000                      
     112   07:B000  (08)                	page 8
     113   08:A000                      patterns_base:
     114   08:A000                      patterns11_13_15_17:
     115   08:A000  (1B08)              	incbin testpat.bin,00*2*1024+CommonTiles*8,4*2*1024-CommonTiles*8
     116   08:BB08  (09)                	page 9
     117   09:A000                      patterns31_33_35_37:
     118   09:A000  (1B08)              	incbin testpat.bin,04*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     119   09:BB08  (0A)                	page 10
     120   0A:A000                      patterns51_53_55_57:
     121   0A:A000  (1B08)              	incbin testpat.bin,08*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     122   0A:BB08  (0B)                	page 11
     123   0B:A000                      patterns71_73_75_77:
     124   0B:A000  (1B08)              	incbin testpat.bin,12*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     125   0B:BB08                      
     126   0B:BB08  (0C)                	page 12
     127   0C:A000                      colors_base:
     128   0C:A000                      colors11_13_15_17:
     129   0C:A000  (1B08)              	incbin testcol.bin,00*2*1024+CommonTiles*8,4*2*1024-CommonTiles*8
     130   0C:BB08  (0D)                	page 13
     131   0D:A000                      colors31_33_35_37:
     132   0D:A000  (1B08)              	incbin testcol.bin,04*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     133   0D:BB08  (0E)                	page 14
     134   0E:A000                      colors51_53_55_57:
     135   0E:A000  (1B08)              	incbin testcol.bin,08*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     136   0E:BB08  (0F)                	page 15
     137   0F:A000                      colors71_73_75_77:
     138   0F:A000  (1B08)              	incbin testcol.bin,12*2*1024+CommonTiles*8,8*1024-CommonTiles*8
     139   0F:BB08                      
     140   0F:BB08                      
     141   0F:BB08                      ; -----------------------------
     142   0F:BB08                      ; smooth scroller demo
     143   0F:BB08                      ; Trilobyte 2014
     144   0F:BB08                      ; ------------------------------
     145   0F:BB08                      
     146   0F:BB08                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     147   0F:BB08                      ;
     148   0F:BB08                      ;   Mapper Konami 5 (mapper +  scc)
     149   0F:BB08                      ;
     150   0F:BB08                      ; Bank 1: 4000h - 5FFFh
     151   0F:BB08                      ; Bank 2: 6000h - 7FFFh
     152   0F:BB08                      ; Bank 3: 8000h - 9FFFh
     153   0F:BB08                      ; Bank 4: A000h - BFFFh
     154   0F:BB08                      
     155   0F:BB08                      ; Bank 1: 5000h - 57FFh (5000h used)
     156   0F:BB08                      ; Bank 2: 7000h - 77FFh (7000h used)
     157   0F:BB08                      ; Bank 3: 9000h - 97FFh (9000h used)
     158   0F:BB08                      ; Bank 4: B000h - B7FFh (B000h used)
     159   0F:BB08                      
     160   0F:BB08                      
     161   0F:BB08                      ; *** CONSTANTS ***
     162   0F:BB08  (0F:5000)           _bank1			equ	0x5000
     163   0F:BB08  (0F:7000)           _bank2			equ	0x7000
     164   0F:BB08  (0F:9000)           _bank3			equ	0x9000
     165   0F:BB08  (0F:B000)           _bank4			equ	0xB000
     166   0F:BB08                      
     167   0F:BB08                      ; -----------------------------
     168   0F:BB08                      ; parameters
     169   0F:BB08                      ;
     170   0F:BB08                      
     171   0F:BB08                      ;
     172   0F:BB08  (0F:0080)           maxspeed:   	equ 8*16		; FP 4.4
     173   0F:BB08  (0F:0001)           maxspeedstep:	equ	1			; FP 4.4
     174   0F:BB08                      ;
     175   0F:BB08                      ;minspeed:	equ	1		i.e. 	1/16
     176   0F:BB08                      
     177   0F:BB08                      ; ------------------------------
     178   0F:BB08                      
     179   0F:BB08                      ; *** RAM ***
     180   0F:BB08                      
     181   0F:BB08  (C000)              	map 0xc000
     182   0F:BB08                      
     183   0F:BB08  (0F:C000)           buffer:			#8*1024
     184   0F:BB08                      
     185   0F:BB08                      
     186   0F:BB08  (0F:E000)           slotvar:		#1
     187   0F:BB08  (0F:E001)           slotram:		#1
     188   0F:BB08                      
     189   0F:BB08  (0F:E002)           xmap:			#2		; FP 8.8
     190   0F:BB08  (0F:E004)           ymap:			#2		; FP 8.8
     191   0F:BB08  (0F:E006)           dxmap:			#1		; FP 4.4
     192   0F:BB08  (0F:E007)           dymap:			#1		; FP 4.4
     193   0F:BB08                      
     194   0F:BB08  (0F:E008)           phase:			#1
     195   0F:BB08  (0F:E009)           vpage:			#1
     196   0F:BB08  (0F:E00A)           hold:			#1
     197   0F:BB08                      
     198   0F:BB08  (0000)              	endmap
     199   0F:BB08                      
     200   0F:BB08                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     201   0F:BB08                      ; Interrupt service routine
     202   0F:BB08                      ;
     203   0F:BB08                      
     204   0F:BB08                      ; remove any processing from the ISR
     205   0F:BB08                      
     206   0F:BB08  (02)                	page 2
     207   02:8000                      myisr:
     208   02:8000  F1                   	pop	af		; 	remove return address
     209   02:8001  DB 99               	in  a,(0x99)	; 	s0 reset
     210   02:8003  CD 51 44            	call	showscorebar
     211   02:8006  DD E1                	pop    ix
     212   02:8008  FD E1               	pop    iy
     213   02:800A  F1                  	pop    af
     214   02:800B  C1                  	pop    bc
     215   02:800C  D1                  	pop    de
     216   02:800D  E1                  	pop    hl
     217   02:800E  08                  	ex     af,af'
     218   02:800F  D9                  	exx
     219   02:8010  F1                  	pop    af
     220   02:8011  C1                  	pop    bc
     221   02:8012  D1                  	pop    de
     222   02:8013  E1                  	pop    hl
     223   02:8014  FB                  	ei
     224   02:8015  C9                  	ret
     225   02:8016                      
     226   02:8016                      
     227   02:8016                      ; ------------
     228   02:8016                      ; megarom header
     229   02:8016                      
     230   02:8016  (00)                	page 0
     231   00:4000                      	code page 0
     232   00:4000                      
     233   00:4000                      	org	04000h
     234   00:4000  41 42               	db	041h,042h
     235   00:4002  EB 43               	dw	initmain
     236   00:4004                      	dz 	'TRI004'
     236   00:4004  54 52 49 30 30 34 00 
     237   00:400B  00 (5)              	ds	5
     238   00:4010                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     239   00:4010                      ;
     240   00:4010                      ; checkkbd: ckeck keyboard line
     241   00:4010                      ; in:  E = row
     242   00:4010                      ; out: L = bit pattern (1 = not pressed)
     243   00:4010                      ;
     244   00:4010                      ; row/bit|    7     6     5     4     3     2     1     0
     245   00:4010                      ; -------+--------------------------------------------------
     246   00:4010                      ;    0   |    7     6     5     4     3     2     1     0
     247   00:4010                      ;    1   |    ;     ]     [     \     =     -     9     8
     248   00:4010                      ;    2   |    B     A    ???    /     .     ,     '     `
     249   00:4010                      ;    3   |    J     I     H     G     F     E     D     C
     250   00:4010                      ;    4   |    R     Q     P     O     N     M     L     K
     251   00:4010                      ;    5   |    Z     Y     X     W     V     U     T     S
     252   00:4010                      ;    6   |   F3    F2    F1   CODE   CAP  GRAPH CTRL  SHIFT
     253   00:4010                      ;    7   |   RET   SEL   BS   STOP   TAB   ESC   F5    F4
     254   00:4010                      ;    8   |  RIGHT DOWN   UP   LEFT   DEL   INS  HOME  SPACE
     255   00:4010                      ;    9   |    4     3     2     1     0     /     +     *
     256   00:4010                      ;   10   |    .     ,     -     9     8     7     6     5
     257   00:4010                      ;   11   |                           NO          YES
     258   00:4010                      ;
     259   00:4010                      ;
     260   00:4010                      
     261   00:4010  (00:00A9)           i8255portb  equ 0a9h        ; keyboard column input
     262   00:4010  (00:00AA)           i8255portc  equ 0aah        ; leds, motor, cassette, kbd line
     263   00:4010                      
     264   00:4010                      checkkbd:
     265   00:4010  DB AA               	in  a,(i8255portc)
     266   00:4012  E6 F0               	and 011110000B          ; upper 4 bits contain info to preserve
     267   00:4014  B3                  	or  e
     268   00:4015  D3 AA               	out (i8255portc),a
     269   00:4017  DB A9               	in  a,(i8255portb)
     270   00:4019  6F                  	ld  l,a
     271   00:401A  C9                  	ret
     272   00:401B                      
     273   00:401B                      
     274   00:401B                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     275   00:401B                      ; vdp access
     276   00:401B                      
     277   00:401B  (00:F3DF)           _vdpReg equ 0xF3DF
     278   00:401B  (00:F3AE)           LINL40	equ 0xF3AE
     279   00:401B                      
     280   00:401B                      ; e = screen mode
     281   00:401B                      _scr2:
     282   00:401B  3A E0 F3            	ld	a,(_vdpReg+1)
     283   00:401E  F6 02               	or 2
     284   00:4020  32 E0 F3            	ld	(_vdpReg+1),a
     285   00:4023                      
     286   00:4023  3E 02               	ld	a,2
     287   00:4025  CD 5F 00            	call 0x005f
     288   00:4028                      
     289   00:4028  C9                  	ret
     290   00:4029                      
     291   00:4029                      ; set sprites
     292   00:4029                      
     293   00:4029                      set_sprites:
     294   00:4029                      	setvdpwvram 0x3800
     294   00:4029  F3                >     di
     294   00:402A                    >     _setvdpwvram value
     294   00:402A                    >     if (value & 0xFF)
     294   00:402A                    ~         ld  a,value & 0xFF
     294   00:402A                    ~     else
     294   00:402A  AF                >         xor a
     294   00:402B                    >     endif
     294   00:402B  D3 99             >     out (0x99),a
     294   00:402D  3E 78             >     ld  a,0x40 + (value/256)
     294   00:402F  D3 99             >     out (0x99),a
     294   00:4031  FB                >     ei
     295   00:4032  21 00 A0            	ld	hl,test_spt
     296   00:4035  3E 05               	ld	a,:test_spt
     297   00:4037  CD 52 40            	call	write_256
     298   00:403A  76                  	halt
     299   00:403B                      	setvdpwvram 0x1B00
     299   00:403B  F3                >     di
     299   00:403C                    >     _setvdpwvram value
     299   00:403C                    >     if (value & 0xFF)
     299   00:403C                    ~         ld  a,value & 0xFF
     299   00:403C                    ~     else
     299   00:403C  AF                >         xor a
     299   00:403D                    >     endif
     299   00:403D  D3 99             >     out (0x99),a
     299   00:403F  3E 5B             >     ld  a,0x40 + (value/256)
     299   00:4041  D3 99             >     out (0x99),a
     299   00:4043  FB                >     ei
     300   00:4044  21 50 AF            	ld	hl,test_sat
     301   00:4047  3E 05               	ld	a,:test_sat
     302   00:4049  32 00 B0            	ld	(_bank4),a
     303   00:404C  01 98 80            	ld	bc,0x8098
     304   00:404F  ED B3               	otir
     305   00:4051  C9                  	ret
     306   00:4052                      
     307   00:4052                      write_256:
     308   00:4052  32 00 B0            	ld	(_bank4),a
     309   00:4055  01 98 00            	ld	bc,0x0098
     310   00:4058  3E 08               	ld	a,8
     311   00:405A  ED A3               1:	outi
     312   00:405C  C2 5A 40            	jp nz,1b
     313   00:405F  3D                  	dec	a
     314   00:4060  C2 5A 40            	jp nz,1b
     315   00:4063  C9                  	ret
     316   00:4064                      
     317   00:4064                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     318   00:4064                      ;	Initialise the tiles common to all banks
     319   00:4064                      ;	Common tiles are stored only once in a separate bank
     320   00:4064                      ;
     321   00:4064                      initcommontiles:
     322   00:4064  3E 04               	ld	a,:common_pattern
     323   00:4066  32 00 B0            	ld (_bank4),a
     324   00:4069  21 00 A0            	ld	hl,common_pattern
     325   00:406C  3E 9F               	ld	a,CommonTiles
     326   00:406E  11 00 48            	ld	de,0x0800 + 4000h
     327   00:4071  CD 77 41            	call write_2k
     328   00:4074                      
     329   00:4074  21 00 A0            	ld	hl,common_pattern
     330   00:4077  3E 9F               	ld	a,CommonTiles
     331   00:4079  11 00 50            	ld	de,0x1000 + 4000h
     332   00:407C  CD 77 41            	call write_2k
     333   00:407F                      
     334   00:407F  21 00 A0            	ld	hl,common_pattern
     335   00:4082  3E 9F               	ld	a,CommonTiles
     336   00:4084  11 00 68            	ld	de,0x2800 + 4000h
     337   00:4087  CD 77 41            	call write_2k
     338   00:408A                      
     339   00:408A  21 00 A0            	ld	hl,common_pattern
     340   00:408D  3E 9F               	ld	a,CommonTiles
     341   00:408F  11 00 70            	ld	de,0x3000 + 4000h
     342   00:4092  CD 77 41            	call write_2k
     343   00:4095                      
     344   00:4095  3E 04               	ld	a,:common_color
     345   00:4097  32 00 B0            	ld (_bank4),a
     346   00:409A  21 F8 A4            	ld	hl,common_color
     347   00:409D  3E 9F               	ld	a,CommonTiles
     348   00:409F  11 00 60            	ld	de,0x2000 + 4000h
     349   00:40A2  CD 77 41            	call write_2k
     350   00:40A5  21 F8 A4            	ld	hl,common_color
     351   00:40A8  3E 9F               	ld	a,CommonTiles
     352   00:40AA  11 00 40            	ld	de,0x0000 + 4000h
     353   00:40AD  CD 77 41            	call write_2k
     354   00:40B0  C9                  	ret
     355   00:40B1                      
     356   00:40B1                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     357   00:40B1                      ;	load tile sets: only differences are loaded
     358   00:40B1                      
     359   00:40B1                      setvramp:
     360   00:40B1  3A 09 E0            	ld	a,(vpage)
     361   00:40B4  A7                  	and	a
     362   00:40B5  CA BB 40            	jp	z,setvramp1	;	PGT at	0x0800/0x1000,	PCT at 0x0800
     363   00:40B8  C3 EE 40            	jp	setvramp0	;	PGT at	0x2800/0x3000,	PCT at 0x0000
     364   00:40BB                      
     365   00:40BB                      setvramp1:			;	PGT at	0x0800/0x1000,	PGT at 0x2000
     366   00:40BB  CD 21 41            	call getbank	;->a
     367   00:40BE  32 00 B0            	ld (_bank4),a
     368   00:40C1  CD 3B 41            	call getsize	;->a
     369   00:40C4  CD 2D 41            	call getaddr	;->hl
     370   00:40C7  11 F8 4C            	ld	de,0x0800 + 8*CommonTiles + 4000h
     371   00:40CA  CD 77 41            	call write_2k
     372   00:40CD                      
     373   00:40CD  CD 3B 41            	call getsize	;->a
     374   00:40D0  CD 2D 41            	call getaddr	;->hl
     375   00:40D3  11 F8 54            	ld	de,0x1000 + 8*CommonTiles + 4000h
     376   00:40D6  CD 77 41            	call write_2k
     377   00:40D9                      
     378   00:40D9  CD 21 41            	call getbank	;->a
     379   00:40DC  C6 04               	add	a,4			; colorbank = tilebank+4
     380   00:40DE  32 00 B0            	ld (_bank4),a
     381   00:40E1  CD 3B 41            	call getsize	;->a
     382   00:40E4  CD 2D 41            	call getaddr	;->hl
     383   00:40E7  11 F8 64            	ld	de,0x2000 + 8*CommonTiles + 4000h
     384   00:40EA  CD 77 41            	call write_2k
     385   00:40ED  C9                  	ret
     386   00:40EE                      
     387   00:40EE                      setvramp0:			;	PGT at	0x2800/0x3000,	PGT at 0x0000
     388   00:40EE  CD 21 41            	call getbank	;->a
     389   00:40F1  32 00 B0            	ld (_bank4),a
     390   00:40F4  CD 3B 41            	call getsize	;->a
     391   00:40F7  CD 2D 41            	call getaddr	;->hl
     392   00:40FA  11 F8 6C            	ld	de,0x2800 + 8*CommonTiles + 4000h
     393   00:40FD  CD 77 41            	call write_2k
     394   00:4100                      
     395   00:4100  CD 3B 41            	call getsize	;->a
     396   00:4103  CD 2D 41            	call getaddr	;->hl
     397   00:4106  11 F8 74            	ld	de,0x3000 + 8*CommonTiles + 4000h
     398   00:4109  CD 77 41            	call write_2k
     399   00:410C                      
     400   00:410C  CD 21 41            	call getbank	;->a
     401   00:410F  C6 04               	add	a,4			; colorbank = tilebank+4
     402   00:4111  32 00 B0            	ld (_bank4),a
     403   00:4114  CD 3B 41            	call getsize	;->a
     404   00:4117  CD 2D 41            	call getaddr	;->hl
     405   00:411A  11 F8 44            	ld	de,0x0000 + 8*CommonTiles + 4000h
     406   00:411D  CD 77 41            	call write_2k
     407   00:4120  C9                  	ret
     408   00:4121                      
     409   00:4121                      getbank:
     410   00:4121  ED 5B 08 E0         	ld	de,(phase)
     411   00:4125  21 47 41            	ld	hl,tilebank
     412   00:4128  16 00               	ld	d,0
     413   00:412A  19                  	add	hl,de
     414   00:412B  7E                  	ld	a,(hl)
     415   00:412C  C9                  	ret
     416   00:412D                      getaddr:
     417   00:412D  ED 5B 08 E0         	ld	de,(phase)
     418   00:4131  21 67 41            	ld	hl,tileaddress
     419   00:4134  16 00               	ld	d,0
     420   00:4136  19                  	add	hl,de
     421   00:4137  66                  	ld	h,(hl)
     422   00:4138  2E 00               	ld	l,0
     423   00:413A  C9                  	ret
     424   00:413B                      getsize:
     425   00:413B  ED 5B 08 E0         	ld	de,(phase)
     426   00:413F  21 57 41            	ld	hl,tilesize
     427   00:4142  16 00               	ld	d,0
     428   00:4144  19                  	add	hl,de
     429   00:4145  7E                  	ld	a,(hl)
     430   00:4146  C9                  	ret
     431   00:4147                      
     432   00:4147                      
     433   00:4147                      	;	patternsxy
     434   00:4147                      tilebank:
     435   00:4147  08 08 08 08         	db	:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17
     436   00:414B  09 09 09 09         	db	:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37
     437   00:414F  0A 0A 0A 0A         	db	:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57
     438   00:4153  0B 0B 0B 0B         	db	:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77
     439   00:4157                      tilesize:
     440   00:4157  1F 33 37 33         	db	TileSize11-CommonTiles,TileSize13-CommonTiles,TileSize15-CommonTiles,TileSize17-CommonTiles
     441   00:415B  2F 60 60 5E         	db	TileSize31-CommonTiles,TileSize33-CommonTiles,TileSize35-CommonTiles,TileSize37-CommonTiles
     442   00:415F  2D 60 61 61         	db	TileSize51-CommonTiles,TileSize53-CommonTiles,TileSize55-CommonTiles,TileSize57-CommonTiles
     443   00:4163  33 60 61 60         	db	TileSize71-CommonTiles,TileSize73-CommonTiles,TileSize75-CommonTiles,TileSize77-CommonTiles
     444   00:4167                      tileaddress:
     445   00:4167  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     446   00:416B  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     447   00:416F  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     448   00:4173  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     449   00:4177                      
     450   00:4177                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     451   00:4177                      ; write 2K while ints are active from hl to de
     452   00:4177                      ; in: de vram address
     453   00:4177                      ;     hl ram address
     454   00:4177                      ;	   a counter of 8 chunks of bytes 
     455   00:4177                      ;
     456   00:4177                      ; N outi per frame in vblank (NTSC) = 3579545 * ((27+24.5+3+3+13)/262.5*1/59.94)/18
     457   00:4177                      
     458   00:4177                      ;_write_2k:
     459   00:4177                      ;	di
     460   00:4177                      ;	ld	c,0x99
     461   00:4177                      ;	out (c),e
     462   00:4177                      ;	out (c),d	;c = 0x99, HL with write setup bit set
     463   00:4177                      ;		
     464   00:4177                      ;	ld	e,a
     465   00:4177                      ;	ld	d,0
     466   00:4177                      ;	ex	de,hl
     467   00:4177                      ;[3]	add hl,hl
     468   00:4177                      ;	ex	de,hl
     469   00:4177                      ;	
     470   00:4177                      ;	dec	c
     471   00:4177                      ;	
     472   00:4177                      ;	ld	a,e
     473   00:4177                      ;	and	a
     474   00:4177                      ;	jp	z,1f
     475   00:4177                      ;	inc	d
     476   00:4177                      ;1:	
     477   00:4177                      ;	ld	b,e
     478   00:4177                      ;2:	outi
     479   00:4177                      ;	jp	nz,2b
     480   00:4177                      ;	dec	d
     481   00:4177                      ;	
     482   00:4177                      ;	jp nz,2b	
     483   00:4177                      ;	ei
     484   00:4177                      ;	ret
     485   00:4177                      
     486   00:4177                      
     487   00:4177                      		
     488   00:4177                      write_2k:
     489   00:4177  E5                  	push hl
     490   00:4178  EB                  	ex	de,hl
     491   00:4179  CB F4               	set	6,h
     492   00:417B  0E 99               	ld	c,0x99
     493   00:417D  11 08 00            	ld	de,8
     494   00:4180  D9                  	exx
     495   00:4181  E1                  	pop	hl		; ram source in HL'
     496   00:4182  0E 98               	ld	c,0x98	; data port in c'
     497   00:4184  F3                  2:	di
     498   00:4185  D9                  	exx
     499   00:4186  ED 69               	out (c),l
     500   00:4188  ED 61               	out (c),h	;c = 0x99, HL with write setup bit set
     501   00:418A  19                  	add hl,de	;de = 8
     502   00:418B  D9                  	exx
     503   00:418C  06 08               	ld b,8
     504   00:418E  ED A3               1:	outi		;c' = 0x98
     505   00:4190  C2 8E 41            	jp nz,1b
     506   00:4193  FB                  	ei
     507   00:4194  3D                  	dec a
     508   00:4195  C2 84 41            	jp nz,2b
     509   00:4198  C9                  	ret
     510   00:4199                      
     511   00:4199                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     512   00:4199                      ;	in xmap,ymap,phase
     513   00:4199                      ;
     514   00:4199                      plot_pnt:
     515   00:4199  3E 07               	ld	a,:metavec
     516   00:419B  32 00 B0            	ld	(_bank4),a
     517   00:419E                      
     518   00:419E  21 00 C0            	ld	hl,buffer	; meta map in ram
     519   00:41A1                      
     520   00:41A1  3A 05 E0            	ld	a,(ymap+1)	; ymap 8.8
     521   00:41A4  A7                  	and	a
     522   00:41A5  28 07               	jr	z,1f
     523   00:41A7  01 40 00            	ld	bc,LvlWidth
     524   00:41AA  09                  2:	add	hl,bc
     525   00:41AB  3D                  	dec a
     526   00:41AC  20 FC               	jr	nz,2b
     527   00:41AE                      1:
     528   00:41AE  3A 03 E0            	ld	a,(xmap+1)	; xmap 8.8
     529   00:41B1  5F                  	ld	e,a
     530   00:41B2  16 00               	ld	d,0
     531   00:41B4  19                  	add	hl,de
     532   00:41B5  EB                  	ex	de,hl		; DE = buffer + round(ymap)*LvlWidth+round(xmap)
     533   00:41B6                      
     534   00:41B6                      	setvdpwvram 0x1900
     534   00:41B6  F3                >     di
     534   00:41B7                    >     _setvdpwvram value
     534   00:41B7                    >     if (value & 0xFF)
     534   00:41B7                    ~         ld  a,value & 0xFF
     534   00:41B7                    ~     else
     534   00:41B7  AF                >         xor a
     534   00:41B8                    >     endif
     534   00:41B8  D3 99             >     out (0x99),a
     534   00:41BA  3E 59             >     ld  a,0x40 + (value/256)
     534   00:41BC  D3 99             >     out (0x99),a
     534   00:41BE  FB                >     ei
     535   00:41BF                      	
     536   00:41BF  0E 98               	ld  c,0x98
     537   00:41C1  DD 26 10            	ld  ixh,16
     538   00:41C4                      
     539   00:41C4  3A 08 E0            	ld	a,(phase)
     540   00:41C7  C6 A0               	add	a,metavec/256
     541   00:41C9                      	
     542   00:41C9                      1:	
     543   00:41C9  67                  	ld	h,a
     544   00:41CA  08                  	ex	af',af
     545   00:41CB                      	
     546   00:41CB  7B                  	ld  a,e
     547   00:41CC  C6 20               	add a,32
     548   00:41CE  D2 7D 42            	jp  nc,.fast_loop
     549   00:41D1                      
     550   00:41D1                      	
     551   00:41D1                      	repeat 32
     552   00:41D1                    < 	ld	a,(de)
     553   00:41D1                    < 	ld	l,a
     554   00:41D1                    < 	outi         	; Send data pointed by HL to VDP port (reg.C preloaded)
     555   00:41D1                    < 	inc	de
     556   00:41D1                    < 	endrepeat
     556   00:41D1  1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 
     556   00:41E1  6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F 
     556   00:41F1  ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED 
     556   00:4201  A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 
     556   00:4211  13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 
     556   00:4221  1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 
     556   00:4231  6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F 
     556   00:4241  ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED 
     556   00:4251  A3 13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 
     556   00:4261  13 1A 6F ED A3 13 1A 6F ED A3 13 1A 6F ED A3 13 
     557   00:4271                      	
     558   00:4271  08                  	ex	af',af
     559   00:4272                      	
     560   00:4272  21 20 00            	ld	hl,LvlWidth-32
     561   00:4275  19                  	add	hl,de
     562   00:4276  EB                  	ex	de,hl
     563   00:4277                      
     564   00:4277  DD 25               	dec ixh
     565   00:4279  C2 C9 41            	jp nz,1b
     566   00:427C                      
     567   00:427C  C9                  	ret
     568   00:427D                      
     569   00:427D                      .fast_loop
     570   00:427D                      
     571   00:427D                      	repeat 32
     572   00:427D                    < 	ld	a,(de)
     573   00:427D                    < 	ld	l,a
     574   00:427D                    < 	outi         	; Send data pointed by HL to VDP port (reg.C preloaded)
     575   00:427D                    < 	inc	e			; save 32 INC DE 
     576   00:427D                    < 	endrepeat
     576   00:427D  1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 
     576   00:428D  6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F 
     576   00:429D  ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED 
     576   00:42AD  A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 
     576   00:42BD  1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 
     576   00:42CD  1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 
     576   00:42DD  6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F 
     576   00:42ED  ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED 
     576   00:42FD  A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 
     576   00:430D  1C 1A 6F ED A3 1C 1A 6F ED A3 1C 1A 6F ED A3 1C 
     577   00:431D                      	
     578   00:431D  08                  	ex	af',af
     579   00:431E                      	
     580   00:431E  21 20 00            	ld	hl,LvlWidth-32
     581   00:4321  19                  	add	hl,de
     582   00:4322  EB                  	ex	de,hl
     583   00:4323                      
     584   00:4323  DD 25               	dec ixh
     585   00:4325  C2 C9 41            	jp nz,1b
     586   00:4328                      
     587   00:4328  C9                  	ret
     588   00:4329                      	
     589   00:4329                      	
     590   00:4329                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     591   00:4329                      
     592   00:4329                      ;          defb 0x02 ; Reg# 0 000000[M3][EV]
     593   00:4329                      ;          defb 0x62 ; Reg# 1 [4/16k][BLANK][IE][M1][M2]0[SIZE][MAG]
     594   00:4329                      ;          defb 0x06 ; Reg# 2 0000[NAME TABLE BASE ADDRESS]          = 1800h
     595   00:4329                      
     596   00:4329                      ;          defb 0x9F ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; hybrid mode for colors
     597   00:4329                      ;          defb 0xFF ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; regular mode for colors
     598   00:4329                      
     599   00:4329                      ;          defb 0x1F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; hybrid mode for colors
     600   00:4329                      ;          defb 0x7F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; regular mode for colors
     601   00:4329                      
     602   00:4329                      ;          defb 0x00 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; hybrid mode for patterns
     603   00:4329                      ;          defb 0x03 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; regular mode for patterns
     604   00:4329                      
     605   00:4329                      ;          defb 0x04 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; hybrid mode for patterns
     606   00:4329                      ;          defb 0x07 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; regular mode for patterns
     607   00:4329                      
     608   00:4329                      ;          defb 0x36 ; Reg# 5 0[SPRITE ATTRIBUTE TABLE BASE ADDRESS] = 1b00h
     609   00:4329                      ;          defb 0x07 ; Reg# 6 00000[SPRITE PTRN GNRTR BASE ADDRESS]  = 3800h
     610   00:4329                      ;          defb 0x01 ; Reg# 7 [TEXT COLOR 4bts][BACKDROP COLOR 4bts]
     611   00:4329                      
     612   00:4329                      
     613   00:4329                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     614   00:4329                      ; set pages and subslot
     615   00:4329                      ;
     616   00:4329                      
     617   00:4329                      
     618   00:4329  (00:0024)           ENASLT:         equ     024h
     619   00:4329  (00:0138)           RSLREG:         equ     0138h
     620   00:4329  (00:FCC1)           EXPTBL:         equ     0FCC1h  ; Bios Slot / Expansion Slot
     621   00:4329                      
     622   00:4329                      ; -----------------------
     623   00:4329                      ; SEARCH_SLOTSET
     624   00:4329                      ; Posiciona en pagina 2
     625   00:4329                      ; Nuestro ROM.
     626   00:4329                      ; -----------------------
     627   00:4329                      
     628   00:4329                      search_slotset:
     629   00:4329  F3                  	di
     630   00:432A  CD 41 43            	call    search_slot
     631   00:432D  CD 24 00            	call	ENASLT
     632   00:4330                      	
     633   00:4330                      	; now we have:
     634   00:4330                      	; page 0 	- bios
     635   00:4330                      	; page 1,2	- megarom mapper
     636   00:4330                      	; page 3	- RAM
     637   00:4330                      
     638   00:4330                      	; init megarom mapper
     639   00:4330  AF                  	xor	a
     640   00:4331  32 00 50            	ld	(_bank1),a
     641   00:4334  3C                  	inc	a
     642   00:4335  32 00 70            	ld	(_bank2),a
     643   00:4338  3C                  	inc	a
     644   00:4339  32 00 90            	ld	(_bank3),a
     645   00:433C  3C                  	inc	a
     646   00:433D  32 00 B0            	ld	(_bank4),a
     647   00:4340                      
     648   00:4340  C9                  	ret
     649   00:4341                      
     650   00:4341                      
     651   00:4341                      ; -----------------------
     652   00:4341                      ; SEARCH_SLOT
     653   00:4341                      ; Busca slot de nuestro rom
     654   00:4341                      ; -----------------------
     655   00:4341                      
     656   00:4341                      search_slot:
     657   00:4341  CD 38 01            	call    RSLREG
     658   00:4344  0F                  	rrca
     659   00:4345  0F                  	rrca
     660   00:4346  E6 03               	and     3
     661   00:4348  4F                  	ld      c,a
     662   00:4349  06 00               	ld      b,0
     663   00:434B  21 C1 FC            	ld      hl,EXPTBL
     664   00:434E  09                  	add     hl,bc
     665   00:434F  7E                  	ld      a,(hl)
     666   00:4350  E6 80               	and     080h
     667   00:4352  B1                  	or      c
     668   00:4353  4F                  	ld      c,a
     669   00:4354  23                  	inc     hl
     670   00:4355  23                  	inc     hl
     671   00:4356  23                  	inc     hl
     672   00:4357  23                  	inc     hl
     673   00:4358  7E                  	ld      a,(hl)
     674   00:4359  E6 0C               	and     0Ch
     675   00:435B  B1                  	or      c;
     676   00:435C  26 80               	ld      h,080h
     677   00:435E  32 00 E0            	ld      (slotvar),a
     678   00:4361  C9                  	ret
     679   00:4362                      
     680   00:4362                      ; ------------------------------
     681   00:4362                      ; SETROMPAGE0
     682   00:4362                      ; Posiciona nuestro cartucho en
     683   00:4362                      ; Pagina 0
     684   00:4362                      ; -----------------------------
     685   00:4362                      
     686   00:4362                      setrompage0:
     687   00:4362  3A 00 E0            	ld      a,(slotvar)
     688   00:4365  18 03               	jr      setslotpage0
     689   00:4367                      
     690   00:4367                      ; ------------------------------
     691   00:4367                      ; RECBIOS
     692   00:4367                      ; Posiciona la bios ROM
     693   00:4367                      ; -------------------------------
     694   00:4367                      recbios:
     695   00:4367  3A C1 FC            	ld      a,(EXPTBL)
     696   00:436A                      
     697   00:436A                      ; ---------------------------
     698   00:436A                      ; SETSLOTPAGE0
     699   00:436A                      ; Posiciona el slot pasado
     700   00:436A                      ; en pagina 0 del Z80
     701   00:436A                      ; A: Formato FxxxSSPP
     702   00:436A                      ; ----------------------------
     703   00:436A                      
     704   00:436A                      setslotpage0:
     705   00:436A  F3                  	di
     706   00:436B  47                  	ld      b,a                 ; B = Slot param in FxxxSSPP format
     707   00:436C                      
     708   00:436C  DB A8               	in      a,(0A8h)
     709   00:436E  E6 FC               	and     0xFC
     710   00:4370  57                  	ld      d,a                 ; D = Primary slot value
     711   00:4371                      
     712   00:4371  78                  	ld      a,b
     713   00:4372                      
     714   00:4372  E6 03               	and     3
     715   00:4374  B2                  	or      d
     716   00:4375  57                  	ld      d,a                 ; D = Final Value for primary slot
     717   00:4376                      
     718   00:4376                      	; Check if expanded
     719   00:4376  78                  	ld      a,b
     720   00:4377  CB 7F               	bit     7,a
     721   00:4379  28 21               	jr      z,1f    ; Not Expanded
     722   00:437B                      
     723   00:437B  E6 03               	and     3
     724   00:437D  0F                  	rrca
     725   00:437E  0F                  	rrca
     726   00:437F  E6 C0               	and     0xC0
     727   00:4381  4F                  	ld      c,a
     728   00:4382  7A                  	ld      a,d
     729   00:4383  E6 3F               	and     0x3F
     730   00:4385  B1                  	or      c
     731   00:4386  4F                  	ld      c,a                 ; Primary slot value with main slot in page 3
     732   00:4387                      
     733   00:4387  78                  	ld      a,b
     734   00:4388  E6 0C               	and     0x0C
     735   00:438A  0F                  	rrca
     736   00:438B  0F                  	rrca
     737   00:438C  E6 03               	and     3
     738   00:438E  47                  	ld      b,a                 ; B = Expanded slot in page 3
     739   00:438F  79                  	ld      a,c
     740   00:4390  D3 A8               	out     (0A8h),a            ; Slot : Main Slot, xx, xx, Main slot
     741   00:4392  3A FF FF            	ld      a,(0FFFFh)
     742   00:4395  2F                  	cpl
     743   00:4396  E6 FC               	and     0xFC
     744   00:4398  B0                  	or      b
     745   00:4399  32 FF FF            	ld      (0FFFFh),a          ; Expanded slot selected
     746   00:439C                      
     747   00:439C                      1:
     748   00:439C  7A                  	ld      a,d             ; A = Final value
     749   00:439D  D3 A8               	out     (0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     750   00:439F  C9                  	ret
     751   00:43A0                      	
     752   00:43A0                      
     753   00:43A0                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     754   00:43A0                      ;
     755   00:43A0                      ;   load tile sets and sprites
     756   00:43A0                      vram_init:
     757   00:43A0                      	setvdpwvram 0x1B80              ; sprites in the scorebar
     757   00:43A0  F3                >     di
     757   00:43A1                    >     _setvdpwvram value
     757   00:43A1                    >     if (value & 0xFF)
     757   00:43A1  3E 80             >         ld  a,value & 0xFF
     757   00:43A3                    >     else
     757   00:43A3                    ~         xor a
     757   00:43A3                    ~     endif
     757   00:43A3  D3 99             >     out (0x99),a
     757   00:43A5  3E 5B             >     ld  a,0x40 + (value/256)
     757   00:43A7  D3 99             >     out (0x99),a
     757   00:43A9  FB                >     ei
     758   00:43AA  21 00 A4            	ld  hl,scorebar_sat
     759   00:43AD  3E 03               	ld	a,:scorebar_sat
     760   00:43AF  CD 52 40            	call    write_256
     761   00:43B2                      
     762   00:43B2                      	setvdpwvram 0x1C00
     762   00:43B2  F3                >     di
     762   00:43B3                    >     _setvdpwvram value
     762   00:43B3                    >     if (value & 0xFF)
     762   00:43B3                    ~         ld  a,value & 0xFF
     762   00:43B3                    ~     else
     762   00:43B3  AF                >         xor a
     762   00:43B4                    >     endif
     762   00:43B4  D3 99             >     out (0x99),a
     762   00:43B6  3E 5C             >     ld  a,0x40 + (value/256)
     762   00:43B8  D3 99             >     out (0x99),a
     762   00:43BA  FB                >     ei
     763   00:43BB  21 00 A0            	ld  hl,tileset					; dummy tile set from basic rom
     764   00:43BE  3E 03               	ld	a,:tileset
     765   00:43C0  CD 52 40            	call    write_256
     766   00:43C3                      
     767   00:43C3                      	setvdpwvram 0x1800				; dummy PNT
     767   00:43C3  F3                >     di
     767   00:43C4                    >     _setvdpwvram value
     767   00:43C4                    >     if (value & 0xFF)
     767   00:43C4                    ~         ld  a,value & 0xFF
     767   00:43C4                    ~     else
     767   00:43C4  AF                >         xor a
     767   00:43C5                    >     endif
     767   00:43C5  D3 99             >     out (0x99),a
     767   00:43C7  3E 58             >     ld  a,0x40 + (value/256)
     767   00:43C9  D3 99             >     out (0x99),a
     767   00:43CB  FB                >     ei
     768   00:43CC  AF                  	xor a
     769   00:43CD  47                  	ld	b,a
     770   00:43CE  F6 80               1:	or 80h
     771   00:43D0  D3 98               	out (0x98),a
     772   00:43D2  3C                  	inc	a
     773   00:43D3  04                  	inc	b
     774   00:43D4  20 F8               	jr	nz,1b
     775   00:43D6                      
     776   00:43D6                      	; setvdpwvram 0x18E0 				; dummy PNT
     777   00:43D6                      	; ld	b,32
     778   00:43D6                      	; ld 	a,80h
     779   00:43D6                      ; 1:	out (0x98),a
     780   00:43D6                      	; dec b
     781   00:43D6                      	; jr	nz,1b
     782   00:43D6                      
     783   00:43D6                      	setvdpwvram 0x1BD0
     783   00:43D6  F3                >     di
     783   00:43D7                    >     _setvdpwvram value
     783   00:43D7                    >     if (value & 0xFF)
     783   00:43D7  3E D0             >         ld  a,value & 0xFF
     783   00:43D9                    >     else
     783   00:43D9                    ~         xor a
     783   00:43D9                    ~     endif
     783   00:43D9  D3 99             >     out (0x99),a
     783   00:43DB  3E 5B             >     ld  a,0x40 + (value/256)
     783   00:43DD  D3 99             >     out (0x99),a
     783   00:43DF  FB                >     ei
     784   00:43E0  06 10               	ld	b,16						; dummy colors
     785   00:43E2  AF                  	xor a
     786   00:43E3  D3 98               1:	out (0x98),a
     787   00:43E5  C6 10               	add	a,16
     788   00:43E7  05                  	dec	b
     789   00:43E8  20 F9               	jr	nz,1b
     790   00:43EA  C9                  	ret
     791   00:43EB                      
     792   00:43EB                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     793   00:43EB                      ; ROM initialisation
     794   00:43EB                      
     795   00:43EB                      initmain:
     796   00:43EB                      	
     797   00:43EB  CD 1B 40            	call _scr2				; screen 2
     798   00:43EE                      	
     799   00:43EE  CD 29 43            	call 	search_slotset	; now the first 32KB of the megarom are active
     800   00:43F1                      			
     801   00:43F1                      	;call	setrompage0		; 48K of rom are active - bios is excluded
     802   00:43F1                      	
     803   00:43F1                      	_setVdp 7,0
     803   00:43F1  3E 00             >     ld  a,value
     803   00:43F3  D3 99             >     out (0x99),a
     803   00:43F5  3E 87             >     ld  a,register + 0x80
     803   00:43F7  D3 99             >     out (0x99),a
     804   00:43F9  FB                  	ei
     805   00:43FA  CD 29 40            	call	set_sprites
     806   00:43FD  CD A0 43            	call 	vram_init		; set data in the top 3d of the screen
     807   00:4400                      	
     808   00:4400  CD 64 40            	call	initcommontiles		;	load common tiles
     809   00:4403                      	
     810   00:4403                      	; move meta map in ram
     811   00:4403  3E 06               	ld	a,:metamap
     812   00:4405  32 00 B0            	ld	(_bank4),a
     813   00:4408  01 C0 13            	ld	bc,LvlWidth*LvlHeigh
     814   00:440B  21 00 A0            	ld	hl,metamap
     815   00:440E  11 00 C0            	ld	de,buffer
     816   00:4411  ED B0               	ldir
     817   00:4413                      
     818   00:4413  21 00 80            	ld	hl,myisr
     819   00:4416  22 9B FD            	ld	(0xFD9A+1),hl
     820   00:4419  3E C3               	ld	a,0xC3
     821   00:441B  32 9A FD            	ld	(0xFD9A),a
     822   00:441E                      
     823   00:441E  21 00 00            	ld	hl,0
     824   00:4421  22 02 E0            	ld	(xmap),hl
     825   00:4424  22 04 E0            	ld	(ymap),hl
     826   00:4427  AF                  	xor a
     827   00:4428  32 06 E0            	ld	(dxmap),a
     828   00:442B  32 07 E0            	ld	(dymap),a
     829   00:442E  3C                  	inc	a
     830   00:442F  32 09 E0            	ld	(vpage),a
     831   00:4432  AF                  	xor a
     832   00:4433  32 0A E0            	ld	(hold),a
     833   00:4436                      	
     834   00:4436  CD 7A 45            	call	setphase
     835   00:4439                      	
     836   00:4439                      mainloop:
     837   00:4439                      
     838   00:4439  76                  	halt
     839   00:443A  3E 01               	ld	a,1
     840   00:443C  32 0A E0            	ld	(hold),a
     841   00:443F  CD B1 40            	call	setvramp		;	use phase to select the tileset loaded to page 1/0
     842   00:4442  AF                  	xor a
     843   00:4443  32 0A E0            	ld	(hold),a
     844   00:4446                      		
     845   00:4446  3A 09 E0            	ld	a,(vpage)
     846   00:4449  EE 01               	xor 1				; 	swap page
     847   00:444B  32 09 E0            	ld	(vpage),a			
     848   00:444E                      		
     849   00:444E  C3 39 44            	jp 	mainloop
     850   00:4451                      	
     851   00:4451                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     852   00:4451                      ;
     853   00:4451                      ; isr 
     854   00:4451                      ;	
     855   00:4451                      showscorebar:
     856   00:4451                      	_setVdp 0,0x00  ; 	screen 1
     856   00:4451  3E 00             >     ld  a,value
     856   00:4453  D3 99             >     out (0x99),a
     856   00:4455  3E 80             >     ld  a,register + 0x80
     856   00:4457  D3 99             >     out (0x99),a
     857   00:4459                      	_setVdp 4,0x03  ; 	PGT at 1800h (used from 0x1C00 to 0x1FFF, only 128 characters)
     857   00:4459  3E 03             >     ld  a,value
     857   00:445B  D3 99             >     out (0x99),a
     857   00:445D  3E 84             >     ld  a,register + 0x80
     857   00:445F  D3 99             >     out (0x99),a
     858   00:4461                      	_setVdp 3,0x6F  ; 	PCT at 1BC0h (used from 0x1BD0 to 0x1BDF, only 16 bytes)
     858   00:4461  3E 6F             >     ld  a,value
     858   00:4463  D3 99             >     out (0x99),a
     858   00:4465  3E 83             >     ld  a,register + 0x80
     858   00:4467  D3 99             >     out (0x99),a
     859   00:4469                      	_setVdp 5,0x37  ;   SAT at 1B80
     859   00:4469  3E 37             >     ld  a,value
     859   00:446B  D3 99             >     out (0x99),a
     859   00:446D  3E 85             >     ld  a,register + 0x80
     859   00:446F  D3 99             >     out (0x99),a
     860   00:4471                      	_setVdp 6,0x03  ;   SPT at 1800   (used from 0x1C00 to 0x1FFF  only 32 sprites 16x16)
     860   00:4471  3E 03             >     ld  a,value
     860   00:4473  D3 99             >     out (0x99),a
     860   00:4475  3E 86             >     ld  a,register + 0x80
     860   00:4477  D3 99             >     out (0x99),a
     861   00:4479                      
     862   00:4479  3A 0A E0            	ld	a,(hold)
     863   00:447C  A7                  	and a
     864   00:447D  CC A5 44            	call	z,payload
     865   00:4480                      	
     866   00:4480  DB 99               1:  in  a,(0x99)	; 	wait raster line
     867   00:4482  E6 5F               	and %01011111
     868   00:4484  FE 44               	cp  %01000100	; 	plane 4 =0x44
     869   00:4486  C2 80 44            	jp  nz,1b
     870   00:4489                      
     871   00:4489                      	_setVdp 0,0x02  ;	screen 2
     871   00:4489  3E 02             >     ld  a,value
     871   00:448B  D3 99             >     out (0x99),a
     871   00:448D  3E 80             >     ld  a,register + 0x80
     871   00:448F  D3 99             >     out (0x99),a
     872   00:4491  CD AF 44            	call	show_activepage
     873   00:4494                      	_setVdp 5,0x36  ;   SAT at 0x1b00
     873   00:4494  3E 36             >     ld  a,value
     873   00:4496  D3 99             >     out (0x99),a
     873   00:4498  3E 85             >     ld  a,register + 0x80
     873   00:449A  D3 99             >     out (0x99),a
     874   00:449C                      	_setVdp 6,0x07  ;   SPT at 0x3800   (64 sprites 16x16)
     874   00:449C  3E 07             >     ld  a,value
     874   00:449E  D3 99             >     out (0x99),a
     874   00:44A0  3E 86             >     ld  a,register + 0x80
     874   00:44A2  D3 99             >     out (0x99),a
     875   00:44A4  C9                  	ret 
     876   00:44A5                      
     877   00:44A5                      payload:
     878   00:44A5  CD 99 41            	call    plot_pnt		;	use phase to plot the correct PNT
     879   00:44A8  CD 2D 45            	call	sub_main		; 	set x,y
     880   00:44AB  CD 7A 45            	call	setphase		; 	compute new "phase"
     881   00:44AE  C9                  	ret
     882   00:44AF                      	
     883   00:44AF                      show_activepage:	
     884   00:44AF  3A 09 E0            	ld  a,(vpage)	
     885   00:44B2  A7                  	and a
     886   00:44B3  CA C7 44            	jp  z,.page0
     887   00:44B6                      .page1:				; 	page 1 active
     888   00:44B6                      	_setVdp 3,0x9F	; 	PCT at 0x2000	(hybrid)
     888   00:44B6  3E 9F             >     ld  a,value
     888   00:44B8  D3 99             >     out (0x99),a
     888   00:44BA  3E 83             >     ld  a,register + 0x80
     888   00:44BC  D3 99             >     out (0x99),a
     889   00:44BE                      	_setVdp 4,0x03	;	PGT at 0x0000	(regular: used 0x0800 0x1000)
     889   00:44BE  3E 03             >     ld  a,value
     889   00:44C0  D3 99             >     out (0x99),a
     889   00:44C2  3E 84             >     ld  a,register + 0x80
     889   00:44C4  D3 99             >     out (0x99),a
     890   00:44C6  C9                  	ret
     891   00:44C7                      .page0:				; 	page 0 active
     892   00:44C7                      	_setVdp 3,0x1F	; 	PCT at 0x0000	(hybrid)
     892   00:44C7  3E 1F             >     ld  a,value
     892   00:44C9  D3 99             >     out (0x99),a
     892   00:44CB  3E 83             >     ld  a,register + 0x80
     892   00:44CD  D3 99             >     out (0x99),a
     893   00:44CF                      	_setVdp 4,0x07	;	PGT at 0x2000	(regular: used 0x2800 0x3000)
     893   00:44CF  3E 07             >     ld  a,value
     893   00:44D1  D3 99             >     out (0x99),a
     893   00:44D3  3E 84             >     ld  a,register + 0x80
     893   00:44D5  D3 99             >     out (0x99),a
     894   00:44D7  C9                  	ret
     895   00:44D8                      	
     896   00:44D8                      dxdycontrol:
     897   00:44D8  7D                  	ld  a,l
     898   00:44D9  E6 80               	and 0x80    ; right
     899   00:44DB  20 0C               	jr  nz,1f
     900   00:44DD  3A 06 E0            	ld  a,(dxmap)
     901   00:44E0  FE 80               	cp  maxspeed        ; MAX SPEED
     902   00:44E2  28 05               	jr  z,1f
     903   00:44E4  C6 01               	add a,maxspeedstep
     904   00:44E6  32 06 E0            	ld  (dxmap),a
     905   00:44E9                      1:
     906   00:44E9  7D                  	ld  a,l
     907   00:44EA  E6 10               	and 0x10    ; left
     908   00:44EC  20 0C               	jr  nz,1f
     909   00:44EE  3A 06 E0            	ld  a,(dxmap)
     910   00:44F1  FE 80               	cp  -maxspeed       ; MAX SPEED
     911   00:44F3  28 05               	jr  z,1f
     912   00:44F5  C6 FF               	add a,-maxspeedstep
     913   00:44F7  32 06 E0            	ld  (dxmap),a
     914   00:44FA                      1:
     915   00:44FA                      	; y position
     916   00:44FA  7D                  	ld  a,l
     917   00:44FB  E6 20               	and 0x20    ; up
     918   00:44FD  20 0C               	jr  nz,1f
     919   00:44FF  3A 07 E0            	ld  a,(dymap)
     920   00:4502  FE 80               	cp  -maxspeed        ; MAX SPEED
     921   00:4504  28 05               	jr  z,1f
     922   00:4506  C6 FF               	add a,-maxspeedstep
     923   00:4508  32 07 E0            	ld  (dymap),a
     924   00:450B                      1:
     925   00:450B  7D                  	ld  a,l
     926   00:450C  E6 40               	and 0x40    ; down
     927   00:450E  20 0C               	jr  nz,1f
     928   00:4510  3A 07 E0            	ld  a,(dymap)
     929   00:4513  FE 80               	cp  maxspeed       ; MAX SPEED
     930   00:4515  28 05               	jr  z,1f
     931   00:4517  C6 01               	add a,maxspeedstep
     932   00:4519  32 07 E0            	ld  (dymap),a
     933   00:451C                      1:
     934   00:451C  C9                  	ret
     935   00:451D                      
     936   00:451D                      stopx:
     937   00:451D  AF                  	xor	a
     938   00:451E  32 06 E0            	ld  (dxmap),a
     939   00:4521  21 00 00            	ld	hl,0
     940   00:4524  C9                  	ret
     941   00:4525                      stopy:
     942   00:4525  AF                  	xor	a
     943   00:4526  32 07 E0            	ld  (dymap),a
     944   00:4529  21 00 00            	ld	hl,0
     945   00:452C  C9                  	ret
     946   00:452D                      
     947   00:452D                      sub_main:
     948   00:452D                      	; x speed control
     949   00:452D  1E 08               	ld  e,8
     950   00:452F  CD 10 40            	call    checkkbd
     951   00:4532  CD D8 44            	call	dxdycontrol
     952   00:4535                      
     953   00:4535  ED 5B 02 E0         	ld  de,(xmap)		; FP 4.4
     954   00:4539  3A 06 E0            	ld  a,(dxmap)
     955   00:453C  6F                  	ld  l,a
     956   00:453D  87                  	add a,a
     957   00:453E  9F                  	sbc a,a
     958   00:453F  67                  	ld  h,a
     959   00:4540  29 29 29 29         [4]	add	hl,hl
     960   00:4544  A7                  	and a
     961   00:4545  ED 5A               	adc hl,de
     962   00:4547  FC 1D 45            	call	m,stopx
     963   00:454A  11 C0 1F            	ld	de,(LvlWidth-32)*256-64
     964   00:454D  A7                  	and a
     965   00:454E  ED 52               	sbc	hl,de
     966   00:4550  F4 1D 45            	call	p,stopx
     967   00:4553  19                  	add	hl,de
     968   00:4554  22 02 E0            	ld  (xmap),hl
     969   00:4557                      
     970   00:4557  ED 5B 04 E0         	ld  de,(ymap)		; FP 4.4
     971   00:455B  3A 07 E0            	ld  a,(dymap)
     972   00:455E  6F                  	ld  l,a
     973   00:455F  87                  	add a,a
     974   00:4560  9F                  	sbc a,a
     975   00:4561  67                  	ld  h,a
     976   00:4562  29 29 29 29         [4]	add	hl,hl
     977   00:4566  A7                  	and	a
     978   00:4567  ED 5A               	adc hl,de
     979   00:4569  FC 25 45            	call	m,stopy
     980   00:456C  11 C0 3E            	ld	de,(LvlHeigh-16)*256-64
     981   00:456F  A7                  	and a
     982   00:4570  ED 52               	sbc	hl,de
     983   00:4572  F4 25 45            	call	p,stopy
     984   00:4575  19                  	add	hl,de
     985   00:4576  22 04 E0            	ld  (ymap),hl
     986   00:4579                      
     987   00:4579  C9                  	ret
     988   00:457A                      
     989   00:457A                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     990   00:457A                      setphase:
     991   00:457A  3A 02 E0            	ld	a,(xmap)	; xmap 8.8
     992   00:457D  07 07               [2]	rlca
     993   00:457F  E6 03               	and		%00000011
     994   00:4581  47                  	ld	b,a
     995   00:4582  3A 04 E0            	ld	a,(ymap)	; ymap 8.8
     996   00:4585  07 07 07 07         [4]	rlca
     997   00:4589  E6 0C               	and		%00001100
     998   00:458B  B0                  	or	b
     999   00:458C  32 08 E0            	ld	(phase),a
    1000   00:458F  C9                  	ret
    1001   00:4590                      
    1002   00:4590                      
    1003   00:4590                      

    LABELS
-------------------------------------------------
00:00000040   LvlWidth
00:0000004F   LvlHeigh
00:0000009F   CommonTiles
00:000000BE   TileSize11
00:000000D2   TileSize13
00:000000D6   TileSize15
00:000000D2   TileSize17
00:000000CE   TileSize31
00:000000FF   TileSize33
00:000000FF   TileSize35
00:000000FD   TileSize37
00:000000CC   TileSize51
00:000000FF   TileSize53
00:00000100   TileSize55
00:00000100   TileSize57
00:000000D2   TileSize71
00:000000FF   TileSize73
00:00000100   TileSize75
00:000000FF   TileSize77
03:0000A000   tileset
03:0000A400   scorebar_sat
04:0000A000   common_pattern
04:0000A4F8   common_color
05:0000A000   test_spt
05:0000AF50   test_sat
05:00000080 S counter
06:0000A000   metamap
07:0000A000   metavec
08:0000A000   patterns_base
08:0000A000   patterns11_13_15_17
09:0000A000   patterns31_33_35_37
0A:0000A000   patterns51_53_55_57
0B:0000A000   patterns71_73_75_77
0C:0000A000 X colors_base
0C:0000A000 X colors11_13_15_17
0D:0000A000 X colors31_33_35_37
0E:0000A000 X colors51_53_55_57
0F:0000A000 X colors71_73_75_77
0F:00005000   _bank1
0F:00007000   _bank2
0F:00009000   _bank3
0F:0000B000   _bank4
0F:00000080   maxspeed
0F:00000001   maxspeedstep
0F:0000C000   buffer
0F:0000E000   slotvar
0F:0000E001 X slotram
0F:0000E002   xmap
0F:0000E004   ymap
0F:0000E006   dxmap
0F:0000E007   dymap
0F:0000E008   phase
0F:0000E009   vpage
0F:0000E00A   hold
02:00008000   myisr
00:000000A9   i8255portb
00:000000AA   i8255portc
00:00004010   checkkbd
00:0000F3DF   _vdpReg
00:0000F3AE X LINL40
00:0000401B   _scr2
00:00004029   set_sprites
00:00004052   write_256
00:00004064   initcommontiles
00:000040B1   setvramp
00:000040BB   setvramp1
00:000040EE   setvramp0
00:00004121   getbank
00:0000412D   getaddr
00:0000413B   getsize
00:00004147   tilebank
00:00004157   tilesize
00:00004167   tileaddress
00:00004177   write_2k
00:00004199   plot_pnt
00:0000427D   plot_pnt.fast_loop
00:00000024   ENASLT
00:00000138   RSLREG
00:0000FCC1   EXPTBL
00:00004329   search_slotset
00:00004341   search_slot
00:00004362 X setrompage0
00:00004367 X recbios
00:0000436A   setslotpage0
00:000043A0   vram_init
00:000043EB   initmain
00:00004439   mainloop
00:00004451   showscorebar
00:000044A5   payload
00:000044AF   show_activepage
00:000044B6 X show_activepage.page1
00:000044C7   show_activepage.page0
00:000044D8   dxdycontrol
00:0000451D   stopx
00:00004525   stopy
00:0000452D   sub_main
00:0000457A   setphase


 Output: src\main128.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: Scrll8way128.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00002000  Used: 00000590

   Address   Length Align   Label
   00004000    1424         checkkbd
   00004590    6768       <empty>

 Page: 01
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 02
  Org: 00008000  Size: 00002000  Used: 00000016

   Address   Length Align   Label
   00008000      22         myisr
   00008016    8170       <empty>

 Page: 03
  Org: 0000A000  Size: 00002000  Used: 00000415

   Address   Length Align   Label
   0000A000    1045         tileset
   0000A415    7147       <empty>

 Page: 04
  Org: 0000A000  Size: 00002000  Used: 000009F0

   Address   Length Align   Label
   0000A000    2544         common_pattern
   0000A9F0    5648       <empty>

 Page: 05
  Org: 0000A000  Size: 00002000  Used: 00000FD0

   Address   Length Align   Label
   0000A000    4048         test_spt
   0000AFD0    4144       <empty>

 Page: 06
  Org: 0000A000  Size: 00002000  Used: 000013C0

   Address   Length Align   Label
   0000A000    5056         metamap
   0000B3C0    3136       <empty>

 Page: 07
  Org: 0000A000  Size: 00002000  Used: 00001000

   Address   Length Align   Label
   0000A000    4096         metavec
   0000B000    4096       <empty>

 Page: 08
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         patterns_base
   0000BB08    1272       <empty>

 Page: 09
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         patterns31_33_35_37
   0000BB08    1272       <empty>

 Page: 0A
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         patterns51_53_55_57
   0000BB08    1272       <empty>

 Page: 0B
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         patterns71_73_75_77
   0000BB08    1272       <empty>

 Page: 0C
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         colors_base
   0000BB08    1272       <empty>

 Page: 0D
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         colors31_33_35_37
   0000BB08    1272       <empty>

 Page: 0E
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         colors51_53_55_57
   0000BB08    1272       <empty>

 Page: 0F
  Org: 0000A000  Size: 00002000  Used: 00001B08

   Address   Length Align   Label
   0000A000    6920         colors71_73_75_77
   0000BB08    1272       <empty>
