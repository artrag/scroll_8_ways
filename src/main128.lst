Sjasm Z80 Assembler v0.42b8 - www.xl2s.tk             [2019.02.26 - 23:40:30]

src\main128.asm
Errors: 0

       1   00:0000                      
       2   00:0000                      
       3   00:0000                      	incdir data_bin/
       4   00:0000                      
       5   00:0000                      	include parameters.asm
       1.  00:0000  (00:0040)           LvlWidth:  equ 64
       2.  00:0000  (00:004F)           LvlHeigh:  equ 79
       3.  00:0000  (00:009E)           CommonTiles:  equ 158
       4.  00:0000  (00:00BD)           TileSize11:  equ 189
       5.  00:0000  (00:00D1)           TileSize13:  equ 209
       6.  00:0000  (00:00D5)           TileSize15:  equ 213
       7.  00:0000  (00:00D1)           TileSize17:  equ 209
       8.  00:0000  (00:00CD)           TileSize31:  equ 205
       9.  00:0000  (00:00FE)           TileSize33:  equ 254
      10.  00:0000  (00:00FE)           TileSize35:  equ 254
      11.  00:0000  (00:00FC)           TileSize37:  equ 252
      12.  00:0000  (00:00CB)           TileSize51:  equ 203
      13.  00:0000  (00:00FE)           TileSize53:  equ 254
      14.  00:0000  (00:00FF)           TileSize55:  equ 255
      15.  00:0000  (00:00FF)           TileSize57:  equ 255
      16.  00:0000  (00:00D1)           TileSize71:  equ 209
      17.  00:0000  (00:00FE)           TileSize73:  equ 254
      18.  00:0000  (00:00FF)           TileSize75:  equ 255
      19.  00:0000  (00:00FE)           TileSize77:  equ 254
       6   00:0000                      	
       7   00:0000                      	output Scrll8way128.rom
       8   00:0000                      
       9   00:0000                      	defpage	0,0x4000, 0x2000		; page 0 contains main code + far call routines
      10   00:0000                      	defpage 1,0x6000, 0x2000		; static code 
      11   00:0000                      	defpage	2,0x8000, 0x2000		; static code
      12   00:0000                      	
      13   00:0000                      	defpage	3,0xA000, 0x2000		; 
      14   00:0000                      	defpage	4,0xA000, 0x2000		; 
      15   00:0000                      	defpage	5,0xA000, 0x2000		; sprites
      16   00:0000                      	
      17   00:0000                      	defpage	6,0xA000, 0x2000		; meta map
      18   00:0000                      	defpage	7,0xA000, 0x2000		; metavec 
      19   00:0000                      	
      20   00:0000                      	defpage	 8,0xA000, 0x2000		; patterns_base
      21   00:0000                      	defpage	 9,0xA000, 0x2000		; patterns_base
      22   00:0000                      	defpage	10,0xA000, 0x2000		; patterns_base
      23   00:0000                      	defpage	11,0xA000, 0x2000		; patterns_base
      24   00:0000                      	defpage	12,0xA000, 0x2000		; colors_base
      25   00:0000                      	defpage	13,0xA000, 0x2000		; colors_base
      26   00:0000                      	defpage	14,0xA000, 0x2000		; colors_base
      27   00:0000                      	defpage	15,0xA000, 0x2000		; colors_base
      28   00:0000                      
      29   00:0000  (06)                	page 6	
      30   06:A000                      metamap:
      31   06:A000  (13C0)              	incbin metamap.bin
      32   06:B3C0                      
      33   06:B3C0  (07)                	page 7
      34   07:A000                      metavec:
      35   07:A000  (1000)              	incbin metavec.bin
      36   07:B000                      
      37   07:B000  (08)                	page 8
      38   08:A000                      patterns_base:	
      39   08:A000                      patterns11_13_15_17:
      40   08:A000  (2000)              	incbin testpat.bin,00*2*1024,4*2*1024	
      41   08:C000  (09)                	page 9
      42   09:A000                      patterns31_33_35_37:
      43   09:A000  (2000)              	incbin testpat.bin,04*2*1024,8*1024	
      44   09:C000  (0A)                	page 10
      45   0A:A000                      patterns51_53_55_57:
      46   0A:A000  (2000)              	incbin testpat.bin,08*2*1024,8*1024	
      47   0A:C000  (0B)                	page 11
      48   0B:A000                      patterns71_73_75_77:
      49   0B:A000  (2000)              	incbin testpat.bin,12*2*1024,8*1024	
      50   0B:C000                      	
      51   0B:C000  (0C)                	page 12
      52   0C:A000                      colors_base:
      53   0C:A000                      colors11_13_15_17:
      54   0C:A000  (2000)              	incbin testcol.bin,00*2*1024,4*2*1024	
      55   0C:C000  (0D)                	page 13
      56   0D:A000                      colors31_33_35_37:
      57   0D:A000  (2000)              	incbin testcol.bin,04*2*1024,8*1024	
      58   0D:C000  (0E)                	page 14
      59   0E:A000                      colors51_53_55_57:
      60   0E:A000  (2000)              	incbin testcol.bin,08*2*1024,8*1024	
      61   0E:C000  (0F)                	page 15
      62   0F:A000                      colors71_73_75_77:
      63   0F:A000  (2000)              	incbin testcol.bin,12*2*1024,8*1024	
      64   0F:C000                      
      65   0F:C000                      
      66   0F:C000                      
      67   0F:C000                      
      68   0F:C000                      	macro setVdp register,value       ; macro definition
      69   0F:C000                    < 	di
      70   0F:C000                    < 	ld	a,value
      71   0F:C000                    < 	out	(0x99),a
      72   0F:C000                    < 	ld	a,register
      73   0F:C000                    < 	or	0x80
      74   0F:C000                    < 	out	(0x99),a
      75   0F:C000                    < 	ei
      76   0F:C000                    < 	endmacro
      77   0F:C000                        
      78   0F:C000                        	macro setvdpwvram value
      79   0F:C000                    <   	di			
      80   0F:C000                    < 	if (value & 0xFF)
      81   0F:C000                    < 		ld	a,value & 0xFF
      82   0F:C000                    < 	else
      83   0F:C000                    < 		xor	a
      84   0F:C000                    < 	endif
      85   0F:C000                    < 	out (0x99),a
      86   0F:C000                    < 	ld	a,0x40 + (value/256)
      87   0F:C000                    < 	out (0x99),a
      88   0F:C000                    < 	ei
      89   0F:C000                    < 	endmacro
      90   0F:C000                      ; -----------------------------
      91   0F:C000                      ; smooth scroller demo
      92   0F:C000                      ; Trilobyte 2014
      93   0F:C000                      ; ------------------------------
      94   0F:C000                      
      95   0F:C000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      96   0F:C000                      ;
      97   0F:C000                      ;   Mapper Konami 5 (mapper +  scc)
      98   0F:C000                      ;
      99   0F:C000                      ; Bank 1: 4000h - 5FFFh
     100   0F:C000                      ; Bank 2: 6000h - 7FFFh
     101   0F:C000                      ; Bank 3: 8000h - 9FFFh
     102   0F:C000                      ; Bank 4: A000h - BFFFh
     103   0F:C000                      
     104   0F:C000                      ; Bank 1: 5000h - 57FFh (5000h used)
     105   0F:C000                      ; Bank 2: 7000h - 77FFh (7000h used)
     106   0F:C000                      ; Bank 3: 9000h - 97FFh (9000h used)
     107   0F:C000                      ; Bank 4: B000h - B7FFh (B000h used)
     108   0F:C000                      
     109   0F:C000                      
     110   0F:C000                      ; *** CONSTANTS ***
     111   0F:C000  (0F:5000)           _bank1			equ	0x5000
     112   0F:C000  (0F:7000)           _bank2			equ	0x7000
     113   0F:C000  (0F:9000)           _bank3			equ	0x9000
     114   0F:C000  (0F:B000)           _bank4			equ	0xB000
     115   0F:C000                      
     116   0F:C000  (0F:0000)           _PCT:			equ	0x0000
     117   0F:C000  (0F:2000)           _PGT:			equ	0x2000
     118   0F:C000                      
     119   0F:C000                      
     120   0F:C000                      ; -----------------------------
     121   0F:C000                      ; parameters
     122   0F:C000                      ; 
     123   0F:C000                      ;	LvlWidth:	equ	373
     124   0F:C000                      ;	nphase:		equ	4 
     125   0F:C000                      ;	xstep:		equ	2 
     126   0F:C000                      ;
     127   0F:C000                      
     128   0F:C000                      ;		
     129   0F:C000  (0F:0080)           maxspeed:   	equ 8*16
     130   0F:C000  (0F:0001)           maxspeedstep:	equ	1
     131   0F:C000                      ;
     132   0F:C000                      ;minspeed:	equ	1		i.e. 	1/16
     133   0F:C000                      
     134   0F:C000                      ; ------------------------------
     135   0F:C000                      
     136   0F:C000                      ; *** RAM ***
     137   0F:C000                      
     138   0F:C000  (C000)              	map 0xc000
     139   0F:C000                      
     140   0F:C000  (0F:C000)           buffer:			#8*1024
     141   0F:C000                      
     142   0F:C000                      
     143   0F:C000  (0F:E000)           slotvar:		#1
     144   0F:C000  (0F:E001)           slotram:       	#1
     145   0F:C000                      
     146   0F:C000  (0F:E002)           msxtype			#1
     147   0F:C000  (0F:E003)           palette			#1
     148   0F:C000                      
     149   0F:C000  (0F:E004)           vsf:			#1
     150   0F:C000  (0F:E005)           cnt:			#1
     151   0F:C000  (0F:E006)           muteflag:		#1
     152   0F:C000                      
     153   0F:C000  (0F:E007)           SLOT            #1
     154   0F:C000  (0F:E008)           PAGE1RAM        #1
     155   0F:C000  (0F:E009)           RAMSLOT         #1
     156   0F:C000                      
     157   0F:C000  (0F:E00A)           SCC				#1
     158   0F:C000  (0F:E00B)           SUB             #1
     159   0F:C000                      
     160   0F:C000  (0F:E00C)           xmap			#2		; FP 8.8
     161   0F:C000  (0F:E00E)           ymap			#2		; FP 8.8
     162   0F:C000                      
     163   0F:C000  (0F:E010)           dxmap           #1		; FP 4.4
     164   0F:C000  (0F:E011)           dymap           #1		; FP 4.4
     165   0F:C000                      
     166   0F:C000  (0F:E012)           phase			#1
     167   0F:C000                      
     168   0F:C000                      
     169   0F:C000  (0000)              	endmap
     170   0F:C000                      
     171   0F:C000                      
     172   0F:C000                      	
     173   0F:C000                      	
     174   0F:C000                      ; *** tile set data in rom ***
     175   0F:C000                      
     176   0F:C000                      
     177   0F:C000  (05)                	page 5
     178   05:A000                      test_spt:
     179   05:A000  (0F50)              	incbin spt.bin
     180   05:AF50                      
     181   05:AF50                      ;	place 32 sprites
     182   05:AF50                      test_sat:
     183   05:AF50  (05:0000)           counter:=0
     184   05:AF50                      	repeat	8
     185   05:AF50                    < 	repeat	4
     186   05:AF50                    < 	db	@@# * 24
     187   05:AF50                    < 	db	48+@# * 32+@@#*8
     188   05:AF50                    < 	db	6*4+(counter and %00001100)
     189   05:AF50                    < 	db	15
     190   05:AF50                    < counter:=counter+4
     191   05:AF50                    < 	endrepeat
     192   05:AF50                    < 	endrepeat
     192   05:AF50  00 30 18 0F 00 50 1C 0F 00 70 20 0F 00 90 24 0F 
     192   05:AF60  18 38 18 0F 18 58 1C 0F 18 78 20 0F 18 98 24 0F 
     192   05:AF70  30 40 18 0F 30 60 1C 0F 30 80 20 0F 30 A0 24 0F 
     192   05:AF80  48 48 18 0F 48 68 1C 0F 48 88 20 0F 48 A8 24 0F 
     192   05:AF90  60 50 18 0F 60 70 1C 0F 60 90 20 0F 60 B0 24 0F 
     192   05:AFA0  78 58 18 0F 78 78 1C 0F 78 98 20 0F 78 B8 24 0F 
     192   05:AFB0  90 60 18 0F 90 80 1C 0F 90 A0 20 0F 90 C0 24 0F 
     192   05:AFC0  A8 68 18 0F A8 88 1C 0F A8 A8 20 0F A8 C8 24 0F 
     193   05:AFD0                      ; ------------
     194   05:AFD0                      ; megarom header
     195   05:AFD0                      
     196   05:AFD0  (00)                	page 0
     197   00:4000                      	code page 0
     198   00:4000                      	
     199   00:4000                      	org	04000h
     200   00:4000  41 42               	db	041h,042h
     201   00:4002  C3 43               	dw	initmain
     202   00:4004                      	dz 	'TRI004'
     202   00:4004  54 52 49 30 30 34 00 
     203   00:400B  00 (5)              	ds	5
     204   00:4010                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     205   00:4010                      ;
     206   00:4010                      ; checkkbd: ckeck keyboard line
     207   00:4010                      ; in:  E = row
     208   00:4010                      ; out: L = bit pattern (1 = not pressed)
     209   00:4010                      ;
     210   00:4010                      ; row/bit|    7     6     5     4     3     2     1     0
     211   00:4010                      ; -------+--------------------------------------------------
     212   00:4010                      ;    0   |    7     6     5     4     3     2     1     0
     213   00:4010                      ;    1   |    ;     ]     [     \     =     -     9     8
     214   00:4010                      ;    2   |    B     A    ???    /     .     ,     '     `
     215   00:4010                      ;    3   |    J     I     H     G     F     E     D     C
     216   00:4010                      ;    4   |    R     Q     P     O     N     M     L     K
     217   00:4010                      ;    5   |    Z     Y     X     W     V     U     T     S
     218   00:4010                      ;    6   |   F3    F2    F1   CODE   CAP  GRAPH CTRL  SHIFT
     219   00:4010                      ;    7   |   RET   SEL   BS   STOP   TAB   ESC   F5    F4
     220   00:4010                      ;    8   |  RIGHT DOWN   UP   LEFT   DEL   INS  HOME  SPACE
     221   00:4010                      ;    9   |    4     3     2     1     0     /     +     *
     222   00:4010                      ;   10   |    .     ,     -     9     8     7     6     5
     223   00:4010                      ;   11   |                           NO          YES
     224   00:4010                      ;
     225   00:4010                      ;
     226   00:4010                      
     227   00:4010  (00:00A9)           i8255portb  equ 0a9h        ; keyboard column input
     228   00:4010  (00:00AA)           i8255portc  equ 0aah        ; leds, motor, cassette, kbd line
     229   00:4010                      
     230   00:4010                      checkkbd:
     231   00:4010  DB AA                   in  a,(i8255portc)
     232   00:4012  E6 F0                   and 011110000B          ; upper 4 bits contain info to preserve
     233   00:4014  B3                      or  e
     234   00:4015  D3 AA                   out (i8255portc),a
     235   00:4017  DB A9                   in  a,(i8255portb)
     236   00:4019  6F                      ld  l,a
     237   00:401A  C9                      ret
     238   00:401B                      
     239   00:401B                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     240   00:401B                      ; a = value
     241   00:401B                      ; e = register
     242   00:401B                      _setvdpreg:
     243   00:401B  F3                  	di
     244   00:401C  D3 99               	out (0x99),a
     245   00:401E  7B                  	ld	a,e
     246   00:401F  F6 80               	or	0x80
     247   00:4021  D3 99               	out (0x99),a
     248   00:4023  FB                  	ei
     249   00:4024  C9                  	ret
     250   00:4025                      
     251   00:4025                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     252   00:4025                      ; vdp access
     253   00:4025                      
     254   00:4025  (00:F3DF)           _vdpReg equ 0xF3DF
     255   00:4025  (00:F3AE)           LINL40	equ 0xF3AE
     256   00:4025                      
     257   00:4025                      ; e = screen mode
     258   00:4025                      _scr2:
     259   00:4025  3A E0 F3            	ld	a,(_vdpReg+1)
     260   00:4028  F6 02               	or 2
     261   00:402A  32 E0 F3            	ld	(_vdpReg+1),a
     262   00:402D                      	
     263   00:402D  3E 02               	ld	a,2
     264   00:402F  CD 5F 00            	call 0x005f
     265   00:4032                      	
     266   00:4032  C9                  	ret
     267   00:4033                      	
     268   00:4033                      ; set sprites
     269   00:4033                      
     270   00:4033                      set_sprites:
     271   00:4033  76                  	halt
     272   00:4034                      	setvdpwvram 0x3800
     272   00:4034  F3                >    di
     272   00:4035                    >  if (value & 0xFF)
     272   00:4035                    ~   ld a,value & 0xFF
     272   00:4035                    ~  else
     272   00:4035  AF                >   xor a
     272   00:4036                    >  endif
     272   00:4036  D3 99             >  out (0x99),a
     272   00:4038  3E 78             >  ld a,0x40 + (value/256)
     272   00:403A  D3 99             >  out (0x99),a
     272   00:403C  FB                >  ei
     273   00:403D  21 00 A0            	ld	hl,test_spt
     274   00:4040  3E 05               	ld	a,:test_spt
     275   00:4042  CD 5D 40            	call	write_256
     276   00:4045  76                  	halt
     277   00:4046                      	setvdpwvram 0x1B00
     277   00:4046  F3                >    di
     277   00:4047                    >  if (value & 0xFF)
     277   00:4047                    ~   ld a,value & 0xFF
     277   00:4047                    ~  else
     277   00:4047  AF                >   xor a
     277   00:4048                    >  endif
     277   00:4048  D3 99             >  out (0x99),a
     277   00:404A  3E 5B             >  ld a,0x40 + (value/256)
     277   00:404C  D3 99             >  out (0x99),a
     277   00:404E  FB                >  ei
     278   00:404F  21 50 AF            	ld	hl,test_sat
     279   00:4052  3E 05               	ld	a,:test_sat
     280   00:4054  32 00 B0            	ld	(_bank4),a	
     281   00:4057  01 98 80            	ld	bc,0x8098
     282   00:405A  ED B3               	otir
     283   00:405C  C9                  	ret
     284   00:405D                      
     285   00:405D                      write_256:
     286   00:405D  32 00 B0            	ld	(_bank4),a
     287   00:4060  01 98 00            	ld	bc,0x0098
     288   00:4063                      	repeat 8
     289   00:4063                    < 	otir
     290   00:4063                    < 	endrepeat
     290   00:4063  ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 
     291   00:4073  C9                  	ret
     292   00:4074                      
     293   00:4074                      cls:
     294   00:4074                      	setvdpwvram 0x1800
     294   00:4074  F3                >    di
     294   00:4075                    >  if (value & 0xFF)
     294   00:4075                    ~   ld a,value & 0xFF
     294   00:4075                    ~  else
     294   00:4075  AF                >   xor a
     294   00:4076                    >  endif
     294   00:4076  D3 99             >  out (0x99),a
     294   00:4078  3E 58             >  ld a,0x40 + (value/256)
     294   00:407A  D3 99             >  out (0x99),a
     294   00:407C  FB                >  ei
     295   00:407D  06 00               	ld	b,0
     296   00:407F  3E FF               	ld	a,255
     297   00:4081  D3 98               1:	out	(0x98),a
     298   00:4083  05                  	dec	b
     299   00:4084  20 FB               	jr	nz,1b
     300   00:4086                      	
     301   00:4086                      	setvdpwvram 0x2000
     301   00:4086  F3                >    di
     301   00:4087                    >  if (value & 0xFF)
     301   00:4087                    ~   ld a,value & 0xFF
     301   00:4087                    ~  else
     301   00:4087  AF                >   xor a
     301   00:4088                    >  endif
     301   00:4088  D3 99             >  out (0x99),a
     301   00:408A  3E 60             >  ld a,0x40 + (value/256)
     301   00:408C  D3 99             >  out (0x99),a
     301   00:408E  FB                >  ei
     302   00:408F  06 00               	ld	b,0
     303   00:4091  AF                  	xor	a
     304   00:4092                      [8]	call	1f
     304   00:4092  CD CF 40 CD CF 40 CD CF 40 CD CF 40 CD CF 40 CD 
     304   00:40A2  CF 40 CD CF 40 CD CF 40 
     305   00:40AA                      	setvdpwvram 0x0000
     305   00:40AA  F3                >    di
     305   00:40AB                    >  if (value & 0xFF)
     305   00:40AB                    ~   ld a,value & 0xFF
     305   00:40AB                    ~  else
     305   00:40AB  AF                >   xor a
     305   00:40AC                    >  endif
     305   00:40AC  D3 99             >  out (0x99),a
     305   00:40AE  3E 40             >  ld a,0x40 + (value/256)
     305   00:40B0  D3 99             >  out (0x99),a
     305   00:40B2  FB                >  ei
     306   00:40B3  06 00               	ld	b,0
     307   00:40B5  AF                  	xor	a
     308   00:40B6                      [8]	call	1f
     308   00:40B6  CD CF 40 CD CF 40 CD FB 41 CD FB 41 CD FB 41 CD 
     308   00:40C6  FB 41 CD FB 41 CD FB 41 
     309   00:40CE  C9                  	ret
     310   00:40CF                      
     311   00:40CF  D3 98               1:	out	(0x98),a
     312   00:40D1  05                  	dec	b
     313   00:40D2  20 FB               	jr	nz,1b
     314   00:40D4  C9                  	ret
     315   00:40D5                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     316   00:40D5                      ; Initialise the tiles common to all banks
     317   00:40D5                      ;
     318   00:40D5                      vraminit:
     319   00:40D5  3E 08               	ld	a,:patterns11_13_15_17
     320   00:40D7  32 00 B0            	ld (_bank4),a
     321   00:40DA  21 00 A0            	ld	hl,patterns_base
     322   00:40DD  3E 9E               	ld	a,CommonTiles
     323   00:40DF  11 00 08            	ld	de,0x0800 
     324   00:40E2  CD E4 41            	call write_2k
     325   00:40E5                      
     326   00:40E5  21 00 A0            	ld	hl,patterns_base
     327   00:40E8  3E 9E               	ld	a,CommonTiles
     328   00:40EA  11 00 10            	ld	de,0x1000 
     329   00:40ED  CD E4 41            	call write_2k
     330   00:40F0                      
     331   00:40F0  21 00 A0            	ld	hl,patterns_base
     332   00:40F3  3E 9E               	ld	a,CommonTiles
     333   00:40F5  11 00 28            	ld	de,0x2800 
     334   00:40F8  CD E4 41            	call write_2k
     335   00:40FB                      
     336   00:40FB  21 00 A0            	ld	hl,patterns_base
     337   00:40FE  3E 9E               	ld	a,CommonTiles
     338   00:4100  11 00 30            	ld	de,0x3000 
     339   00:4103  CD E4 41            	call write_2k
     340   00:4106                      
     341   00:4106  3E 0C               	ld	a,4+:patterns11_13_15_17			; colorbank = tilebank+4
     342   00:4108  32 00 B0            	ld (_bank4),a
     343   00:410B  21 00 A0            	ld	hl,patterns_base
     344   00:410E  3E 9E               	ld	a,CommonTiles
     345   00:4110  11 00 20            	ld	de,0x2000 
     346   00:4113  CD E4 41            	call write_2k
     347   00:4116  21 00 A0            	ld	hl,patterns_base
     348   00:4119  3E 9E               	ld	a,CommonTiles
     349   00:411B  11 00 00            	ld	de,0x0000 
     350   00:411E  CD E4 41            	call write_2k
     351   00:4121  C9                  	ret
     352   00:4122                      
     353   00:4122                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     354   00:4122                      ;	load tile sets: only differences are loaded
     355   00:4122                      ;	Note: rom space could be optimised storing common tiles only once in a separate bank  
     356   00:4122                      
     357   00:4122                      setvramp1:
     358   00:4122  CD 88 41            	call getbank	;->a 
     359   00:4125  32 00 B0            	ld (_bank4),a
     360   00:4128  CD 94 41            	call getaddr	;->hl
     361   00:412B  CD A6 41            	call getsize	;->a
     362   00:412E  11 F0 0C            	ld	de,0x0800 + 8*CommonTiles
     363   00:4131  CD E4 41            	call write_2k
     364   00:4134                      	
     365   00:4134  CD 94 41            	call getaddr	;->hl
     366   00:4137  CD A6 41            	call getsize	;->a
     367   00:413A  11 F0 14            	ld	de,0x1000 + 8*CommonTiles
     368   00:413D  CD E4 41            	call write_2k
     369   00:4140                      
     370   00:4140  CD 88 41            	call getbank	;->a 
     371   00:4143  C6 04               	add	a,4			; colorbank = tilebank+4
     372   00:4145  32 00 B0            	ld (_bank4),a
     373   00:4148  CD 94 41            	call getaddr	;->hl
     374   00:414B  CD A6 41            	call getsize	;->a
     375   00:414E  11 F0 24            	ld	de,0x2000 + 8*CommonTiles
     376   00:4151  CD E4 41            	call write_2k
     377   00:4154  C9                  	ret
     378   00:4155                      	
     379   00:4155                      setvramp0:
     380   00:4155  CD 88 41            	call getbank	;->a 
     381   00:4158  32 00 B0            	ld (_bank4),a
     382   00:415B  CD 94 41            	call getaddr	;->hl
     383   00:415E  CD A6 41            	call getsize	;->a
     384   00:4161  11 F0 2C            	ld	de,0x2800 + 8*CommonTiles
     385   00:4164  CD E4 41            	call write_2k
     386   00:4167                      	
     387   00:4167  CD 94 41            	call getaddr	;->hl
     388   00:416A  CD A6 41            	call getsize	;->a
     389   00:416D  11 F0 34            	ld	de,0x3000 + 8*CommonTiles
     390   00:4170  CD E4 41            	call write_2k
     391   00:4173                      
     392   00:4173  CD 88 41            	call getbank	;->a 
     393   00:4176  C6 04               	add	a,4			; colorbank = tilebank+4
     394   00:4178  32 00 B0            	ld (_bank4),a
     395   00:417B  CD 94 41            	call getaddr	;->hl
     396   00:417E  CD A6 41            	call getsize	;->a
     397   00:4181  11 F0 04            	ld	de,0x0000 + 8*CommonTiles
     398   00:4184  CD E4 41            	call write_2k
     399   00:4187  C9                  	ret
     400   00:4188                      	
     401   00:4188                      getbank:
     402   00:4188  ED 5B 12 E0         	ld	de,(phase)
     403   00:418C  21 B4 41            	ld	hl,tilebank
     404   00:418F  16 00               	ld	d,0
     405   00:4191  19                  	add	hl,de
     406   00:4192  7E                  	ld	a,(hl)
     407   00:4193  C9                  	ret
     408   00:4194                      getaddr:
     409   00:4194  ED 5B 12 E0         	ld	de,(phase)
     410   00:4198  21 D4 41            	ld	hl,tileaddress
     411   00:419B  16 00               	ld	d,0
     412   00:419D  19                  	add	hl,de
     413   00:419E  66                  	ld	h,(hl)
     414   00:419F  2E 00               	ld	l,0
     415   00:41A1  11 F0 04            	ld	de,8*CommonTiles
     416   00:41A4  19                  	add	hl,de
     417   00:41A5  C9                  	ret
     418   00:41A6                      getsize:
     419   00:41A6  E5                  	push	hl
     420   00:41A7  ED 5B 12 E0         	ld	de,(phase)
     421   00:41AB  21 C4 41            	ld	hl,tilesize
     422   00:41AE  16 00               	ld	d,0
     423   00:41B0  19                  	add	hl,de
     424   00:41B1  7E                  	ld	a,(hl)
     425   00:41B2  E1                  	pop	hl
     426   00:41B3  C9                  	ret
     427   00:41B4                      
     428   00:41B4                      	
     429   00:41B4                      	;	patternsxy
     430   00:41B4                      tilebank:
     431   00:41B4  08 08 08 08         	db	:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17
     432   00:41B8  09 09 09 09         	db	:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37
     433   00:41BC  0A 0A 0A 0A         	db	:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57
     434   00:41C0  0B 0B 0B 0B         	db	:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77
     435   00:41C4                      tilesize:	
     436   00:41C4  1F 33 37 33         	db	TileSize11-CommonTiles,TileSize13-CommonTiles,TileSize15-CommonTiles,TileSize17-CommonTiles
     437   00:41C8  2F 60 60 5E         	db	TileSize31-CommonTiles,TileSize33-CommonTiles,TileSize35-CommonTiles,TileSize37-CommonTiles
     438   00:41CC  2D 60 61 61         	db	TileSize51-CommonTiles,TileSize53-CommonTiles,TileSize55-CommonTiles,TileSize57-CommonTiles
     439   00:41D0  33 60 61 60         	db	TileSize71-CommonTiles,TileSize73-CommonTiles,TileSize75-CommonTiles,TileSize77-CommonTiles
     440   00:41D4                      tileaddress:	
     441   00:41D4  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     442   00:41D8  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     443   00:41DC  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     444   00:41E0  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     445   00:41E4                      	
     446   00:41E4                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     447   00:41E4                      ; write 2K while ints are active from hl to de
     448   00:41E4                      ; in: de vram address
     449   00:41E4                      ;     hl ram address
     450   00:41E4                      ;	   a counter of 8 bytes chunks	
     451   00:41E4                      write_2k:
     452   00:41E4  E5                  	push hl
     453   00:41E5  EB                  	ex	de,hl
     454   00:41E6  CB F4               	set	6,h
     455   00:41E8  0E 99               	ld	c,0x99
     456   00:41EA  11 08 00            	ld	de,8
     457   00:41ED  D9                  	exx
     458   00:41EE  E1                  	pop	hl		; ram source in HL'
     459   00:41EF  0E 98               	ld	c,0x98	; data port in c'
     460   00:41F1  F3                  2:	di
     461   00:41F2  D9                  	exx
     462   00:41F3  ED 69               	out (c),l
     463   00:41F5  ED 61               	out (c),h	;c = 0x99, HL with write setup bit set
     464   00:41F7  19                  	add hl,de	;de = 8
     465   00:41F8  D9                  	exx
     466   00:41F9  06 08               	ld b,8
     467   00:41FB  ED A3               1:	outi		;c' = 0x98
     468   00:41FD  C2 FB 41            	jp nz,1b
     469   00:4200  FB                  	ei
     470   00:4201  3D                  	dec a
     471   00:4202  C2 F1 41            	jp nz,2b
     472   00:4205  C9                  	ret
     473   00:4206                      	
     474   00:4206                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     475   00:4206                      ;	in xmap,ymap
     476   00:4206                      ;
     477   00:4206                      _plot_pnt:
     478   00:4206  3E 07               	ld	a,:metavec
     479   00:4208  32 00 B0            	ld	(_bank4),a
     480   00:420B                      
     481   00:420B  3A 12 E0            	ld	a,(phase)
     482   00:420E  C6 A0               	add	a,metavec/256
     483   00:4210  32 12 E0            	ld	(phase),a
     484   00:4213                      	
     485   00:4213  21 00 C0            	ld	hl,buffer	; meta map in ram
     486   00:4216                      	
     487   00:4216                      	
     488   00:4216  3A 0F E0            	ld	a,(ymap+1)	; ymap 8.8	
     489   00:4219  A7                  	and	a
     490   00:421A  28 07               	jr	z,1f
     491   00:421C  01 40 00            	ld	bc,LvlWidth
     492   00:421F  09                  2:	add	hl,bc
     493   00:4220  3D                  	dec a
     494   00:4221  20 FC               	jr	nz,2b
     495   00:4223                      1:
     496   00:4223  3A 0D E0            	ld	a,(xmap+1)	; xmap 8.8	
     497   00:4226  5F                  	ld	e,a
     498   00:4227  16 00               	ld	d,0
     499   00:4229  19                  	add	hl,de
     500   00:422A  EB                  	ex	de,hl
     501   00:422B                      	
     502   00:422B                      	setvdpwvram 0x1900
     502   00:422B  F3                >    di
     502   00:422C                    >  if (value & 0xFF)
     502   00:422C                    ~   ld a,value & 0xFF
     502   00:422C                    ~  else
     502   00:422C  AF                >   xor a
     502   00:422D                    >  endif
     502   00:422D  D3 99             >  out (0x99),a
     502   00:422F  3E 59             >  ld a,0x40 + (value/256)
     502   00:4231  D3 99             >  out (0x99),a
     502   00:4233  FB                >  ei
     503   00:4234  01 98 10            	ld	bc,0x1098
     504   00:4237  C5                  1:	push	bc
     505   00:4238                      	repeat 32
     506   00:4238                    < 	ld	a,(de)
     507   00:4238                    < 	ld	l,a
     508   00:4238                    < 	ld	a,(phase)
     509   00:4238                    < 	ld	h,a
     510   00:4238                    < 	outi         ; Send data pointed by HL to VDP port (reg.C preloaded 
     511   00:4238                    < 	inc	de
     512   00:4238                    < 	endrepeat
     512   00:4238  1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED 
     512   00:4248  A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 
     512   00:4258  67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 
     512   00:4268  12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 
     512   00:4278  6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 
     512   00:4288  13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 
     512   00:4298  ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 
     512   00:42A8  E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 
     512   00:42B8  3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 
     512   00:42C8  1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED 
     512   00:42D8  A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 
     512   00:42E8  67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 
     512   00:42F8  12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 
     512   00:4308  6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 
     512   00:4318  13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 
     512   00:4328  ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 
     512   00:4338  E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 
     512   00:4348  3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 
     513   00:4358                      	
     514   00:4358  21 20 00            	ld	hl,LvlWidth-32
     515   00:435B  19                  	add	hl,de
     516   00:435C  EB                  	ex	de,hl
     517   00:435D                      	
     518   00:435D  C1                  	pop	bc
     519   00:435E  05                  	dec b
     520   00:435F  C2 37 42            	jp nz,1b
     521   00:4362                      
     522   00:4362  C9                  	ret
     523   00:4363                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     524   00:4363                      
     525   00:4363                      ;          defb 0x02 ; Reg# 0 000000[M3][EV]
     526   00:4363                      ;          defb 0x62 ; Reg# 1 [4/16k][BLANK][IE][M1][M2]0[SIZE][MAG]
     527   00:4363                      ;          defb 0x06 ; Reg# 2 0000[NAME TABLE BASE ADDRESS]          = 1800h
     528   00:4363                      
     529   00:4363                      ;          defb 0x9F ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; hybrid mode for colors
     530   00:4363                      ;          defb 0xFF ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; regular mode for colors	
     531   00:4363                      
     532   00:4363                      ;          defb 0x1F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; hybrid mode for colors
     533   00:4363                      ;          defb 0x7F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; regular mode for colors	
     534   00:4363                      	  
     535   00:4363                      ;          defb 0x00 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; hybrid mode for patterns
     536   00:4363                      ;          defb 0x03 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; regular mode for patterns
     537   00:4363                      
     538   00:4363                      ;          defb 0x04 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; hybrid mode for patterns
     539   00:4363                      ;          defb 0x07 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; regular mode for patterns
     540   00:4363                                
     541   00:4363                      ;          defb 0x36 ; Reg# 5 0[SPRITE ATTRIBUTE TABLE BASE ADDRESS] = 1b00h
     542   00:4363                      ;          defb 0x07 ; Reg# 6 00000[SPRITE PTRN GNRTR BASE ADDRESS]  = 3800h
     543   00:4363                      ;          defb 0x01 ; Reg# 7 [TEXT COLOR 4bts][BACKDROP COLOR 4bts]
     544   00:4363                      
     545   00:4363                      
     546   00:4363                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     547   00:4363                      disp_page1:			; page 1 active
     548   00:4363                      	setVdp 3,0x9F	; 	colours at 0x2000	(hybrid)
     548   00:4363  F3                >  di
     548   00:4364  3E 9F             >  ld a,value
     548   00:4366  D3 99             >  out (0x99),a
     548   00:4368  3E 03             >  ld a,register
     548   00:436A  F6 80             >  or 0x80
     548   00:436C  D3 99             >  out (0x99),a
     548   00:436E  FB                >  ei
     549   00:436F                      	setVdp 4,0x03	;	patterns at 0x0000	(regular: used 0x0800 0x1000)
     549   00:436F  F3                >  di
     549   00:4370  3E 03             >  ld a,value
     549   00:4372  D3 99             >  out (0x99),a
     549   00:4374  3E 04             >  ld a,register
     549   00:4376  F6 80             >  or 0x80
     549   00:4378  D3 99             >  out (0x99),a
     549   00:437A  FB                >  ei
     550   00:437B  C9                  	ret
     551   00:437C                      
     552   00:437C                      disp_page0:			; page 0 active
     553   00:437C                      	setVdp 3,0x1F	; 	colours at 0x0000	(hybrid)
     553   00:437C  F3                >  di
     553   00:437D  3E 1F             >  ld a,value
     553   00:437F  D3 99             >  out (0x99),a
     553   00:4381  3E 03             >  ld a,register
     553   00:4383  F6 80             >  or 0x80
     553   00:4385  D3 99             >  out (0x99),a
     553   00:4387  FB                >  ei
     554   00:4388                      	setVdp 4,0x07	;	patterns at 0x2000	(regular: used 0x2800 0x3000)
     554   00:4388  F3                >  di
     554   00:4389  3E 07             >  ld a,value
     554   00:438B  D3 99             >  out (0x99),a
     554   00:438D  3E 04             >  ld a,register
     554   00:438F  F6 80             >  or 0x80
     554   00:4391  D3 99             >  out (0x99),a
     554   00:4393  FB                >  ei
     555   00:4394  C9                  	ret	
     556   00:4395                      
     557   00:4395                      
     558   00:4395                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     559   00:4395                      ; set pages and subslot
     560   00:4395                      ;
     561   00:4395                      rominit:
     562   00:4395  CD 38 01            	call    0x138
     563   00:4398  0F                  	rrca
     564   00:4399  0F                  	rrca
     565   00:439A  E6 03               	and     0x03
     566   00:439C  4F                  	ld      c,a
     567   00:439D  06 00               	ld      b,0
     568   00:439F  21 C1 FC            	ld      hl,0xfcc1
     569   00:43A2  09                  	add     hl,bc
     570   00:43A3  B6                  	or      (hl)
     571   00:43A4  47                  	ld      b,a
     572   00:43A5  23                  	inc     hl
     573   00:43A6  23                  	inc     hl
     574   00:43A7  23                  	inc     hl
     575   00:43A8  23                  	inc     hl
     576   00:43A9  7E                  	ld      a,(hl)
     577   00:43AA  E6 0C               	and     0x0c
     578   00:43AC  B0                  	or      b
     579   00:43AD                          
     580   00:43AD  26 80               	ld      h,0x80
     581   00:43AF  CD 24 00            	call    0x24  
     582   00:43B2                      	
     583   00:43B2                      	; now we have:
     584   00:43B2                      	; page 0 	- bios
     585   00:43B2                      	; page 1,2	- megarom mapper
     586   00:43B2                      	; page 3	- RAM
     587   00:43B2                      	
     588   00:43B2                      	; init megarom mapper
     589   00:43B2  AF                  	xor	a
     590   00:43B3  32 00 50            	ld	(_bank1),a
     591   00:43B6  3C                  	inc	a
     592   00:43B7  32 00 70            	ld	(_bank2),a
     593   00:43BA  3C                  	inc	a
     594   00:43BB  32 00 90            	ld	(_bank3),a
     595   00:43BE  3C                  	inc	a
     596   00:43BF  32 00 B0            	ld	(_bank4),a
     597   00:43C2                      
     598   00:43C2  C9                  	ret
     599   00:43C3                      	
     600   00:43C3                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     601   00:43C3                      ; ROM initialisation
     602   00:43C3                      
     603   00:43C3                      initmain:
     604   00:43C3                      
     605   00:43C3  FB                  	ei
     606   00:43C4  76                  	halt
     607   00:43C5  F3                  	di
     608   00:43C6  CD 95 43            	call 	rominit
     609   00:43C9                      	
     610   00:43C9                      	; now the first 32KB of the megarom are active
     611   00:43C9                      
     612   00:43C9                      	;clear 8K RAM
     613   00:43C9  01 FF 1F            	ld	bc,1024*8-1
     614   00:43CC  21 00 C0            	ld	hl,0xc000
     615   00:43CF  11 01 C0            	ld	de,0xc001
     616   00:43D2                      
     617   00:43D2  36 00               	ld	(hl),0
     618   00:43D4  ED B0               	ldir	
     619   00:43D6                      
     620   00:43D6                      	; screen 2
     621   00:43D6  CD 25 40            	call _scr2
     622   00:43D9                      	
     623   00:43D9  3E 00               	ld	a,0
     624   00:43DB  1E 07               	ld	e,7
     625   00:43DD  CD 1B 40            	call	_setvdpreg
     626   00:43E0                      	
     627   00:43E0  76                  	halt
     628   00:43E1  CD 74 40            	call	cls
     629   00:43E4  CD 33 40            	call	set_sprites
     630   00:43E7                      
     631   00:43E7                      	; move meta map in ram
     632   00:43E7  3E 06               	ld	a,:metamap
     633   00:43E9  32 00 B0            	ld	(_bank4),a
     634   00:43EC  01 C0 13            	ld	bc,LvlWidth*LvlHeigh
     635   00:43EF  21 00 A0            	ld	hl,metamap
     636   00:43F2  11 00 C0            	ld	de,buffer
     637   00:43F5  ED B0               	ldir	
     638   00:43F7                      	
     639   00:43F7  21 00 00            	ld	hl,0
     640   00:43FA  22 0C E0            	ld	(xmap),hl
     641   00:43FD  21 00 00            	ld	hl,0
     642   00:4400  22 0E E0            	ld	(ymap),hl
     643   00:4403  AF                  	xor a
     644   00:4404  32 10 E0            	ld	(dxmap),a
     645   00:4407  32 11 E0            	ld	(dymap),a
     646   00:440A                      
     647   00:440A  CD D5 40            	call	vraminit		; load common tiles
     648   00:440D                      
     649   00:440D                      mainloop:	
     650   00:440D                      	
     651   00:440D  76                  	halt 
     652   00:440E  CD 7C 43            	call 	disp_page0
     653   00:4411  CD 06 42            	call	_plot_pnt
     654   00:4414                      
     655   00:4414  CD 7F 44            	call	sub_main
     656   00:4417  CD 22 41            	call	setvramp1
     657   00:441A                      
     658   00:441A  76                  	halt 
     659   00:441B  CD 63 43            	call 	disp_page1
     660   00:441E  CD 06 42            	call	_plot_pnt
     661   00:4421                      
     662   00:4421  CD 7F 44            	call	sub_main
     663   00:4424  CD 55 41            	call	setvramp0
     664   00:4427                      	
     665   00:4427  C3 0D 44            	jp mainloop
     666   00:442A                      	
     667   00:442A                      dxdycontrol:	
     668   00:442A  7D                      ld  a,l
     669   00:442B  E6 80                   and 0x80    ; right
     670   00:442D  20 0C                   jr  nz,1f
     671   00:442F  3A 10 E0                ld  a,(dxmap)
     672   00:4432  FE 80                   cp  maxspeed        ; MAX SPEED
     673   00:4434  28 05                   jr  z,1f
     674   00:4436  C6 01                   add a,maxspeedstep
     675   00:4438  32 10 E0                ld  (dxmap),a
     676   00:443B                      1:
     677   00:443B  7D                      ld  a,l
     678   00:443C  E6 10                   and 0x10    ; left
     679   00:443E  20 0C                   jr  nz,1f
     680   00:4440  3A 10 E0                ld  a,(dxmap)
     681   00:4443  FE 80                   cp  -maxspeed       ; MAX SPEED
     682   00:4445  28 05                   jr  z,1f
     683   00:4447  C6 FF                   add a,-maxspeedstep
     684   00:4449  32 10 E0                ld  (dxmap),a
     685   00:444C                      1:
     686   00:444C                          ; y position
     687   00:444C  7D                      ld  a,l
     688   00:444D  E6 20                   and 0x20    ; up
     689   00:444F  20 0C                   jr  nz,1f
     690   00:4451  3A 11 E0                ld  a,(dymap)
     691   00:4454  FE 80                   cp  -maxspeed        ; MAX SPEED
     692   00:4456  28 05                   jr  z,1f
     693   00:4458  C6 FF                   add a,-maxspeedstep
     694   00:445A  32 11 E0                ld  (dymap),a
     695   00:445D                      1:
     696   00:445D  7D                      ld  a,l
     697   00:445E  E6 40                   and 0x40    ; down
     698   00:4460  20 0C                   jr  nz,1f
     699   00:4462  3A 11 E0                ld  a,(dymap)
     700   00:4465  FE 80                   cp  maxspeed       ; MAX SPEED
     701   00:4467  28 05                   jr  z,1f
     702   00:4469  C6 01                   add a,maxspeedstep
     703   00:446B  32 11 E0                ld  (dymap),a
     704   00:446E                      1:
     705   00:446E  C9                  	ret
     706   00:446F                      	
     707   00:446F                      stopx:	
     708   00:446F  AF                  	xor	a
     709   00:4470  32 10 E0            	ld  (dxmap),a
     710   00:4473  21 00 00            	ld	hl,0
     711   00:4476  C9                  	ret	
     712   00:4477                      stopy:
     713   00:4477  AF                  	xor	a
     714   00:4478  32 11 E0            	ld  (dymap),a
     715   00:447B  21 00 00            	ld	hl,0
     716   00:447E  C9                  	ret	
     717   00:447F                      	
     718   00:447F                      sub_main:
     719   00:447F                          ; x speed control
     720   00:447F  1E 08                   ld  e,8
     721   00:4481  CD 10 40                call    checkkbd
     722   00:4484  CD 2A 44            	call	dxdycontrol
     723   00:4487                      
     724   00:4487  ED 5B 0C E0             ld  de,(xmap)		; FP 4.4
     725   00:448B  3A 10 E0                ld  a,(dxmap)
     726   00:448E  6F                      ld  l,a
     727   00:448F  87                      add a,a
     728   00:4490  9F                      sbc a,a
     729   00:4491  67                      ld  h,a
     730   00:4492  29 29 29 29         [4]	add	hl,hl	
     731   00:4496  A7                  	and a
     732   00:4497  ED 5A                   adc hl,de
     733   00:4499  FC 6F 44            	call	m,stopx
     734   00:449C  11 C0 1F            	ld	de,(LvlWidth-32)*256-64
     735   00:449F  A7                  	and a	
     736   00:44A0  ED 52               	sbc	hl,de
     737   00:44A2  F4 6F 44            	call	p,stopx
     738   00:44A5  19                  	add	hl,de
     739   00:44A6  22 0C E0                ld  (xmap),hl
     740   00:44A9                      
     741   00:44A9  ED 5B 0E E0             ld  de,(ymap)		; FP 4.4
     742   00:44AD  3A 11 E0                ld  a,(dymap)
     743   00:44B0  6F                      ld  l,a
     744   00:44B1  87                      add a,a
     745   00:44B2  9F                      sbc a,a
     746   00:44B3  67                      ld  h,a
     747   00:44B4  29 29 29 29         [4]	add	hl,hl
     748   00:44B8  A7                  	and	a
     749   00:44B9  ED 5A                   adc hl,de
     750   00:44BB  FC 77 44            	call	m,stopy
     751   00:44BE  11 C0 3E            	ld	de,(LvlHeigh-16)*256-64
     752   00:44C1  A7                  	and a	
     753   00:44C2  ED 52               	sbc	hl,de
     754   00:44C4  F4 77 44            	call	p,stopy
     755   00:44C7  19                  	add	hl,de
     756   00:44C8  22 0E E0                ld  (ymap),hl
     757   00:44CB                      
     758   00:44CB                      
     759   00:44CB  3A 0C E0            	ld	a,(xmap)	; xmap 8.8	
     760   00:44CE  07 07               [2]	rlca
     761   00:44D0  E6 03               	and		%00000011
     762   00:44D2  47                  	ld	b,a
     763   00:44D3  3A 0E E0            	ld	a,(ymap)	; ymap 8.8	
     764   00:44D6  07 07 07 07         [4]	rlca
     765   00:44DA  E6 0C               	and		%00001100
     766   00:44DC  B0                  	or	b
     767   00:44DD  32 12 E0            	ld	(phase),a
     768   00:44E0  C9                  	ret
     769   00:44E1                      	
     770   00:44E1                      
     771   00:44E1                      
     772   00:44E1                      
     773   00:44E1                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     774   00:44E1                      ;	convert a VRAM position pointed by HL 
     775   00:44E1                      ;	in a VRAM address with offset in DE
     776   00:44E1                      ;	sets the VDP for write
     777   00:44E1                      ;	in:
     778   00:44E1                      ;		HL -> VRAM Position
     779   00:44E1                      ;		DE = VRAM Offset
     780   00:44E1                      ;	out:
     781   00:44E1                      ;		HL++
     782   00:44E1                      
     783   00:44E1                      setvramaddr:
     784   00:44E1  7E                  	ld	a,(hl)
     785   00:44E2  E5                  	push hl
     786   00:44E3  6F                  	ld	l,a
     787   00:44E4  26 00               	ld	h,0
     788   00:44E6  29                  	add	hl,hl
     789   00:44E7  29                  	add	hl,hl
     790   00:44E8  29                  	add	hl,hl
     791   00:44E9  19                  	add	hl,de
     792   00:44EA  7D                  	ld	a,l
     793   00:44EB  F3                  	di
     794   00:44EC  D3 99               	out	(0x99),a
     795   00:44EE  7C                  	ld	a,h
     796   00:44EF  F6 40               	or	0x40
     797   00:44F1  D3 99               	out	(0x99),a
     798   00:44F3  FB                  	ei
     799   00:44F4  E1                  	pop	hl
     800   00:44F5  23                  	inc	hl
     801   00:44F6  C9                  	ret
     802   00:44F7                      	
     803   00:44F7                      
     804   00:44F7                      		
     805   00:44F7                      	

    LABELS
-------------------------------------------------
00:00000040   LvlWidth
00:0000004F   LvlHeigh
00:0000009E   CommonTiles
00:000000BD   TileSize11
00:000000D1   TileSize13
00:000000D5   TileSize15
00:000000D1   TileSize17
00:000000CD   TileSize31
00:000000FE   TileSize33
00:000000FE   TileSize35
00:000000FC   TileSize37
00:000000CB   TileSize51
00:000000FE   TileSize53
00:000000FF   TileSize55
00:000000FF   TileSize57
00:000000D1   TileSize71
00:000000FE   TileSize73
00:000000FF   TileSize75
00:000000FE   TileSize77
06:0000A000   metamap
07:0000A000   metavec
08:0000A000   patterns_base
08:0000A000   patterns11_13_15_17
09:0000A000   patterns31_33_35_37
0A:0000A000   patterns51_53_55_57
0B:0000A000   patterns71_73_75_77
0C:0000A000 X colors_base
0C:0000A000 X colors11_13_15_17
0D:0000A000 X colors31_33_35_37
0E:0000A000 X colors51_53_55_57
0F:0000A000 X colors71_73_75_77
0F:00005000   _bank1
0F:00007000   _bank2
0F:00009000   _bank3
0F:0000B000   _bank4
0F:00000000 X _PCT
0F:00002000 X _PGT
0F:00000080   maxspeed
0F:00000001   maxspeedstep
0F:0000C000   buffer
0F:0000E000 X slotvar
0F:0000E001 X slotram
0F:0000E002 X msxtype
0F:0000E003 X palette
0F:0000E004 X vsf
0F:0000E005 X cnt
0F:0000E006 X muteflag
0F:0000E007 X SLOT
0F:0000E008 X PAGE1RAM
0F:0000E009 X RAMSLOT
0F:0000E00A X SCC
0F:0000E00B X SUB
0F:0000E00C   xmap
0F:0000E00E   ymap
0F:0000E010   dxmap
0F:0000E011   dymap
0F:0000E012   phase
05:0000A000   test_spt
05:0000AF50   test_sat
05:00000080 S counter
00:000000A9   i8255portb
00:000000AA   i8255portc
00:00004010   checkkbd
00:0000401B   _setvdpreg
00:0000F3DF   _vdpReg
00:0000F3AE X LINL40
00:00004025   _scr2
00:00004033   set_sprites
00:0000405D   write_256
00:00004074   cls
00:000040D5   vraminit
00:00004122   setvramp1
00:00004155   setvramp0
00:00004188   getbank
00:00004194   getaddr
00:000041A6   getsize
00:000041B4   tilebank
00:000041C4   tilesize
00:000041D4   tileaddress
00:000041E4   write_2k
00:00004206   _plot_pnt
00:00004363   disp_page1
00:0000437C   disp_page0
00:00004395   rominit
00:000043C3   initmain
00:0000440D   mainloop
00:0000442A   dxdycontrol
00:0000446F   stopx
00:00004477   stopy
00:0000447F   sub_main
00:000044E1 X setvramaddr


 Output: src\main128.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: Scrll8way128.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00002000  Used: 000004F7

   Address   Length Align   Label
   00004000    1271         checkkbd
   000044F7    6921       <empty>

 Page: 01
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 02
  Org: 00008000  Size: 00002000  Used: 00000000

   00008000    8192       <empty>

 Page: 03
  Org: 0000A000  Size: 00002000  Used: 00000000

   0000A000    8192       <empty>

 Page: 04
  Org: 0000A000  Size: 00002000  Used: 00000000

   0000A000    8192       <empty>

 Page: 05
  Org: 0000A000  Size: 00002000  Used: 00000FD0

   Address   Length Align   Label
   0000A000    4048         test_spt
   0000AFD0    4144       <empty>

 Page: 06
  Org: 0000A000  Size: 00002000  Used: 000013C0

   Address   Length Align   Label
   0000A000    5056         metamap
   0000B3C0    3136       <empty>

 Page: 07
  Org: 0000A000  Size: 00002000  Used: 00001000

   Address   Length Align   Label
   0000A000    4096         metavec
   0000B000    4096       <empty>

 Page: 08
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         patterns_base

 Page: 09
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         patterns31_33_35_37

 Page: 0A
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         patterns51_53_55_57

 Page: 0B
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         patterns71_73_75_77

 Page: 0C
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         colors_base

 Page: 0D
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         colors31_33_35_37

 Page: 0E
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         colors51_53_55_57

 Page: 0F
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         colors71_73_75_77
