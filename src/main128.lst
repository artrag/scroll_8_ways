Sjasm Z80 Assembler v0.42b8 - www.xl2s.tk             [2019.02.27 - 08:21:15]

src\main128.asm
Errors: 0

       1   00:0000                      
       2   00:0000                      
       3   00:0000                      	incdir data_bin/
       4   00:0000                      
       5   00:0000                      	include parameters.asm
       1.  00:0000  (00:0040)           LvlWidth:  equ 64
       2.  00:0000  (00:004F)           LvlHeigh:  equ 79
       3.  00:0000  (00:009E)           CommonTiles:  equ 158
       4.  00:0000  (00:00BD)           TileSize11:  equ 189
       5.  00:0000  (00:00D1)           TileSize13:  equ 209
       6.  00:0000  (00:00D5)           TileSize15:  equ 213
       7.  00:0000  (00:00D1)           TileSize17:  equ 209
       8.  00:0000  (00:00CD)           TileSize31:  equ 205
       9.  00:0000  (00:00FE)           TileSize33:  equ 254
      10.  00:0000  (00:00FE)           TileSize35:  equ 254
      11.  00:0000  (00:00FC)           TileSize37:  equ 252
      12.  00:0000  (00:00CB)           TileSize51:  equ 203
      13.  00:0000  (00:00FE)           TileSize53:  equ 254
      14.  00:0000  (00:00FF)           TileSize55:  equ 255
      15.  00:0000  (00:00FF)           TileSize57:  equ 255
      16.  00:0000  (00:00D1)           TileSize71:  equ 209
      17.  00:0000  (00:00FE)           TileSize73:  equ 254
      18.  00:0000  (00:00FF)           TileSize75:  equ 255
      19.  00:0000  (00:00FE)           TileSize77:  equ 254
       6   00:0000                      
       7   00:0000                      	output Scrll8way128.rom
       8   00:0000                      
       9   00:0000                      	defpage	0,0x4000, 0x2000		; page 0 contains main code + far call routines
      10   00:0000                      	defpage 1,0x6000, 0x2000		; static code
      11   00:0000                      	defpage	2,0x8000, 0x2000		; static code
      12   00:0000                      
      13   00:0000                      	defpage	3,0xA000, 0x2000		;
      14   00:0000                      	defpage	4,0xA000, 0x2000		;
      15   00:0000                      	defpage	5,0xA000, 0x2000		; sprites
      16   00:0000                      
      17   00:0000                      	defpage	6,0xA000, 0x2000		; meta map
      18   00:0000                      	defpage	7,0xA000, 0x2000		; metavec
      19   00:0000                      
      20   00:0000                      	defpage	 8,0xA000, 0x2000		; patterns_base
      21   00:0000                      	defpage	 9,0xA000, 0x2000		; patterns_base
      22   00:0000                      	defpage	10,0xA000, 0x2000		; patterns_base
      23   00:0000                      	defpage	11,0xA000, 0x2000		; patterns_base
      24   00:0000                      	defpage	12,0xA000, 0x2000		; colors_base
      25   00:0000                      	defpage	13,0xA000, 0x2000		; colors_base
      26   00:0000                      	defpage	14,0xA000, 0x2000		; colors_base
      27   00:0000                      	defpage	15,0xA000, 0x2000		; colors_base
      28   00:0000                      
      29   00:0000                      
      30   00:0000                      
      31   00:0000                      ; *** tile set data in rom ***
      32   00:0000  (04)                	page 4
      33   04:A000                      common_pattern:
      34   04:A000  (04F0)              	incbin testpat.bin,0,CommonTiles*8
      35   04:A4F0                      common_color:
      36   04:A4F0  (04F0)              	incbin testcol.bin,0,CommonTiles*8
      37   04:A9E0                      
      38   04:A9E0  (05)                	page 5
      39   05:A000                      test_spt:
      40   05:A000  (0F50)              	incbin spt.bin
      41   05:AF50                      ;	place 32 sprites
      42   05:AF50                      test_sat:
      43   05:AF50  (05:0000)           counter:=0
      44   05:AF50                      	repeat	8
      45   05:AF50                    < 	repeat	4
      46   05:AF50                    < 	db	@@# * 24
      47   05:AF50                    < 	db	48+@# * 32+@@#*8
      48   05:AF50                    < 	db	6*4+(counter and %00001100)
      49   05:AF50                    < 	db	15
      50   05:AF50                    < counter:=counter+4
      51   05:AF50                    < 	endrepeat
      52   05:AF50                    < 	endrepeat
      52   05:AF50  00 30 18 0F 00 50 1C 0F 00 70 20 0F 00 90 24 0F 
      52   05:AF60  18 38 18 0F 18 58 1C 0F 18 78 20 0F 18 98 24 0F 
      52   05:AF70  30 40 18 0F 30 60 1C 0F 30 80 20 0F 30 A0 24 0F 
      52   05:AF80  48 48 18 0F 48 68 1C 0F 48 88 20 0F 48 A8 24 0F 
      52   05:AF90  60 50 18 0F 60 70 1C 0F 60 90 20 0F 60 B0 24 0F 
      52   05:AFA0  78 58 18 0F 78 78 1C 0F 78 98 20 0F 78 B8 24 0F 
      52   05:AFB0  90 60 18 0F 90 80 1C 0F 90 A0 20 0F 90 C0 24 0F 
      52   05:AFC0  A8 68 18 0F A8 88 1C 0F A8 A8 20 0F A8 C8 24 0F 
      53   05:AFD0                      
      54   05:AFD0  (06)                	page 6
      55   06:A000                      metamap:
      56   06:A000  (13C0)              	incbin metamap.bin
      57   06:B3C0                      
      58   06:B3C0  (07)                	page 7
      59   07:A000                      metavec:
      60   07:A000  (1000)              	incbin metavec.bin
      61   07:B000                      
      62   07:B000  (08)                	page 8
      63   08:A000                      patterns_base:
      64   08:A000                      patterns11_13_15_17:
      65   08:A000  (1B10)              	incbin testpat.bin,00*2*1024+CommonTiles*8,4*2*1024-CommonTiles*8
      66   08:BB10  (09)                	page 9
      67   09:A000                      patterns31_33_35_37:
      68   09:A000  (1B10)              	incbin testpat.bin,04*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      69   09:BB10  (0A)                	page 10
      70   0A:A000                      patterns51_53_55_57:
      71   0A:A000  (1B10)              	incbin testpat.bin,08*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      72   0A:BB10  (0B)                	page 11
      73   0B:A000                      patterns71_73_75_77:
      74   0B:A000  (1B10)              	incbin testpat.bin,12*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      75   0B:BB10                      
      76   0B:BB10  (0C)                	page 12
      77   0C:A000                      colors_base:
      78   0C:A000                      colors11_13_15_17:
      79   0C:A000  (1B10)              	incbin testcol.bin,00*2*1024+CommonTiles*8,4*2*1024-CommonTiles*8
      80   0C:BB10  (0D)                	page 13
      81   0D:A000                      colors31_33_35_37:
      82   0D:A000  (1B10)              	incbin testcol.bin,04*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      83   0D:BB10  (0E)                	page 14
      84   0E:A000                      colors51_53_55_57:
      85   0E:A000  (1B10)              	incbin testcol.bin,08*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      86   0E:BB10  (0F)                	page 15
      87   0F:A000                      colors71_73_75_77:
      88   0F:A000  (1B10)              	incbin testcol.bin,12*2*1024+CommonTiles*8,8*1024-CommonTiles*8
      89   0F:BB10                      
      90   0F:BB10                      
      91   0F:BB10                      
      92   0F:BB10                      
      93   0F:BB10                      	macro setVdp register,value       ; macro definition
      94   0F:BB10                    < 	di
      95   0F:BB10                    < 	ld	a,value
      96   0F:BB10                    < 	out	(0x99),a
      97   0F:BB10                    < 	ld	a,register
      98   0F:BB10                    < 	or	0x80
      99   0F:BB10                    < 	out	(0x99),a
     100   0F:BB10                    < 	ei
     101   0F:BB10                    < 	endmacro
     102   0F:BB10                      
     103   0F:BB10                      	macro setvdpwvram value
     104   0F:BB10                    < 	di
     105   0F:BB10                    < 	if (value & 0xFF)
     106   0F:BB10                    < 		ld	a,value & 0xFF
     107   0F:BB10                    < 	else
     108   0F:BB10                    < 		xor	a
     109   0F:BB10                    < 	endif
     110   0F:BB10                    < 	out (0x99),a
     111   0F:BB10                    < 	ld	a,0x40 + (value/256)
     112   0F:BB10                    < 	out (0x99),a
     113   0F:BB10                    < 	ei
     114   0F:BB10                    < 	endmacro
     115   0F:BB10                      ; -----------------------------
     116   0F:BB10                      ; smooth scroller demo
     117   0F:BB10                      ; Trilobyte 2014
     118   0F:BB10                      ; ------------------------------
     119   0F:BB10                      
     120   0F:BB10                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     121   0F:BB10                      ;
     122   0F:BB10                      ;   Mapper Konami 5 (mapper +  scc)
     123   0F:BB10                      ;
     124   0F:BB10                      ; Bank 1: 4000h - 5FFFh
     125   0F:BB10                      ; Bank 2: 6000h - 7FFFh
     126   0F:BB10                      ; Bank 3: 8000h - 9FFFh
     127   0F:BB10                      ; Bank 4: A000h - BFFFh
     128   0F:BB10                      
     129   0F:BB10                      ; Bank 1: 5000h - 57FFh (5000h used)
     130   0F:BB10                      ; Bank 2: 7000h - 77FFh (7000h used)
     131   0F:BB10                      ; Bank 3: 9000h - 97FFh (9000h used)
     132   0F:BB10                      ; Bank 4: B000h - B7FFh (B000h used)
     133   0F:BB10                      
     134   0F:BB10                      
     135   0F:BB10                      ; *** CONSTANTS ***
     136   0F:BB10  (0F:5000)           _bank1			equ	0x5000
     137   0F:BB10  (0F:7000)           _bank2			equ	0x7000
     138   0F:BB10  (0F:9000)           _bank3			equ	0x9000
     139   0F:BB10  (0F:B000)           _bank4			equ	0xB000
     140   0F:BB10                      
     141   0F:BB10  (0F:0000)           _PCT:			equ	0x0000
     142   0F:BB10  (0F:2000)           _PGT:			equ	0x2000
     143   0F:BB10                      
     144   0F:BB10                      
     145   0F:BB10                      ; -----------------------------
     146   0F:BB10                      ; parameters
     147   0F:BB10                      ;
     148   0F:BB10                      ;	LvlWidth:	equ	373
     149   0F:BB10                      ;	nphase:		equ	4
     150   0F:BB10                      ;	xstep:		equ	2
     151   0F:BB10                      ;
     152   0F:BB10                      
     153   0F:BB10                      ;
     154   0F:BB10  (0F:0080)           maxspeed:   	equ 8*16
     155   0F:BB10  (0F:0001)           maxspeedstep:	equ	1
     156   0F:BB10                      ;
     157   0F:BB10                      ;minspeed:	equ	1		i.e. 	1/16
     158   0F:BB10                      
     159   0F:BB10                      ; ------------------------------
     160   0F:BB10                      
     161   0F:BB10                      ; *** RAM ***
     162   0F:BB10                      
     163   0F:BB10  (C000)              	map 0xc000
     164   0F:BB10                      
     165   0F:BB10  (0F:C000)           buffer:			#8*1024
     166   0F:BB10                      
     167   0F:BB10                      
     168   0F:BB10  (0F:E000)           slotvar:		#1
     169   0F:BB10  (0F:E001)           slotram:       	#1
     170   0F:BB10                      
     171   0F:BB10  (0F:E002)           msxtype			#1
     172   0F:BB10  (0F:E003)           palette			#1
     173   0F:BB10                      
     174   0F:BB10  (0F:E004)           vsf:			#1
     175   0F:BB10  (0F:E005)           cnt:			#1
     176   0F:BB10  (0F:E006)           muteflag:		#1
     177   0F:BB10                      
     178   0F:BB10  (0F:E007)           SLOT            #1
     179   0F:BB10  (0F:E008)           PAGE1RAM        #1
     180   0F:BB10  (0F:E009)           RAMSLOT         #1
     181   0F:BB10                      
     182   0F:BB10  (0F:E00A)           SCC				#1
     183   0F:BB10  (0F:E00B)           SUB             #1
     184   0F:BB10                      
     185   0F:BB10  (0F:E00C)           xmap			#2		; FP 8.8
     186   0F:BB10  (0F:E00E)           ymap			#2		; FP 8.8
     187   0F:BB10                      
     188   0F:BB10  (0F:E010)           dxmap           #1		; FP 4.4
     189   0F:BB10  (0F:E011)           dymap           #1		; FP 4.4
     190   0F:BB10                      
     191   0F:BB10  (0F:E012)           phase			#1
     192   0F:BB10                      
     193   0F:BB10                      
     194   0F:BB10  (0000)              	endmap
     195   0F:BB10                      
     196   0F:BB10                      
     197   0F:BB10                      
     198   0F:BB10                      ; ------------
     199   0F:BB10                      ; megarom header
     200   0F:BB10                      
     201   0F:BB10  (00)                	page 0
     202   00:4000                      	code page 0
     203   00:4000                      
     204   00:4000                      	org	04000h
     205   00:4000  41 42               	db	041h,042h
     206   00:4002  BF 43               	dw	initmain
     207   00:4004                      	dz 	'TRI004'
     207   00:4004  54 52 49 30 30 34 00 
     208   00:400B  00 (5)              	ds	5
     209   00:4010                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     210   00:4010                      ;
     211   00:4010                      ; checkkbd: ckeck keyboard line
     212   00:4010                      ; in:  E = row
     213   00:4010                      ; out: L = bit pattern (1 = not pressed)
     214   00:4010                      ;
     215   00:4010                      ; row/bit|    7     6     5     4     3     2     1     0
     216   00:4010                      ; -------+--------------------------------------------------
     217   00:4010                      ;    0   |    7     6     5     4     3     2     1     0
     218   00:4010                      ;    1   |    ;     ]     [     \     =     -     9     8
     219   00:4010                      ;    2   |    B     A    ???    /     .     ,     '     `
     220   00:4010                      ;    3   |    J     I     H     G     F     E     D     C
     221   00:4010                      ;    4   |    R     Q     P     O     N     M     L     K
     222   00:4010                      ;    5   |    Z     Y     X     W     V     U     T     S
     223   00:4010                      ;    6   |   F3    F2    F1   CODE   CAP  GRAPH CTRL  SHIFT
     224   00:4010                      ;    7   |   RET   SEL   BS   STOP   TAB   ESC   F5    F4
     225   00:4010                      ;    8   |  RIGHT DOWN   UP   LEFT   DEL   INS  HOME  SPACE
     226   00:4010                      ;    9   |    4     3     2     1     0     /     +     *
     227   00:4010                      ;   10   |    .     ,     -     9     8     7     6     5
     228   00:4010                      ;   11   |                           NO          YES
     229   00:4010                      ;
     230   00:4010                      ;
     231   00:4010                      
     232   00:4010  (00:00A9)           i8255portb  equ 0a9h        ; keyboard column input
     233   00:4010  (00:00AA)           i8255portc  equ 0aah        ; leds, motor, cassette, kbd line
     234   00:4010                      
     235   00:4010                      checkkbd:
     236   00:4010  DB AA               	in  a,(i8255portc)
     237   00:4012  E6 F0               	and 011110000B          ; upper 4 bits contain info to preserve
     238   00:4014  B3                  	or  e
     239   00:4015  D3 AA               	out (i8255portc),a
     240   00:4017  DB A9               	in  a,(i8255portb)
     241   00:4019  6F                  	ld  l,a
     242   00:401A  C9                  	ret
     243   00:401B                      
     244   00:401B                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     245   00:401B                      ; a = value
     246   00:401B                      ; e = register
     247   00:401B                      _setvdpreg:
     248   00:401B  F3                  	di
     249   00:401C  D3 99               	out (0x99),a
     250   00:401E  7B                  	ld	a,e
     251   00:401F  F6 80               	or	0x80
     252   00:4021  D3 99               	out (0x99),a
     253   00:4023  FB                  	ei
     254   00:4024  C9                  	ret
     255   00:4025                      
     256   00:4025                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     257   00:4025                      ; vdp access
     258   00:4025                      
     259   00:4025  (00:F3DF)           _vdpReg equ 0xF3DF
     260   00:4025  (00:F3AE)           LINL40	equ 0xF3AE
     261   00:4025                      
     262   00:4025                      ; e = screen mode
     263   00:4025                      _scr2:
     264   00:4025  3A E0 F3            	ld	a,(_vdpReg+1)
     265   00:4028  F6 02               	or 2
     266   00:402A  32 E0 F3            	ld	(_vdpReg+1),a
     267   00:402D                      
     268   00:402D  3E 02               	ld	a,2
     269   00:402F  CD 5F 00            	call 0x005f
     270   00:4032                      
     271   00:4032  C9                  	ret
     272   00:4033                      
     273   00:4033                      ; set sprites
     274   00:4033                      
     275   00:4033                      set_sprites:
     276   00:4033  76                  	halt
     277   00:4034                      	setvdpwvram 0x3800
     277   00:4034  F3                >  di
     277   00:4035                    >  if (value & 0xFF)
     277   00:4035                    ~   ld a,value & 0xFF
     277   00:4035                    ~  else
     277   00:4035  AF                >   xor a
     277   00:4036                    >  endif
     277   00:4036  D3 99             >  out (0x99),a
     277   00:4038  3E 78             >  ld a,0x40 + (value/256)
     277   00:403A  D3 99             >  out (0x99),a
     277   00:403C  FB                >  ei
     278   00:403D  21 00 A0            	ld	hl,test_spt
     279   00:4040  3E 05               	ld	a,:test_spt
     280   00:4042  CD 5D 40            	call	write_256
     281   00:4045  76                  	halt
     282   00:4046                      	setvdpwvram 0x1B00
     282   00:4046  F3                >  di
     282   00:4047                    >  if (value & 0xFF)
     282   00:4047                    ~   ld a,value & 0xFF
     282   00:4047                    ~  else
     282   00:4047  AF                >   xor a
     282   00:4048                    >  endif
     282   00:4048  D3 99             >  out (0x99),a
     282   00:404A  3E 5B             >  ld a,0x40 + (value/256)
     282   00:404C  D3 99             >  out (0x99),a
     282   00:404E  FB                >  ei
     283   00:404F  21 50 AF            	ld	hl,test_sat
     284   00:4052  3E 05               	ld	a,:test_sat
     285   00:4054  32 00 B0            	ld	(_bank4),a
     286   00:4057  01 98 80            	ld	bc,0x8098
     287   00:405A  ED B3               	otir
     288   00:405C  C9                  	ret
     289   00:405D                      
     290   00:405D                      write_256:
     291   00:405D  32 00 B0            	ld	(_bank4),a
     292   00:4060  01 98 00            	ld	bc,0x0098
     293   00:4063                      	repeat 8
     294   00:4063                    < 	otir
     295   00:4063                    < 	endrepeat
     295   00:4063  ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 
     296   00:4073  C9                  	ret
     297   00:4074                      
     298   00:4074                      cls:
     299   00:4074                      	setvdpwvram 0x1800
     299   00:4074  F3                >  di
     299   00:4075                    >  if (value & 0xFF)
     299   00:4075                    ~   ld a,value & 0xFF
     299   00:4075                    ~  else
     299   00:4075  AF                >   xor a
     299   00:4076                    >  endif
     299   00:4076  D3 99             >  out (0x99),a
     299   00:4078  3E 58             >  ld a,0x40 + (value/256)
     299   00:407A  D3 99             >  out (0x99),a
     299   00:407C  FB                >  ei
     300   00:407D  06 00               	ld	b,0
     301   00:407F  3E FF               	ld	a,255
     302   00:4081  D3 98               1:	out	(0x98),a
     303   00:4083  05                  	dec	b
     304   00:4084  20 FB               	jr	nz,1b
     305   00:4086                      
     306   00:4086                      	setvdpwvram 0x2000
     306   00:4086  F3                >  di
     306   00:4087                    >  if (value & 0xFF)
     306   00:4087                    ~   ld a,value & 0xFF
     306   00:4087                    ~  else
     306   00:4087  AF                >   xor a
     306   00:4088                    >  endif
     306   00:4088  D3 99             >  out (0x99),a
     306   00:408A  3E 60             >  ld a,0x40 + (value/256)
     306   00:408C  D3 99             >  out (0x99),a
     306   00:408E  FB                >  ei
     307   00:408F  06 00               	ld	b,0
     308   00:4091  AF                  	xor	a
     309   00:4092                      [8]	call	1f
     309   00:4092  CD CF 40 CD CF 40 CD CF 40 CD CF 40 CD CF 40 CD 
     309   00:40A2  CF 40 CD CF 40 CD CF 40 
     310   00:40AA                      	setvdpwvram 0x0000
     310   00:40AA  F3                >  di
     310   00:40AB                    >  if (value & 0xFF)
     310   00:40AB                    ~   ld a,value & 0xFF
     310   00:40AB                    ~  else
     310   00:40AB  AF                >   xor a
     310   00:40AC                    >  endif
     310   00:40AC  D3 99             >  out (0x99),a
     310   00:40AE  3E 40             >  ld a,0x40 + (value/256)
     310   00:40B0  D3 99             >  out (0x99),a
     310   00:40B2  FB                >  ei
     311   00:40B3  06 00               	ld	b,0
     312   00:40B5  AF                  	xor	a
     313   00:40B6                      [8]	call	1f
     313   00:40B6  CD CF 40 CD CF 40 CD F7 41 CD F7 41 CD F7 41 CD 
     313   00:40C6  F7 41 CD F7 41 CD F7 41 
     314   00:40CE  C9                  	ret
     315   00:40CF                      
     316   00:40CF  D3 98               1:	out	(0x98),a
     317   00:40D1  05                  	dec	b
     318   00:40D2  20 FB               	jr	nz,1b
     319   00:40D4  C9                  	ret
     320   00:40D5                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     321   00:40D5                      ; Initialise the tiles common to all banks
     322   00:40D5                      ;
     323   00:40D5                      vraminit:
     324   00:40D5  3E 04               	ld	a,:common_pattern
     325   00:40D7  32 00 B0            	ld (_bank4),a
     326   00:40DA  21 00 A0            	ld	hl,common_pattern
     327   00:40DD  3E 9E               	ld	a,CommonTiles
     328   00:40DF  11 00 08            	ld	de,0x0800
     329   00:40E2  CD E0 41            	call write_2k
     330   00:40E5                      
     331   00:40E5  21 00 A0            	ld	hl,common_pattern
     332   00:40E8  3E 9E               	ld	a,CommonTiles
     333   00:40EA  11 00 10            	ld	de,0x1000
     334   00:40ED  CD E0 41            	call write_2k
     335   00:40F0                      
     336   00:40F0  21 00 A0            	ld	hl,common_pattern
     337   00:40F3  3E 9E               	ld	a,CommonTiles
     338   00:40F5  11 00 28            	ld	de,0x2800
     339   00:40F8  CD E0 41            	call write_2k
     340   00:40FB                      
     341   00:40FB  21 00 A0            	ld	hl,common_pattern
     342   00:40FE  3E 9E               	ld	a,CommonTiles
     343   00:4100  11 00 30            	ld	de,0x3000
     344   00:4103  CD E0 41            	call write_2k
     345   00:4106                      
     346   00:4106  3E 04               	ld	a,:common_color
     347   00:4108  32 00 B0            	ld (_bank4),a
     348   00:410B  21 F0 A4            	ld	hl,common_color
     349   00:410E  3E 9E               	ld	a,CommonTiles
     350   00:4110  11 00 20            	ld	de,0x2000
     351   00:4113  CD E0 41            	call write_2k
     352   00:4116  21 F0 A4            	ld	hl,common_color
     353   00:4119  3E 9E               	ld	a,CommonTiles
     354   00:411B  11 00 00            	ld	de,0x0000
     355   00:411E  CD E0 41            	call write_2k
     356   00:4121  C9                  	ret
     357   00:4122                      
     358   00:4122                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     359   00:4122                      ;	load tile sets: only differences are loaded
     360   00:4122                      ;	Note: rom space could be optimised storing common tiles only once in a separate bank
     361   00:4122                      
     362   00:4122                      setvramp1:
     363   00:4122  CD 88 41            	call getbank	;->a
     364   00:4125  32 00 B0            	ld (_bank4),a
     365   00:4128  CD 94 41            	call getaddr	;->hl
     366   00:412B  CD A2 41            	call getsize	;->a
     367   00:412E  11 F0 0C            	ld	de,0x0800 + 8*CommonTiles
     368   00:4131  CD E0 41            	call write_2k
     369   00:4134                      
     370   00:4134  CD 94 41            	call getaddr	;->hl
     371   00:4137  CD A2 41            	call getsize	;->a
     372   00:413A  11 F0 14            	ld	de,0x1000 + 8*CommonTiles
     373   00:413D  CD E0 41            	call write_2k
     374   00:4140                      
     375   00:4140  CD 88 41            	call getbank	;->a
     376   00:4143  C6 04               	add	a,4			; colorbank = tilebank+4
     377   00:4145  32 00 B0            	ld (_bank4),a
     378   00:4148  CD 94 41            	call getaddr	;->hl
     379   00:414B  CD A2 41            	call getsize	;->a
     380   00:414E  11 F0 24            	ld	de,0x2000 + 8*CommonTiles
     381   00:4151  CD E0 41            	call write_2k
     382   00:4154  C9                  	ret
     383   00:4155                      
     384   00:4155                      setvramp0:
     385   00:4155  CD 88 41            	call getbank	;->a
     386   00:4158  32 00 B0            	ld (_bank4),a
     387   00:415B  CD 94 41            	call getaddr	;->hl
     388   00:415E  CD A2 41            	call getsize	;->a
     389   00:4161  11 F0 2C            	ld	de,0x2800 + 8*CommonTiles
     390   00:4164  CD E0 41            	call write_2k
     391   00:4167                      
     392   00:4167  CD 94 41            	call getaddr	;->hl
     393   00:416A  CD A2 41            	call getsize	;->a
     394   00:416D  11 F0 34            	ld	de,0x3000 + 8*CommonTiles
     395   00:4170  CD E0 41            	call write_2k
     396   00:4173                      
     397   00:4173  CD 88 41            	call getbank	;->a
     398   00:4176  C6 04               	add	a,4			; colorbank = tilebank+4
     399   00:4178  32 00 B0            	ld (_bank4),a
     400   00:417B  CD 94 41            	call getaddr	;->hl
     401   00:417E  CD A2 41            	call getsize	;->a
     402   00:4181  11 F0 04            	ld	de,0x0000 + 8*CommonTiles
     403   00:4184  CD E0 41            	call write_2k
     404   00:4187  C9                  	ret
     405   00:4188                      
     406   00:4188                      getbank:
     407   00:4188  ED 5B 12 E0         	ld	de,(phase)
     408   00:418C  21 B0 41            	ld	hl,tilebank
     409   00:418F  16 00               	ld	d,0
     410   00:4191  19                  	add	hl,de
     411   00:4192  7E                  	ld	a,(hl)
     412   00:4193  C9                  	ret
     413   00:4194                      getaddr:
     414   00:4194  ED 5B 12 E0         	ld	de,(phase)
     415   00:4198  21 D0 41            	ld	hl,tileaddress
     416   00:419B  16 00               	ld	d,0
     417   00:419D  19                  	add	hl,de
     418   00:419E  66                  	ld	h,(hl)
     419   00:419F  2E 00               	ld	l,0
     420   00:41A1  C9                  	ret
     421   00:41A2                      getsize:
     422   00:41A2  E5                  	push	hl
     423   00:41A3  ED 5B 12 E0         	ld	de,(phase)
     424   00:41A7  21 C0 41            	ld	hl,tilesize
     425   00:41AA  16 00               	ld	d,0
     426   00:41AC  19                  	add	hl,de
     427   00:41AD  7E                  	ld	a,(hl)
     428   00:41AE  E1                  	pop	hl
     429   00:41AF  C9                  	ret
     430   00:41B0                      
     431   00:41B0                      
     432   00:41B0                      	;	patternsxy
     433   00:41B0                      tilebank:
     434   00:41B0  08 08 08 08         	db	:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17,:patterns11_13_15_17
     435   00:41B4  09 09 09 09         	db	:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37,:patterns31_33_35_37
     436   00:41B8  0A 0A 0A 0A         	db	:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57,:patterns51_53_55_57
     437   00:41BC  0B 0B 0B 0B         	db	:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77,:patterns71_73_75_77
     438   00:41C0                      tilesize:
     439   00:41C0  1F 33 37 33         	db	TileSize11-CommonTiles,TileSize13-CommonTiles,TileSize15-CommonTiles,TileSize17-CommonTiles
     440   00:41C4  2F 60 60 5E         	db	TileSize31-CommonTiles,TileSize33-CommonTiles,TileSize35-CommonTiles,TileSize37-CommonTiles
     441   00:41C8  2D 60 61 61         	db	TileSize51-CommonTiles,TileSize53-CommonTiles,TileSize55-CommonTiles,TileSize57-CommonTiles
     442   00:41CC  33 60 61 60         	db	TileSize71-CommonTiles,TileSize73-CommonTiles,TileSize75-CommonTiles,TileSize77-CommonTiles
     443   00:41D0                      tileaddress:
     444   00:41D0  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     445   00:41D4  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     446   00:41D8  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     447   00:41DC  A0 A8 B0 B8         	db	(patterns_base+0*2*1024)/256,(patterns_base+1*2*1024)/256,(patterns_base+2*2*1024)/256,(patterns_base+3*2*1024)/256
     448   00:41E0                      
     449   00:41E0                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     450   00:41E0                      ; write 2K while ints are active from hl to de
     451   00:41E0                      ; in: de vram address
     452   00:41E0                      ;     hl ram address
     453   00:41E0                      ;	   a counter of 8 bytes chunks
     454   00:41E0                      write_2k:
     455   00:41E0  E5                  	push hl
     456   00:41E1  EB                  	ex	de,hl
     457   00:41E2  CB F4               	set	6,h
     458   00:41E4  0E 99               	ld	c,0x99
     459   00:41E6  11 08 00            	ld	de,8
     460   00:41E9  D9                  	exx
     461   00:41EA  E1                  	pop	hl		; ram source in HL'
     462   00:41EB  0E 98               	ld	c,0x98	; data port in c'
     463   00:41ED  F3                  2:	di
     464   00:41EE  D9                  	exx
     465   00:41EF  ED 69               	out (c),l
     466   00:41F1  ED 61               	out (c),h	;c = 0x99, HL with write setup bit set
     467   00:41F3  19                  	add hl,de	;de = 8
     468   00:41F4  D9                  	exx
     469   00:41F5  06 08               	ld b,8
     470   00:41F7  ED A3               1:	outi		;c' = 0x98
     471   00:41F9  C2 F7 41            	jp nz,1b
     472   00:41FC  FB                  	ei
     473   00:41FD  3D                  	dec a
     474   00:41FE  C2 ED 41            	jp nz,2b
     475   00:4201  C9                  	ret
     476   00:4202                      
     477   00:4202                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     478   00:4202                      ;	in xmap,ymap
     479   00:4202                      ;
     480   00:4202                      _plot_pnt:
     481   00:4202  3E 07               	ld	a,:metavec
     482   00:4204  32 00 B0            	ld	(_bank4),a
     483   00:4207                      
     484   00:4207  3A 12 E0            	ld	a,(phase)
     485   00:420A  C6 A0               	add	a,metavec/256
     486   00:420C  32 12 E0            	ld	(phase),a
     487   00:420F                      
     488   00:420F  21 00 C0            	ld	hl,buffer	; meta map in ram
     489   00:4212                      
     490   00:4212                      
     491   00:4212  3A 0F E0            	ld	a,(ymap+1)	; ymap 8.8
     492   00:4215  A7                  	and	a
     493   00:4216  28 07               	jr	z,1f
     494   00:4218  01 40 00            	ld	bc,LvlWidth
     495   00:421B  09                  2:	add	hl,bc
     496   00:421C  3D                  	dec a
     497   00:421D  20 FC               	jr	nz,2b
     498   00:421F                      1:
     499   00:421F  3A 0D E0            	ld	a,(xmap+1)	; xmap 8.8
     500   00:4222  5F                  	ld	e,a
     501   00:4223  16 00               	ld	d,0
     502   00:4225  19                  	add	hl,de
     503   00:4226  EB                  	ex	de,hl
     504   00:4227                      
     505   00:4227                      	setvdpwvram 0x1900
     505   00:4227  F3                >  di
     505   00:4228                    >  if (value & 0xFF)
     505   00:4228                    ~   ld a,value & 0xFF
     505   00:4228                    ~  else
     505   00:4228  AF                >   xor a
     505   00:4229                    >  endif
     505   00:4229  D3 99             >  out (0x99),a
     505   00:422B  3E 59             >  ld a,0x40 + (value/256)
     505   00:422D  D3 99             >  out (0x99),a
     505   00:422F  FB                >  ei
     506   00:4230  01 98 10            	ld	bc,0x1098
     507   00:4233  C5                  1:	push	bc
     508   00:4234                      	repeat 32
     509   00:4234                    < 	ld	a,(de)
     510   00:4234                    < 	ld	l,a
     511   00:4234                    < 	ld	a,(phase)
     512   00:4234                    < 	ld	h,a
     513   00:4234                    < 	outi         ; Send data pointed by HL to VDP port (reg.C preloaded
     514   00:4234                    < 	inc	de
     515   00:4234                    < 	endrepeat
     515   00:4234  1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED 
     515   00:4244  A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 
     515   00:4254  67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 
     515   00:4264  12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 
     515   00:4274  6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 
     515   00:4284  13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 
     515   00:4294  ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 
     515   00:42A4  E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 
     515   00:42B4  3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 
     515   00:42C4  1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED 
     515   00:42D4  A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 
     515   00:42E4  67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 
     515   00:42F4  12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 
     515   00:4304  6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 
     515   00:4314  13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 
     515   00:4324  ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 3A 12 
     515   00:4334  E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 1A 6F 
     515   00:4344  3A 12 E0 67 ED A3 13 1A 6F 3A 12 E0 67 ED A3 13 
     516   00:4354                      
     517   00:4354  21 20 00            	ld	hl,LvlWidth-32
     518   00:4357  19                  	add	hl,de
     519   00:4358  EB                  	ex	de,hl
     520   00:4359                      
     521   00:4359  C1                  	pop	bc
     522   00:435A  05                  	dec b
     523   00:435B  C2 33 42            	jp nz,1b
     524   00:435E                      
     525   00:435E  C9                  	ret
     526   00:435F                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     527   00:435F                      
     528   00:435F                      ;          defb 0x02 ; Reg# 0 000000[M3][EV]
     529   00:435F                      ;          defb 0x62 ; Reg# 1 [4/16k][BLANK][IE][M1][M2]0[SIZE][MAG]
     530   00:435F                      ;          defb 0x06 ; Reg# 2 0000[NAME TABLE BASE ADDRESS]          = 1800h
     531   00:435F                      
     532   00:435F                      ;          defb 0x9F ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; hybrid mode for colors
     533   00:435F                      ;          defb 0xFF ; Reg# 3 [COLOR BASE ADDRESS]                   = 2000h ; regular mode for colors
     534   00:435F                      
     535   00:435F                      ;          defb 0x1F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; hybrid mode for colors
     536   00:435F                      ;          defb 0x7F ; Reg# 3 [COLOR BASE ADDRESS]                   = 0000h ; regular mode for colors
     537   00:435F                      
     538   00:435F                      ;          defb 0x00 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; hybrid mode for patterns
     539   00:435F                      ;          defb 0x03 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 0000h ; regular mode for patterns
     540   00:435F                      
     541   00:435F                      ;          defb 0x04 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; hybrid mode for patterns
     542   00:435F                      ;          defb 0x07 ; Reg# 4 00000[PATTERN GENERATOR BASE ADDRESS]  = 2000h ; regular mode for patterns
     543   00:435F                      
     544   00:435F                      ;          defb 0x36 ; Reg# 5 0[SPRITE ATTRIBUTE TABLE BASE ADDRESS] = 1b00h
     545   00:435F                      ;          defb 0x07 ; Reg# 6 00000[SPRITE PTRN GNRTR BASE ADDRESS]  = 3800h
     546   00:435F                      ;          defb 0x01 ; Reg# 7 [TEXT COLOR 4bts][BACKDROP COLOR 4bts]
     547   00:435F                      
     548   00:435F                      
     549   00:435F                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     550   00:435F                      disp_page1:			; page 1 active
     551   00:435F                      	setVdp 3,0x9F	; 	colours at 0x2000	(hybrid)
     551   00:435F  F3                >  di
     551   00:4360  3E 9F             >  ld a,value
     551   00:4362  D3 99             >  out (0x99),a
     551   00:4364  3E 03             >  ld a,register
     551   00:4366  F6 80             >  or 0x80
     551   00:4368  D3 99             >  out (0x99),a
     551   00:436A  FB                >  ei
     552   00:436B                      	setVdp 4,0x03	;	patterns at 0x0000	(regular: used 0x0800 0x1000)
     552   00:436B  F3                >  di
     552   00:436C  3E 03             >  ld a,value
     552   00:436E  D3 99             >  out (0x99),a
     552   00:4370  3E 04             >  ld a,register
     552   00:4372  F6 80             >  or 0x80
     552   00:4374  D3 99             >  out (0x99),a
     552   00:4376  FB                >  ei
     553   00:4377  C9                  	ret
     554   00:4378                      
     555   00:4378                      disp_page0:			; page 0 active
     556   00:4378                      	setVdp 3,0x1F	; 	colours at 0x0000	(hybrid)
     556   00:4378  F3                >  di
     556   00:4379  3E 1F             >  ld a,value
     556   00:437B  D3 99             >  out (0x99),a
     556   00:437D  3E 03             >  ld a,register
     556   00:437F  F6 80             >  or 0x80
     556   00:4381  D3 99             >  out (0x99),a
     556   00:4383  FB                >  ei
     557   00:4384                      	setVdp 4,0x07	;	patterns at 0x2000	(regular: used 0x2800 0x3000)
     557   00:4384  F3                >  di
     557   00:4385  3E 07             >  ld a,value
     557   00:4387  D3 99             >  out (0x99),a
     557   00:4389  3E 04             >  ld a,register
     557   00:438B  F6 80             >  or 0x80
     557   00:438D  D3 99             >  out (0x99),a
     557   00:438F  FB                >  ei
     558   00:4390  C9                  	ret
     559   00:4391                      
     560   00:4391                      
     561   00:4391                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     562   00:4391                      ; set pages and subslot
     563   00:4391                      ;
     564   00:4391                      rominit:
     565   00:4391  CD 38 01            	call    0x138
     566   00:4394  0F                  	rrca
     567   00:4395  0F                  	rrca
     568   00:4396  E6 03               	and     0x03
     569   00:4398  4F                  	ld      c,a
     570   00:4399  06 00               	ld      b,0
     571   00:439B  21 C1 FC            	ld      hl,0xfcc1
     572   00:439E  09                  	add     hl,bc
     573   00:439F  B6                  	or      (hl)
     574   00:43A0  47                  	ld      b,a
     575   00:43A1  23                  	inc     hl
     576   00:43A2  23                  	inc     hl
     577   00:43A3  23                  	inc     hl
     578   00:43A4  23                  	inc     hl
     579   00:43A5  7E                  	ld      a,(hl)
     580   00:43A6  E6 0C               	and     0x0c
     581   00:43A8  B0                  	or      b
     582   00:43A9                      
     583   00:43A9  26 80               	ld      h,0x80
     584   00:43AB  CD 24 00            	call    0x24
     585   00:43AE                      
     586   00:43AE                      	; now we have:
     587   00:43AE                      	; page 0 	- bios
     588   00:43AE                      	; page 1,2	- megarom mapper
     589   00:43AE                      	; page 3	- RAM
     590   00:43AE                      
     591   00:43AE                      	; init megarom mapper
     592   00:43AE  AF                  	xor	a
     593   00:43AF  32 00 50            	ld	(_bank1),a
     594   00:43B2  3C                  	inc	a
     595   00:43B3  32 00 70            	ld	(_bank2),a
     596   00:43B6  3C                  	inc	a
     597   00:43B7  32 00 90            	ld	(_bank3),a
     598   00:43BA  3C                  	inc	a
     599   00:43BB  32 00 B0            	ld	(_bank4),a
     600   00:43BE                      
     601   00:43BE  C9                  	ret
     602   00:43BF                      
     603   00:43BF                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     604   00:43BF                      ; ROM initialisation
     605   00:43BF                      
     606   00:43BF                      initmain:
     607   00:43BF                      
     608   00:43BF  FB                  	ei
     609   00:43C0  76                  	halt
     610   00:43C1  F3                  	di
     611   00:43C2  CD 91 43            	call 	rominit
     612   00:43C5                      
     613   00:43C5                      	; now the first 32KB of the megarom are active
     614   00:43C5                      
     615   00:43C5                      	;clear 8K RAM
     616   00:43C5  01 FF 1F            	ld	bc,1024*8-1
     617   00:43C8  21 00 C0            	ld	hl,0xc000
     618   00:43CB  11 01 C0            	ld	de,0xc001
     619   00:43CE                      
     620   00:43CE  36 00               	ld	(hl),0
     621   00:43D0  ED B0               	ldir
     622   00:43D2                      
     623   00:43D2                      	; screen 2
     624   00:43D2  CD 25 40            	call _scr2
     625   00:43D5                      
     626   00:43D5  3E 00               	ld	a,0
     627   00:43D7  1E 07               	ld	e,7
     628   00:43D9  CD 1B 40            	call	_setvdpreg
     629   00:43DC                      
     630   00:43DC  76                  	halt
     631   00:43DD  CD 74 40            	call	cls
     632   00:43E0  CD 33 40            	call	set_sprites
     633   00:43E3                      
     634   00:43E3                      	; move meta map in ram
     635   00:43E3  3E 06               	ld	a,:metamap
     636   00:43E5  32 00 B0            	ld	(_bank4),a
     637   00:43E8  01 C0 13            	ld	bc,LvlWidth*LvlHeigh
     638   00:43EB  21 00 A0            	ld	hl,metamap
     639   00:43EE  11 00 C0            	ld	de,buffer
     640   00:43F1  ED B0               	ldir
     641   00:43F3                      
     642   00:43F3  21 00 00            	ld	hl,0
     643   00:43F6  22 0C E0            	ld	(xmap),hl
     644   00:43F9  21 00 00            	ld	hl,0
     645   00:43FC  22 0E E0            	ld	(ymap),hl
     646   00:43FF  AF                  	xor a
     647   00:4400  32 10 E0            	ld	(dxmap),a
     648   00:4403  32 11 E0            	ld	(dymap),a
     649   00:4406                      
     650   00:4406  CD D5 40            	call	vraminit		; load common tiles
     651   00:4409                      
     652   00:4409                      mainloop:
     653   00:4409                      
     654   00:4409  76                  	halt
     655   00:440A  CD 78 43            	call 	disp_page0
     656   00:440D  CD 02 42            	call	_plot_pnt
     657   00:4410                      
     658   00:4410  CD 7B 44            	call	sub_main
     659   00:4413  CD 22 41            	call	setvramp1
     660   00:4416                      
     661   00:4416  76                  	halt
     662   00:4417  CD 5F 43            	call 	disp_page1
     663   00:441A  CD 02 42            	call	_plot_pnt
     664   00:441D                      
     665   00:441D  CD 7B 44            	call	sub_main
     666   00:4420  CD 55 41            	call	setvramp0
     667   00:4423                      
     668   00:4423  C3 09 44            	jp mainloop
     669   00:4426                      
     670   00:4426                      dxdycontrol:
     671   00:4426  7D                  	ld  a,l
     672   00:4427  E6 80               	and 0x80    ; right
     673   00:4429  20 0C               	jr  nz,1f
     674   00:442B  3A 10 E0            	ld  a,(dxmap)
     675   00:442E  FE 80               	cp  maxspeed        ; MAX SPEED
     676   00:4430  28 05               	jr  z,1f
     677   00:4432  C6 01               	add a,maxspeedstep
     678   00:4434  32 10 E0            	ld  (dxmap),a
     679   00:4437                      1:
     680   00:4437  7D                  	ld  a,l
     681   00:4438  E6 10               	and 0x10    ; left
     682   00:443A  20 0C               	jr  nz,1f
     683   00:443C  3A 10 E0            	ld  a,(dxmap)
     684   00:443F  FE 80               	cp  -maxspeed       ; MAX SPEED
     685   00:4441  28 05               	jr  z,1f
     686   00:4443  C6 FF               	add a,-maxspeedstep
     687   00:4445  32 10 E0            	ld  (dxmap),a
     688   00:4448                      1:
     689   00:4448                      	; y position
     690   00:4448  7D                  	ld  a,l
     691   00:4449  E6 20               	and 0x20    ; up
     692   00:444B  20 0C               	jr  nz,1f
     693   00:444D  3A 11 E0            	ld  a,(dymap)
     694   00:4450  FE 80               	cp  -maxspeed        ; MAX SPEED
     695   00:4452  28 05               	jr  z,1f
     696   00:4454  C6 FF               	add a,-maxspeedstep
     697   00:4456  32 11 E0            	ld  (dymap),a
     698   00:4459                      1:
     699   00:4459  7D                  	ld  a,l
     700   00:445A  E6 40               	and 0x40    ; down
     701   00:445C  20 0C               	jr  nz,1f
     702   00:445E  3A 11 E0            	ld  a,(dymap)
     703   00:4461  FE 80               	cp  maxspeed       ; MAX SPEED
     704   00:4463  28 05               	jr  z,1f
     705   00:4465  C6 01               	add a,maxspeedstep
     706   00:4467  32 11 E0            	ld  (dymap),a
     707   00:446A                      1:
     708   00:446A  C9                  	ret
     709   00:446B                      
     710   00:446B                      stopx:
     711   00:446B  AF                  	xor	a
     712   00:446C  32 10 E0            	ld  (dxmap),a
     713   00:446F  21 00 00            	ld	hl,0
     714   00:4472  C9                  	ret
     715   00:4473                      stopy:
     716   00:4473  AF                  	xor	a
     717   00:4474  32 11 E0            	ld  (dymap),a
     718   00:4477  21 00 00            	ld	hl,0
     719   00:447A  C9                  	ret
     720   00:447B                      
     721   00:447B                      sub_main:
     722   00:447B                      	; x speed control
     723   00:447B  1E 08               	ld  e,8
     724   00:447D  CD 10 40            	call    checkkbd
     725   00:4480  CD 26 44            	call	dxdycontrol
     726   00:4483                      
     727   00:4483  ED 5B 0C E0         	ld  de,(xmap)		; FP 4.4
     728   00:4487  3A 10 E0            	ld  a,(dxmap)
     729   00:448A  6F                  	ld  l,a
     730   00:448B  87                  	add a,a
     731   00:448C  9F                  	sbc a,a
     732   00:448D  67                  	ld  h,a
     733   00:448E  29 29 29 29         [4]	add	hl,hl
     734   00:4492  A7                  	and a
     735   00:4493  ED 5A               	adc hl,de
     736   00:4495  FC 6B 44            	call	m,stopx
     737   00:4498  11 C0 1F            	ld	de,(LvlWidth-32)*256-64
     738   00:449B  A7                  	and a
     739   00:449C  ED 52               	sbc	hl,de
     740   00:449E  F4 6B 44            	call	p,stopx
     741   00:44A1  19                  	add	hl,de
     742   00:44A2  22 0C E0            	ld  (xmap),hl
     743   00:44A5                      
     744   00:44A5  ED 5B 0E E0         	ld  de,(ymap)		; FP 4.4
     745   00:44A9  3A 11 E0            	ld  a,(dymap)
     746   00:44AC  6F                  	ld  l,a
     747   00:44AD  87                  	add a,a
     748   00:44AE  9F                  	sbc a,a
     749   00:44AF  67                  	ld  h,a
     750   00:44B0  29 29 29 29         [4]	add	hl,hl
     751   00:44B4  A7                  	and	a
     752   00:44B5  ED 5A               	adc hl,de
     753   00:44B7  FC 73 44            	call	m,stopy
     754   00:44BA  11 C0 3E            	ld	de,(LvlHeigh-16)*256-64
     755   00:44BD  A7                  	and a
     756   00:44BE  ED 52               	sbc	hl,de
     757   00:44C0  F4 73 44            	call	p,stopy
     758   00:44C3  19                  	add	hl,de
     759   00:44C4  22 0E E0            	ld  (ymap),hl
     760   00:44C7                      
     761   00:44C7                      
     762   00:44C7  3A 0C E0            	ld	a,(xmap)	; xmap 8.8
     763   00:44CA  07 07               [2]	rlca
     764   00:44CC  E6 03               	and		%00000011
     765   00:44CE  47                  	ld	b,a
     766   00:44CF  3A 0E E0            	ld	a,(ymap)	; ymap 8.8
     767   00:44D2  07 07 07 07         [4]	rlca
     768   00:44D6  E6 0C               	and		%00001100
     769   00:44D8  B0                  	or	b
     770   00:44D9  32 12 E0            	ld	(phase),a
     771   00:44DC  C9                  	ret
     772   00:44DD                      
     773   00:44DD                      
     774   00:44DD                      
     775   00:44DD                      
     776   00:44DD                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     777   00:44DD                      ;	convert a VRAM position pointed by HL
     778   00:44DD                      ;	in a VRAM address with offset in DE
     779   00:44DD                      ;	sets the VDP for write
     780   00:44DD                      ;	in:
     781   00:44DD                      ;		HL -> VRAM Position
     782   00:44DD                      ;		DE = VRAM Offset
     783   00:44DD                      ;	out:
     784   00:44DD                      ;		HL++
     785   00:44DD                      
     786   00:44DD                      setvramaddr:
     787   00:44DD  7E                  	ld	a,(hl)
     788   00:44DE  E5                  	push hl
     789   00:44DF  6F                  	ld	l,a
     790   00:44E0  26 00               	ld	h,0
     791   00:44E2  29                  	add	hl,hl
     792   00:44E3  29                  	add	hl,hl
     793   00:44E4  29                  	add	hl,hl
     794   00:44E5  19                  	add	hl,de
     795   00:44E6  7D                  	ld	a,l
     796   00:44E7  F3                  	di
     797   00:44E8  D3 99               	out	(0x99),a
     798   00:44EA  7C                  	ld	a,h
     799   00:44EB  F6 40               	or	0x40
     800   00:44ED  D3 99               	out	(0x99),a
     801   00:44EF  FB                  	ei
     802   00:44F0  E1                  	pop	hl
     803   00:44F1  23                  	inc	hl
     804   00:44F2  C9                  	ret
     805   00:44F3                      
     806   00:44F3                      
     807   00:44F3                      

    LABELS
-------------------------------------------------
00:00000040   LvlWidth
00:0000004F   LvlHeigh
00:0000009E   CommonTiles
00:000000BD   TileSize11
00:000000D1   TileSize13
00:000000D5   TileSize15
00:000000D1   TileSize17
00:000000CD   TileSize31
00:000000FE   TileSize33
00:000000FE   TileSize35
00:000000FC   TileSize37
00:000000CB   TileSize51
00:000000FE   TileSize53
00:000000FF   TileSize55
00:000000FF   TileSize57
00:000000D1   TileSize71
00:000000FE   TileSize73
00:000000FF   TileSize75
00:000000FE   TileSize77
04:0000A000   common_pattern
04:0000A4F0   common_color
05:0000A000   test_spt
05:0000AF50   test_sat
05:00000080 S counter
06:0000A000   metamap
07:0000A000   metavec
08:0000A000   patterns_base
08:0000A000   patterns11_13_15_17
09:0000A000   patterns31_33_35_37
0A:0000A000   patterns51_53_55_57
0B:0000A000   patterns71_73_75_77
0C:0000A000 X colors_base
0C:0000A000 X colors11_13_15_17
0D:0000A000 X colors31_33_35_37
0E:0000A000 X colors51_53_55_57
0F:0000A000 X colors71_73_75_77
0F:00005000   _bank1
0F:00007000   _bank2
0F:00009000   _bank3
0F:0000B000   _bank4
0F:00000000 X _PCT
0F:00002000 X _PGT
0F:00000080   maxspeed
0F:00000001   maxspeedstep
0F:0000C000   buffer
0F:0000E000 X slotvar
0F:0000E001 X slotram
0F:0000E002 X msxtype
0F:0000E003 X palette
0F:0000E004 X vsf
0F:0000E005 X cnt
0F:0000E006 X muteflag
0F:0000E007 X SLOT
0F:0000E008 X PAGE1RAM
0F:0000E009 X RAMSLOT
0F:0000E00A X SCC
0F:0000E00B X SUB
0F:0000E00C   xmap
0F:0000E00E   ymap
0F:0000E010   dxmap
0F:0000E011   dymap
0F:0000E012   phase
00:000000A9   i8255portb
00:000000AA   i8255portc
00:00004010   checkkbd
00:0000401B   _setvdpreg
00:0000F3DF   _vdpReg
00:0000F3AE X LINL40
00:00004025   _scr2
00:00004033   set_sprites
00:0000405D   write_256
00:00004074   cls
00:000040D5   vraminit
00:00004122   setvramp1
00:00004155   setvramp0
00:00004188   getbank
00:00004194   getaddr
00:000041A2   getsize
00:000041B0   tilebank
00:000041C0   tilesize
00:000041D0   tileaddress
00:000041E0   write_2k
00:00004202   _plot_pnt
00:0000435F   disp_page1
00:00004378   disp_page0
00:00004391   rominit
00:000043BF   initmain
00:00004409   mainloop
00:00004426   dxdycontrol
00:0000446B   stopx
00:00004473   stopy
00:0000447B   sub_main
00:000044DD X setvramaddr


 Output: src\main128.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: Scrll8way128.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00002000  Used: 000004F3

   Address   Length Align   Label
   00004000    1267         checkkbd
   000044F3    6925       <empty>

 Page: 01
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 02
  Org: 00008000  Size: 00002000  Used: 00000000

   00008000    8192       <empty>

 Page: 03
  Org: 0000A000  Size: 00002000  Used: 00000000

   0000A000    8192       <empty>

 Page: 04
  Org: 0000A000  Size: 00002000  Used: 000009E0

   Address   Length Align   Label
   0000A000    2528         common_pattern
   0000A9E0    5664       <empty>

 Page: 05
  Org: 0000A000  Size: 00002000  Used: 00000FD0

   Address   Length Align   Label
   0000A000    4048         test_spt
   0000AFD0    4144       <empty>

 Page: 06
  Org: 0000A000  Size: 00002000  Used: 000013C0

   Address   Length Align   Label
   0000A000    5056         metamap
   0000B3C0    3136       <empty>

 Page: 07
  Org: 0000A000  Size: 00002000  Used: 00001000

   Address   Length Align   Label
   0000A000    4096         metavec
   0000B000    4096       <empty>

 Page: 08
  Org: 0000A000  Size: 00002000  Used: 00001B10

   Address   Length Align   Label
   0000A000    6928         patterns_base
   0000BB10    1264       <empty>

 Page: 09
  Org: 0000A000  Size: 00002000  Used: 00001B10

   Address   Length Align   Label
   0000A000    6928         patterns31_33_35_37
   0000BB10    1264       <empty>

 Page: 0A
  Org: 0000A000  Size: 00002000  Used: 00001B10

   Address   Length Align   Label
   0000A000    6928         patterns51_53_55_57
   0000BB10    1264       <empty>

 Page: 0B
  Org: 0000A000  Size: 00002000  Used: 00001B10

   Address   Length Align   Label
   0000A000    6928         patterns71_73_75_77
   0000BB10    1264       <empty>

 Page: 0C
  Org: 0000A000  Size: 00002000  Used: 00001B10

   Address   Length Align   Label
   0000A000    6928         colors_base
   0000BB10    1264       <empty>

 Page: 0D
  Org: 0000A000  Size: 00002000  Used: 00001B10

   Address   Length Align   Label
   0000A000    6928         colors31_33_35_37
   0000BB10    1264       <empty>

 Page: 0E
  Org: 0000A000  Size: 00002000  Used: 00001B10

   Address   Length Align   Label
   0000A000    6928         colors51_53_55_57
   0000BB10    1264       <empty>

 Page: 0F
  Org: 0000A000  Size: 00002000  Used: 00001B10

   Address   Length Align   Label
   0000A000    6928         colors71_73_75_77
   0000BB10    1264       <empty>
